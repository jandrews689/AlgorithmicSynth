ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"WarpDrive.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZSt3expf,"axG",%progbits,_ZSt3expf,comdat
  17              		.align	1
  18              		.weak	_ZSt3expf
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	_ZSt3expf:
  26              	.LFB164:
  27              		.file 1 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** /** @file include/cmath
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 2


  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  as macros in C).
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  */
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #pragma GCC system_header
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include_next <math.h>
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef div
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acos
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asin
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan2
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ceil
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cos
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cosh
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fabs
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef floor
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmod
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef frexp
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ldexp
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log10
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef modf
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef pow
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sin
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sinh
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sqrt
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tan
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tanh
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** extern "C++"
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** {
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acos;
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(float __x)
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosf(__x); }
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 3


  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(long double __x)
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asin;
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(float __x)
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(long double __x)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(float __x)
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(long double __x)
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan2;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 4


 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ceil;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(float __x)
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(long double __x)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     ceil(_Tp __x)
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cos;
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(float __x)
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(long double __x)
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     cos(_Tp __x)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cos(__x); }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cosh;
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 5


 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(float __x)
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(long double __x)
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     cosh(_Tp __x)
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp;
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(float __x)
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expf(__x); }
  28              		.loc 1 223 3
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 87ED010A 		vstr.32	s0, [r7, #4]
  41              		.loc 1 223 26
  42 000a 97ED010A 		vldr.32	s0, [r7, #4]
  43 000e FFF7FEFF 		bl	expf
  44 0012 F0EE407A 		vmov.f32	s15, s0
  45              		.loc 1 223 33
  46 0016 B0EE670A 		vmov.f32	s0, s15
  47 001a 0837     		adds	r7, r7, #8
  48              		.cfi_def_cfa_offset 8
  49 001c BD46     		mov	sp, r7
  50              		.cfi_def_cfa_register 13
  51              		@ sp needed
  52 001e 80BD     		pop	{r7, pc}
  53              		.cfi_endproc
  54              	.LFE164:
  56              		.section	.text._ZSt3logf,"axG",%progbits,_ZSt3logf,comdat
  57              		.align	1
  58              		.weak	_ZSt3logf
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu fpv5-d16
  64              	_ZSt3logf:
  65              	.LFB182:
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 6


 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(long double __x)
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expl(__x); }
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     exp(_Tp __x)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_exp(__x); }
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fabs;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(float __x)
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsf(__x); }
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(long double __x)
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsl(__x); }
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fabs(_Tp __x)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_fabs(__x); }
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::floor;
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(float __x)
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorf(__x); }
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(long double __x)
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorl(__x); }
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     floor(_Tp __x)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_floor(__x); }
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmod;
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(float __x, float __y)
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodf(__x, __y); }
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 7


 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(long double __x, long double __y)
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodl(__x, __y); }
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fmod(_Tp __x, _Up __y)
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fmod(__type(__x), __type(__y));
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::frexp;
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(float __x, int* __exp)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(long double __x, int* __exp)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     frexp(_Tp __x, int* __exp)
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_frexp(__x, __exp); }
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ldexp;
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(float __x, int __exp)
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(long double __x, int __exp)
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     ldexp(_Tp __x, int __exp)
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log;
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 8


 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log(float __x)
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logf(__x); }
  66              		.loc 1 339 3
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 8
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70 0000 80B5     		push	{r7, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 14, -4
  74 0002 82B0     		sub	sp, sp, #8
  75              		.cfi_def_cfa_offset 16
  76 0004 00AF     		add	r7, sp, #0
  77              		.cfi_def_cfa_register 7
  78 0006 87ED010A 		vstr.32	s0, [r7, #4]
  79              		.loc 1 339 26
  80 000a 97ED010A 		vldr.32	s0, [r7, #4]
  81 000e FFF7FEFF 		bl	logf
  82 0012 F0EE407A 		vmov.f32	s15, s0
  83              		.loc 1 339 33
  84 0016 B0EE670A 		vmov.f32	s0, s15
  85 001a 0837     		adds	r7, r7, #8
  86              		.cfi_def_cfa_offset 8
  87 001c BD46     		mov	sp, r7
  88              		.cfi_def_cfa_register 13
  89              		@ sp needed
  90 001e 80BD     		pop	{r7, pc}
  91              		.cfi_endproc
  92              	.LFE182:
  94              		.section	.rodata._ZStL19piecewise_construct,"a"
  95              		.align	2
  98              	_ZStL19piecewise_construct:
  99 0000 00       		.space	1
 100              		.section	.text._ZL20__gthread_key_deletei,"ax",%progbits
 101              		.align	1
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 105              		.fpu fpv5-d16
 107              	_ZL20__gthread_key_deletei:
 108              	.LFB1226:
 109              		.file 2 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\th
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Threads compatibility routines for libgcc2 and libobjc.  */
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Compile this one with gcc.  */
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** This file is part of GCC.
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** GCC is free software; you can redistribute it and/or modify it under
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** the terms of the GNU General Public License as published by the Free
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** Software Foundation; either version 3, or (at your option) any later
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** version.
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** GCC is distributed in the hope that it will be useful, but WITHOUT ANY
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** WARRANTY; without even the implied warranty of MERCHANTABILITY or
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** for more details.
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 9


  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** Under Section 7 of GPL version 3, you are granted additional
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** permissions described in the GCC Runtime Library Exception, version
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 3.1, as published by the Free Software Foundation.
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** You should have received a copy of the GNU General Public License and
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** a copy of the GCC Runtime Library Exception along with this program;
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** <http://www.gnu.org/licenses/>.  */
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** #ifndef _GLIBCXX_GCC_GTHR_SINGLE_H
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** #define _GLIBCXX_GCC_GTHR_SINGLE_H
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Just provide compatibility for mutex handling.  */
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** typedef int __gthread_key_t;
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** typedef int __gthread_once_t;
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** typedef int __gthread_mutex_t;
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** typedef int __gthread_recursive_mutex_t;
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** #define __GTHREAD_ONCE_INIT 0
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** #define __GTHREAD_MUTEX_INIT 0
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** #define __GTHREAD_MUTEX_INIT_FUNCTION(mx) do {} while (0)
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** #define __GTHREAD_RECURSIVE_MUTEX_INIT 0
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** #define _GLIBCXX_UNUSED __attribute__((__unused__))
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** #ifdef _LIBOBJC
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Thread local storage for a single thread */
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static void *thread_local_storage = NULL;
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Backend initialization functions */
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Initialize the threads subsystem.  */
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_init_thread_system (void)
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   /* No thread support available */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return -1;
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Close the threads subsystem.  */
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_close_thread_system (void)
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   /* No thread support available */
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return -1;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Backend thread functions */
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Create a new thread of execution.  */
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline objc_thread_t
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_thread_detach (void (* func)(void *), void * arg _GLIBCXX_UNUSED)
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   /* No thread support available */
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 10


  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return NULL;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Set the current thread's priority.  */
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_thread_set_priority (int priority _GLIBCXX_UNUSED)
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   /* No thread support available */
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return -1;
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Return the current thread's priority.  */
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_thread_get_priority (void)
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return OBJC_THREAD_INTERACTIVE_PRIORITY;
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Yield our process time to another thread.  */
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline void
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_thread_yield (void)
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Terminate the current thread.  */
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_thread_exit (void)
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   /* No thread support available */
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   /* Should we really exit the program */
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   /* exit (&__objc_thread_exit_status); */
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return -1;
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Returns an integer value which uniquely describes a thread.  */
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline objc_thread_t
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_thread_id (void)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   /* No thread support, use 1.  */
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return (objc_thread_t) 1;
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Sets the thread's local storage pointer.  */
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_thread_set_data (void *value)
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   thread_local_storage = value;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Returns the thread's local storage pointer.  */
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline void *
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_thread_get_data (void)
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return thread_local_storage;
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 11


 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Backend mutex functions */
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Allocate a mutex.  */
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_mutex_allocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Deallocate a mutex.  */
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_mutex_deallocate (objc_mutex_t mutex _GLIBCXX_UNUSED)
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Grab a lock on a mutex.  */
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_mutex_lock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   /* There can only be one thread, so we always get the lock */
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Try to grab a lock on a mutex.  */
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_mutex_trylock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   /* There can only be one thread, so we always get the lock */
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Unlock the mutex */
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_mutex_unlock (objc_mutex_t mutex _GLIBCXX_UNUSED)
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Backend condition mutex functions */
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Allocate a condition.  */
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_condition_allocate (objc_condition_t condition _GLIBCXX_UNUSED)
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Deallocate a condition.  */
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_condition_deallocate (objc_condition_t condition _GLIBCXX_UNUSED)
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Wait on the condition */
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 12


 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_condition_wait (objc_condition_t condition _GLIBCXX_UNUSED,
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 			       objc_mutex_t mutex _GLIBCXX_UNUSED)
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Wake up all threads waiting on this condition.  */
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_condition_broadcast (objc_condition_t condition _GLIBCXX_UNUSED)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** /* Wake up one thread waiting on this condition.  */
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_objc_condition_signal (objc_condition_t condition _GLIBCXX_UNUSED)
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** #else /* _LIBOBJC */
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_active_p (void)
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_once (__gthread_once_t *__once _GLIBCXX_UNUSED, void (*__func) (void) _GLIBCXX_UNUSED)
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static inline int _GLIBCXX_UNUSED
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_key_create (__gthread_key_t *__key _GLIBCXX_UNUSED, void (*__func) (void *) _GLIBCXX_UNUS
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** 
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** static int _GLIBCXX_UNUSED
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** __gthread_key_delete (__gthread_key_t __key _GLIBCXX_UNUSED)
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** {
 110              		.loc 2 230 1
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 8
 113              		@ frame_needed = 1, uses_anonymous_args = 0
 114              		@ link register save eliminated.
 115 0000 80B4     		push	{r7}
 116              		.cfi_def_cfa_offset 4
 117              		.cfi_offset 7, -4
 118 0002 83B0     		sub	sp, sp, #12
 119              		.cfi_def_cfa_offset 16
 120 0004 00AF     		add	r7, sp, #0
 121              		.cfi_def_cfa_register 7
 122 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 13


 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h ****   return 0;
 123              		.loc 2 231 10
 124 0008 0023     		movs	r3, #0
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\arm-none-eabi\thumb\v7e-m+dp\hard\bits\gthr-default.h **** }
 125              		.loc 2 232 1
 126 000a 1846     		mov	r0, r3
 127 000c 0C37     		adds	r7, r7, #12
 128              		.cfi_def_cfa_offset 4
 129 000e BD46     		mov	sp, r7
 130              		.cfi_def_cfa_register 13
 131              		@ sp needed
 132 0010 5DF8047B 		ldr	r7, [sp], #4
 133              		.cfi_restore 7
 134              		.cfi_def_cfa_offset 0
 135 0014 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE1226:
 139              		.section	.rodata._ZN7daisyspL9kRandFracE,"a"
 140              		.align	2
 143              	_ZN7daisyspL9kRandFracE:
 144 0000 00000030 		.word	805306368
 145              		.section	.rodata._ZN7daisyspL11kOneTwelfthE,"a"
 146              		.align	2
 149              	_ZN7daisyspL11kOneTwelfthE:
 150 0000 ABAAAA3D 		.word	1034594987
 151              		.section	.text._ZN7daisysp7OnePoleC2Ev,"axG",%progbits,_ZN7daisysp7OnePoleC5Ev,comdat
 152              		.align	1
 153              		.weak	_ZN7daisysp7OnePoleC2Ev
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu fpv5-d16
 159              	_ZN7daisysp7OnePoleC2Ev:
 160              	.LFB3269:
 161              		.file 3 "../../DaisySP//Source/Filters/onepole.h"
   1:../../DaisySP//Source/Filters/onepole.h **** /*
   2:../../DaisySP//Source/Filters/onepole.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../../DaisySP//Source/Filters/onepole.h **** 
   4:../../DaisySP//Source/Filters/onepole.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Filters/onepole.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Filters/onepole.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Filters/onepole.h **** */
   8:../../DaisySP//Source/Filters/onepole.h **** 
   9:../../DaisySP//Source/Filters/onepole.h **** #ifndef DSY_ONEPOLE_H
  10:../../DaisySP//Source/Filters/onepole.h **** #define DSY_ONEPOLE_H
  11:../../DaisySP//Source/Filters/onepole.h **** 
  12:../../DaisySP//Source/Filters/onepole.h **** #include "Utility/dsp.h"
  13:../../DaisySP//Source/Filters/onepole.h **** #include <cmath>
  14:../../DaisySP//Source/Filters/onepole.h **** #include <algorithm>
  15:../../DaisySP//Source/Filters/onepole.h **** 
  16:../../DaisySP//Source/Filters/onepole.h **** namespace daisysp
  17:../../DaisySP//Source/Filters/onepole.h **** {
  18:../../DaisySP//Source/Filters/onepole.h **** /**         
  19:../../DaisySP//Source/Filters/onepole.h ****     @brief One Pole Lowpass / Highpass Filter
  20:../../DaisySP//Source/Filters/onepole.h ****     @author beserge
  21:../../DaisySP//Source/Filters/onepole.h ****     @date Dec 2023 
  22:../../DaisySP//Source/Filters/onepole.h ****     Ported from pichenettes/stmlib/dsp/filter.h \n 
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 14


  23:../../DaisySP//Source/Filters/onepole.h ****     \n to an independent module. \n
  24:../../DaisySP//Source/Filters/onepole.h ****     Original code written by Emilie Gillet. \n
  25:../../DaisySP//Source/Filters/onepole.h **** */
  26:../../DaisySP//Source/Filters/onepole.h **** class OnePole
  27:../../DaisySP//Source/Filters/onepole.h **** {
  28:../../DaisySP//Source/Filters/onepole.h ****   public:
  29:../../DaisySP//Source/Filters/onepole.h ****     OnePole() {}
 162              		.loc 3 29 5
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 8
 165              		@ frame_needed = 1, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 167 0000 80B4     		push	{r7}
 168              		.cfi_def_cfa_offset 4
 169              		.cfi_offset 7, -4
 170 0002 83B0     		sub	sp, sp, #12
 171              		.cfi_def_cfa_offset 16
 172 0004 00AF     		add	r7, sp, #0
 173              		.cfi_def_cfa_register 7
 174 0006 7860     		str	r0, [r7, #4]
 175              		.loc 3 29 16
 176 0008 7B68     		ldr	r3, [r7, #4]
 177 000a 1846     		mov	r0, r3
 178 000c 0C37     		adds	r7, r7, #12
 179              		.cfi_def_cfa_offset 4
 180 000e BD46     		mov	sp, r7
 181              		.cfi_def_cfa_register 13
 182              		@ sp needed
 183 0010 5DF8047B 		ldr	r7, [sp], #4
 184              		.cfi_restore 7
 185              		.cfi_def_cfa_offset 0
 186 0014 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE3269:
 190              		.weak	_ZN7daisysp7OnePoleC1Ev
 191              		.thumb_set _ZN7daisysp7OnePoleC1Ev,_ZN7daisysp7OnePoleC2Ev
 192              		.section	.text._ZN7daisysp7OnePoleD2Ev,"axG",%progbits,_ZN7daisysp7OnePoleD5Ev,comdat
 193              		.align	1
 194              		.weak	_ZN7daisysp7OnePoleD2Ev
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp7OnePoleD2Ev:
 201              	.LFB3272:
  30:../../DaisySP//Source/Filters/onepole.h ****     ~OnePole() {}
 202              		.loc 3 30 5
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 8
 205              		@ frame_needed = 1, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 207 0000 80B4     		push	{r7}
 208              		.cfi_def_cfa_offset 4
 209              		.cfi_offset 7, -4
 210 0002 83B0     		sub	sp, sp, #12
 211              		.cfi_def_cfa_offset 16
 212 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 15


 213              		.cfi_def_cfa_register 7
 214 0006 7860     		str	r0, [r7, #4]
 215              		.loc 3 30 17
 216 0008 7B68     		ldr	r3, [r7, #4]
 217 000a 1846     		mov	r0, r3
 218 000c 0C37     		adds	r7, r7, #12
 219              		.cfi_def_cfa_offset 4
 220 000e BD46     		mov	sp, r7
 221              		.cfi_def_cfa_register 13
 222              		@ sp needed
 223 0010 5DF8047B 		ldr	r7, [sp], #4
 224              		.cfi_restore 7
 225              		.cfi_def_cfa_offset 0
 226 0014 7047     		bx	lr
 227              		.cfi_endproc
 228              	.LFE3272:
 230              		.weak	_ZN7daisysp7OnePoleD1Ev
 231              		.thumb_set _ZN7daisysp7OnePoleD1Ev,_ZN7daisysp7OnePoleD2Ev
 232              		.section	.text._ZN7daisysp7OnePole4InitEv,"axG",%progbits,_ZN7daisysp7OnePole4InitEv,comdat
 233              		.align	1
 234              		.weak	_ZN7daisysp7OnePole4InitEv
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 238              		.fpu fpv5-d16
 240              	_ZN7daisysp7OnePole4InitEv:
 241              	.LFB3274:
  31:../../DaisySP//Source/Filters/onepole.h **** 
  32:../../DaisySP//Source/Filters/onepole.h ****     /**
  33:../../DaisySP//Source/Filters/onepole.h ****      * @brief Operational modes of the filter
  34:../../DaisySP//Source/Filters/onepole.h ****      * - LOW_PASS = cuts out high frequency sound, lets low frequency sound pass through
  35:../../DaisySP//Source/Filters/onepole.h ****      * - HIGH_PASS = cuts out low frequency sound, lets high frequency sound pass through
  36:../../DaisySP//Source/Filters/onepole.h ****      */
  37:../../DaisySP//Source/Filters/onepole.h ****     enum FilterMode
  38:../../DaisySP//Source/Filters/onepole.h ****     {
  39:../../DaisySP//Source/Filters/onepole.h ****         FILTER_MODE_LOW_PASS,
  40:../../DaisySP//Source/Filters/onepole.h ****         FILTER_MODE_HIGH_PASS
  41:../../DaisySP//Source/Filters/onepole.h ****     };
  42:../../DaisySP//Source/Filters/onepole.h **** 
  43:../../DaisySP//Source/Filters/onepole.h ****     /** Initializes the module */
  44:../../DaisySP//Source/Filters/onepole.h ****     void Init()
 242              		.loc 3 44 10
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 8
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246 0000 80B5     		push	{r7, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 7, -8
 249              		.cfi_offset 14, -4
 250 0002 82B0     		sub	sp, sp, #8
 251              		.cfi_def_cfa_offset 16
 252 0004 00AF     		add	r7, sp, #0
 253              		.cfi_def_cfa_register 7
 254 0006 7860     		str	r0, [r7, #4]
  45:../../DaisySP//Source/Filters/onepole.h ****     {
  46:../../DaisySP//Source/Filters/onepole.h ****         Reset();
 255              		.loc 3 46 14
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 16


 256 0008 7868     		ldr	r0, [r7, #4]
 257 000a FFF7FEFF 		bl	_ZN7daisysp7OnePole5ResetEv
  47:../../DaisySP//Source/Filters/onepole.h ****         mode_ = FILTER_MODE_LOW_PASS;
 258              		.loc 3 47 15
 259 000e 7B68     		ldr	r3, [r7, #4]
 260 0010 0022     		movs	r2, #0
 261 0012 1A73     		strb	r2, [r3, #12]
  48:../../DaisySP//Source/Filters/onepole.h ****     }
 262              		.loc 3 48 5
 263 0014 00BF     		nop
 264 0016 0837     		adds	r7, r7, #8
 265              		.cfi_def_cfa_offset 8
 266 0018 BD46     		mov	sp, r7
 267              		.cfi_def_cfa_register 13
 268              		@ sp needed
 269 001a 80BD     		pop	{r7, pc}
 270              		.cfi_endproc
 271              	.LFE3274:
 273              		.section	.text._ZN7daisysp7OnePole5ResetEv,"axG",%progbits,_ZN7daisysp7OnePole5ResetEv,comdat
 274              		.align	1
 275              		.weak	_ZN7daisysp7OnePole5ResetEv
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu fpv5-d16
 281              	_ZN7daisysp7OnePole5ResetEv:
 282              	.LFB3275:
  49:../../DaisySP//Source/Filters/onepole.h **** 
  50:../../DaisySP//Source/Filters/onepole.h ****     /** Reset the module to its default state */
  51:../../DaisySP//Source/Filters/onepole.h ****     inline void Reset() { state_ = 0.0f; }
 283              		.loc 3 51 17
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 8
 286              		@ frame_needed = 1, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288 0000 80B4     		push	{r7}
 289              		.cfi_def_cfa_offset 4
 290              		.cfi_offset 7, -4
 291 0002 83B0     		sub	sp, sp, #12
 292              		.cfi_def_cfa_offset 16
 293 0004 00AF     		add	r7, sp, #0
 294              		.cfi_def_cfa_register 7
 295 0006 7860     		str	r0, [r7, #4]
 296              		.loc 3 51 34
 297 0008 7B68     		ldr	r3, [r7, #4]
 298 000a 4FF00002 		mov	r2, #0
 299 000e 9A60     		str	r2, [r3, #8]	@ float
 300              		.loc 3 51 42
 301 0010 00BF     		nop
 302 0012 0C37     		adds	r7, r7, #12
 303              		.cfi_def_cfa_offset 4
 304 0014 BD46     		mov	sp, r7
 305              		.cfi_def_cfa_register 13
 306              		@ sp needed
 307 0016 5DF8047B 		ldr	r7, [sp], #4
 308              		.cfi_restore 7
 309              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 17


 310 001a 7047     		bx	lr
 311              		.cfi_endproc
 312              	.LFE3275:
 314              		.section	.text._ZN7daisysp7OnePole12SetFrequencyEf,"axG",%progbits,_ZN7daisysp7OnePole12SetFrequen
 315              		.align	1
 316              		.weak	_ZN7daisysp7OnePole12SetFrequencyEf
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 320              		.fpu fpv5-d16
 322              	_ZN7daisysp7OnePole12SetFrequencyEf:
 323              	.LFB3276:
  52:../../DaisySP//Source/Filters/onepole.h **** 
  53:../../DaisySP//Source/Filters/onepole.h ****     /** Set the filter cutoff frequency
  54:../../DaisySP//Source/Filters/onepole.h ****     *   \param freq Cutoff frequency. Valid range from 0 to .497f
  55:../../DaisySP//Source/Filters/onepole.h ****     */
  56:../../DaisySP//Source/Filters/onepole.h ****     inline void SetFrequency(float freq)
 324              		.loc 3 56 17
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 8
 327              		@ frame_needed = 1, uses_anonymous_args = 0
 328 0000 80B5     		push	{r7, lr}
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 7, -8
 331              		.cfi_offset 14, -4
 332 0002 82B0     		sub	sp, sp, #8
 333              		.cfi_def_cfa_offset 16
 334 0004 00AF     		add	r7, sp, #0
 335              		.cfi_def_cfa_register 7
 336 0006 7860     		str	r0, [r7, #4]
 337 0008 87ED000A 		vstr.32	s0, [r7]
  57:../../DaisySP//Source/Filters/onepole.h ****     {
  58:../../DaisySP//Source/Filters/onepole.h ****         // Clip coefficient to about 100.
  59:../../DaisySP//Source/Filters/onepole.h ****         freq = freq < 0.497f ? freq : 0.497f;
 338              		.loc 3 59 30
 339 000c D7ED007A 		vldr.32	s15, [r7]
 340 0010 9FED157A 		vldr.32	s14, .L19
 341 0014 F4EEC77A 		vcmpe.f32	s15, s14
 342 0018 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 343 001c 01D5     		bpl	.L18
 344              		.loc 3 59 30 is_stmt 0 discriminator 1
 345 001e 3B68     		ldr	r3, [r7]	@ float
 346 0020 00E0     		b	.L16
 347              	.L18:
 348              		.loc 3 59 30 discriminator 2
 349 0022 124B     		ldr	r3, .L19+4
 350              	.L16:
 351              		.loc 3 59 14 is_stmt 1 discriminator 4
 352 0024 3B60     		str	r3, [r7]	@ float
  60:../../DaisySP//Source/Filters/onepole.h **** 
  61:../../DaisySP//Source/Filters/onepole.h ****         g_  = tanf(PI_F * freq);
 353              		.loc 3 61 19 discriminator 4
 354 0026 D7ED007A 		vldr.32	s15, [r7]
 355 002a 9FED117A 		vldr.32	s14, .L19+8
 356 002e 67EE877A 		vmul.f32	s15, s15, s14
 357 0032 B0EE670A 		vmov.f32	s0, s15
 358 0036 FFF7FEFF 		bl	tanf
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 18


 359 003a F0EE407A 		vmov.f32	s15, s0
 360              		.loc 3 61 13 discriminator 4
 361 003e 7B68     		ldr	r3, [r7, #4]
 362 0040 C3ED007A 		vstr.32	s15, [r3]
  62:../../DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 363              		.loc 3 62 28 discriminator 4
 364 0044 7B68     		ldr	r3, [r7, #4]
 365 0046 D3ED007A 		vldr.32	s15, [r3]
 366              		.loc 3 62 26 discriminator 4
 367 004a B7EE007A 		vmov.f32	s14, #1.0e+0
 368 004e 37EE877A 		vadd.f32	s14, s15, s14
 369              		.loc 3 62 19 discriminator 4
 370 0052 F7EE006A 		vmov.f32	s13, #1.0e+0
 371 0056 C6EE877A 		vdiv.f32	s15, s13, s14
 372              		.loc 3 62 13 discriminator 4
 373 005a 7B68     		ldr	r3, [r7, #4]
 374 005c C3ED017A 		vstr.32	s15, [r3, #4]
  63:../../DaisySP//Source/Filters/onepole.h ****     }
 375              		.loc 3 63 5 discriminator 4
 376 0060 00BF     		nop
 377 0062 0837     		adds	r7, r7, #8
 378              		.cfi_def_cfa_offset 8
 379 0064 BD46     		mov	sp, r7
 380              		.cfi_def_cfa_register 13
 381              		@ sp needed
 382 0066 80BD     		pop	{r7, pc}
 383              	.L20:
 384              		.align	2
 385              	.L19:
 386 0068 C976FE3E 		.word	1056863945
 387 006c C976FE3E 		.word	1056863945
 388 0070 DB0F4940 		.word	1078530011
 389              		.cfi_endproc
 390              	.LFE3276:
 392              		.section	.text._ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE,"axG",%progbits,_ZN7daisysp7On
 393              		.align	1
 394              		.weak	_ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE
 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
 398              		.fpu fpv5-d16
 400              	_ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE:
 401              	.LFB3277:
  64:../../DaisySP//Source/Filters/onepole.h **** 
  65:../../DaisySP//Source/Filters/onepole.h ****     /** Set the filter mode
  66:../../DaisySP//Source/Filters/onepole.h ****     *   \param mode Filter mode. Can be lowpass or highpass
  67:../../DaisySP//Source/Filters/onepole.h ****     */
  68:../../DaisySP//Source/Filters/onepole.h ****     inline void SetFilterMode(FilterMode mode) { mode_ = mode; }
 402              		.loc 3 68 17
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 8
 405              		@ frame_needed = 1, uses_anonymous_args = 0
 406              		@ link register save eliminated.
 407 0000 80B4     		push	{r7}
 408              		.cfi_def_cfa_offset 4
 409              		.cfi_offset 7, -4
 410 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 19


 411              		.cfi_def_cfa_offset 16
 412 0004 00AF     		add	r7, sp, #0
 413              		.cfi_def_cfa_register 7
 414 0006 7860     		str	r0, [r7, #4]
 415 0008 0B46     		mov	r3, r1
 416 000a FB70     		strb	r3, [r7, #3]
 417              		.loc 3 68 56
 418 000c 7B68     		ldr	r3, [r7, #4]
 419 000e FA78     		ldrb	r2, [r7, #3]
 420 0010 1A73     		strb	r2, [r3, #12]
 421              		.loc 3 68 64
 422 0012 00BF     		nop
 423 0014 0C37     		adds	r7, r7, #12
 424              		.cfi_def_cfa_offset 4
 425 0016 BD46     		mov	sp, r7
 426              		.cfi_def_cfa_register 13
 427              		@ sp needed
 428 0018 5DF8047B 		ldr	r7, [sp], #4
 429              		.cfi_restore 7
 430              		.cfi_def_cfa_offset 0
 431 001c 7047     		bx	lr
 432              		.cfi_endproc
 433              	.LFE3277:
 435              		.section	.text._ZN5daisy3PinC2ENS_8GPIOPortEh,"axG",%progbits,_ZN5daisy3PinC5ENS_8GPIOPortEh,comda
 436              		.align	1
 437              		.weak	_ZN5daisy3PinC2ENS_8GPIOPortEh
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 441              		.fpu fpv5-d16
 443              	_ZN5daisy3PinC2ENS_8GPIOPortEh:
 444              	.LFB3520:
 445              		.file 4 "../../libDaisy//src/daisy_core.h"
   1:../../libDaisy//src/daisy_core.h **** #pragma once
   2:../../libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy//src/daisy_core.h **** 
   7:../../libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libDaisy//src/daisy_core.h **** #else
  15:../../libDaisy//src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy//src/daisy_core.h **** #endif
  17:../../libDaisy//src/daisy_core.h **** 
  18:../../libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy//src/daisy_core.h ****     @{
  20:../../libDaisy//src/daisy_core.h **** */
  21:../../libDaisy//src/daisy_core.h **** 
  22:../../libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy//src/daisy_core.h **** */
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 20


  25:../../libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy//src/daisy_core.h **** /** 
  27:../../libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy//src/daisy_core.h **** cache enabled.
  30:../../libDaisy//src/daisy_core.h **** */
  31:../../libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy//src/daisy_core.h **** 
  33:../../libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy//src/daisy_core.h **** 
  47:../../libDaisy//src/daisy_core.h **** 
  48:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy//src/daisy_core.h **** 
  52:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy//src/daisy_core.h **** 
  56:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy//src/daisy_core.h **** 
  60:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy//src/daisy_core.h **** 
  64:../../libDaisy//src/daisy_core.h **** /** 
  65:../../libDaisy//src/daisy_core.h ****     Computes cube.
  66:../../libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy//src/daisy_core.h **** */
  69:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy//src/daisy_core.h **** {
  71:../../libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy//src/daisy_core.h **** }
  73:../../libDaisy//src/daisy_core.h **** 
  74:../../libDaisy//src/daisy_core.h **** /** 
  75:../../libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy//src/daisy_core.h **** */
  79:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy//src/daisy_core.h **** {
  81:../../libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 21


  82:../../libDaisy//src/daisy_core.h **** }
  83:../../libDaisy//src/daisy_core.h **** 
  84:../../libDaisy//src/daisy_core.h **** /**
  85:../../libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy//src/daisy_core.h **** */
  87:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy//src/daisy_core.h **** {
  89:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy//src/daisy_core.h **** }
  93:../../libDaisy//src/daisy_core.h **** 
  94:../../libDaisy//src/daisy_core.h **** 
  95:../../libDaisy//src/daisy_core.h **** /** 
  96:../../libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy//src/daisy_core.h **** */
 100:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy//src/daisy_core.h **** {
 102:../../libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy//src/daisy_core.h **** }
 104:../../libDaisy//src/daisy_core.h **** 
 105:../../libDaisy//src/daisy_core.h **** /**
 106:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy//src/daisy_core.h **** */
 108:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy//src/daisy_core.h **** {
 110:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy//src/daisy_core.h **** }
 114:../../libDaisy//src/daisy_core.h **** 
 115:../../libDaisy//src/daisy_core.h **** /** 
 116:../../libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy//src/daisy_core.h **** */
 120:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy//src/daisy_core.h **** {
 122:../../libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy//src/daisy_core.h **** }
 124:../../libDaisy//src/daisy_core.h **** 
 125:../../libDaisy//src/daisy_core.h **** /**
 126:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy//src/daisy_core.h **** */
 128:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy//src/daisy_core.h **** {
 130:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy//src/daisy_core.h **** }
 134:../../libDaisy//src/daisy_core.h **** 
 135:../../libDaisy//src/daisy_core.h **** /**
 136:../../libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy//src/daisy_core.h ****  */
 138:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 22


 139:../../libDaisy//src/daisy_core.h **** {
 140:../../libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy//src/daisy_core.h **** }
 143:../../libDaisy//src/daisy_core.h **** /**
 144:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy//src/daisy_core.h ****  */
 146:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy//src/daisy_core.h **** {
 148:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy//src/daisy_core.h **** }
 152:../../libDaisy//src/daisy_core.h **** 
 153:../../libDaisy//src/daisy_core.h **** /**
 154:../../libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy//src/daisy_core.h ****  */
 156:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy//src/daisy_core.h **** {
 158:../../libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy//src/daisy_core.h **** }
 160:../../libDaisy//src/daisy_core.h **** /**
 161:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy//src/daisy_core.h ****  */
 163:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy//src/daisy_core.h **** {
 165:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy//src/daisy_core.h **** }
 169:../../libDaisy//src/daisy_core.h **** 
 170:../../libDaisy//src/daisy_core.h **** 
 171:../../libDaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libDaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy//src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy//src/daisy_core.h ****  * 
 175:../../libDaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy//src/daisy_core.h ****  * 
 178:../../libDaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libDaisy//src/daisy_core.h ****  */
 180:../../libDaisy//src/daisy_core.h **** typedef enum
 181:../../libDaisy//src/daisy_core.h **** {
 182:../../libDaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libDaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libDaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libDaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libDaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libDaisy//src/daisy_core.h **** } dsy_gpio_port;
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 23


 196:../../libDaisy//src/daisy_core.h **** 
 197:../../libDaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy//src/daisy_core.h ****  *  
 199:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../../libDaisy//src/daisy_core.h ****  * 
 202:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy//src/daisy_core.h ****  */
 204:../../libDaisy//src/daisy_core.h **** typedef struct
 205:../../libDaisy//src/daisy_core.h **** {
 206:../../libDaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libDaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy//src/daisy_core.h **** 
 210:../../libDaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libDaisy//src/daisy_core.h ****  * 
 212:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../../libDaisy//src/daisy_core.h ****  * 
 215:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libDaisy//src/daisy_core.h **** */
 217:../../libDaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy//src/daisy_core.h **** {
 219:../../libDaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libDaisy//src/daisy_core.h ****     p.port = port;
 221:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 222:../../libDaisy//src/daisy_core.h ****     return p;
 223:../../libDaisy//src/daisy_core.h **** }
 224:../../libDaisy//src/daisy_core.h **** 
 225:../../libDaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libDaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libDaisy//src/daisy_core.h ****  * 
 228:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../../libDaisy//src/daisy_core.h ****  * 
 231:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libDaisy//src/daisy_core.h ****  */
 233:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libDaisy//src/daisy_core.h **** {
 235:../../libDaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libDaisy//src/daisy_core.h **** }
 237:../../libDaisy//src/daisy_core.h **** 
 238:../../libDaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../../libDaisy//src/daisy_core.h **** 
 240:../../libDaisy//src/daisy_core.h **** namespace daisy
 241:../../libDaisy//src/daisy_core.h **** {
 242:../../libDaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libDaisy//src/daisy_core.h **** enum GPIOPort
 244:../../libDaisy//src/daisy_core.h **** {
 245:../../libDaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libDaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libDaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libDaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libDaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libDaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libDaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libDaisy//src/daisy_core.h ****     PORTH, /**< Port H */
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 24


 253:../../libDaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libDaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libDaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libDaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libDaisy//src/daisy_core.h **** };
 258:../../libDaisy//src/daisy_core.h **** 
 259:../../libDaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libDaisy//src/daisy_core.h **** struct Pin
 261:../../libDaisy//src/daisy_core.h **** {
 262:../../libDaisy//src/daisy_core.h ****     GPIOPort port;
 263:../../libDaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../../libDaisy//src/daisy_core.h **** 
 265:../../libDaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libDaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libDaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libDaisy//src/daisy_core.h ****     */
 269:../../libDaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 446              		.loc 4 269 15
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 8
 449              		@ frame_needed = 1, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 451 0000 80B4     		push	{r7}
 452              		.cfi_def_cfa_offset 4
 453              		.cfi_offset 7, -4
 454 0002 83B0     		sub	sp, sp, #12
 455              		.cfi_def_cfa_offset 16
 456 0004 00AF     		add	r7, sp, #0
 457              		.cfi_def_cfa_register 7
 458 0006 7860     		str	r0, [r7, #4]
 459 0008 0B46     		mov	r3, r1
 460 000a FB70     		strb	r3, [r7, #3]
 461 000c 1346     		mov	r3, r2
 462 000e BB70     		strb	r3, [r7, #2]
 463              	.LBB2:
 464              		.loc 4 269 74
 465 0010 7B68     		ldr	r3, [r7, #4]
 466 0012 FA78     		ldrb	r2, [r7, #3]
 467 0014 1A70     		strb	r2, [r3]
 468 0016 7B68     		ldr	r3, [r7, #4]
 469 0018 BA78     		ldrb	r2, [r7, #2]
 470 001a 5A70     		strb	r2, [r3, #1]
 471              	.LBE2:
 472              		.loc 4 269 77
 473 001c 7B68     		ldr	r3, [r7, #4]
 474 001e 1846     		mov	r0, r3
 475 0020 0C37     		adds	r7, r7, #12
 476              		.cfi_def_cfa_offset 4
 477 0022 BD46     		mov	sp, r7
 478              		.cfi_def_cfa_register 13
 479              		@ sp needed
 480 0024 5DF8047B 		ldr	r7, [sp], #4
 481              		.cfi_restore 7
 482              		.cfi_def_cfa_offset 0
 483 0028 7047     		bx	lr
 484              		.cfi_endproc
 485              	.LFE3520:
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 25


 487              		.weak	_ZN5daisy3PinC1ENS_8GPIOPortEh
 488              		.thumb_set _ZN5daisy3PinC1ENS_8GPIOPortEh,_ZN5daisy3PinC2ENS_8GPIOPortEh
 489              		.section	.text._ZN5daisy3PinC2Ev,"axG",%progbits,_ZN5daisy3PinC5Ev,comdat
 490              		.align	1
 491              		.weak	_ZN5daisy3PinC2Ev
 492              		.syntax unified
 493              		.thumb
 494              		.thumb_func
 495              		.fpu fpv5-d16
 497              	_ZN5daisy3PinC2Ev:
 498              	.LFB3523:
 270:../../libDaisy//src/daisy_core.h **** 
 271:../../libDaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libDaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 499              		.loc 4 272 15
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 8
 502              		@ frame_needed = 1, uses_anonymous_args = 0
 503              		@ link register save eliminated.
 504 0000 80B4     		push	{r7}
 505              		.cfi_def_cfa_offset 4
 506              		.cfi_offset 7, -4
 507 0002 83B0     		sub	sp, sp, #12
 508              		.cfi_def_cfa_offset 16
 509 0004 00AF     		add	r7, sp, #0
 510              		.cfi_def_cfa_register 7
 511 0006 7860     		str	r0, [r7, #4]
 512              	.LBB3:
 513              		.loc 4 272 43
 514 0008 7B68     		ldr	r3, [r7, #4]
 515 000a 0B22     		movs	r2, #11
 516 000c 1A70     		strb	r2, [r3]
 517 000e 7B68     		ldr	r3, [r7, #4]
 518 0010 FF22     		movs	r2, #255
 519 0012 5A70     		strb	r2, [r3, #1]
 520              	.LBE3:
 521              		.loc 4 272 46
 522 0014 7B68     		ldr	r3, [r7, #4]
 523 0016 1846     		mov	r0, r3
 524 0018 0C37     		adds	r7, r7, #12
 525              		.cfi_def_cfa_offset 4
 526 001a BD46     		mov	sp, r7
 527              		.cfi_def_cfa_register 13
 528              		@ sp needed
 529 001c 5DF8047B 		ldr	r7, [sp], #4
 530              		.cfi_restore 7
 531              		.cfi_def_cfa_offset 0
 532 0020 7047     		bx	lr
 533              		.cfi_endproc
 534              	.LFE3523:
 536              		.weak	_ZN5daisy3PinC1Ev
 537              		.thumb_set _ZN5daisy3PinC1Ev,_ZN5daisy3PinC2Ev
 538              		.section	.text._ZNK5daisy3Pincv12dsy_gpio_pinEv,"axG",%progbits,_ZNK5daisy3Pincv12dsy_gpio_pinEv,c
 539              		.align	1
 540              		.weak	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 541              		.syntax unified
 542              		.thumb
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 26


 543              		.thumb_func
 544              		.fpu fpv5-d16
 546              	_ZNK5daisy3Pincv12dsy_gpio_pinEv:
 547              	.LFB3528:
 273:../../libDaisy//src/daisy_core.h **** 
 274:../../libDaisy//src/daisy_core.h ****     /** @brief checks validity of a Pin 
 275:../../libDaisy//src/daisy_core.h ****      *  @retval returns true if the port is a valid hardware pin, otherwise false.
 276:../../libDaisy//src/daisy_core.h ****     */
 277:../../libDaisy//src/daisy_core.h ****     constexpr bool IsValid() const { return port != PORTX && pin < 16; }
 278:../../libDaisy//src/daisy_core.h **** 
 279:../../libDaisy//src/daisy_core.h ****     /** @brief comparison operator for checking equality between Pin objects */
 280:../../libDaisy//src/daisy_core.h ****     constexpr bool operator==(const Pin &rhs) const
 281:../../libDaisy//src/daisy_core.h ****     {
 282:../../libDaisy//src/daisy_core.h ****         return (rhs.port == port) && (rhs.pin == pin);
 283:../../libDaisy//src/daisy_core.h ****     }
 284:../../libDaisy//src/daisy_core.h **** 
 285:../../libDaisy//src/daisy_core.h ****     /** @brief comparison operator for checking inequality between Pin objects */
 286:../../libDaisy//src/daisy_core.h ****     constexpr bool operator!=(const Pin &rhs) const { return !operator==(rhs); }
 287:../../libDaisy//src/daisy_core.h **** 
 288:../../libDaisy//src/daisy_core.h ****     /** @brief conversion operation for converting to the old-style representation
 289:../../libDaisy//src/daisy_core.h ****      *         of a pin.
 290:../../libDaisy//src/daisy_core.h ****      * 
 291:../../libDaisy//src/daisy_core.h ****      *  This allows the new Pin type to be used in place of the older, dsy_gpio_pin
 292:../../libDaisy//src/daisy_core.h ****      *  type.
 293:../../libDaisy//src/daisy_core.h ****      */
 294:../../libDaisy//src/daisy_core.h ****     constexpr operator dsy_gpio_pin() const
 548              		.loc 4 294 15
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 16
 551              		@ frame_needed = 1, uses_anonymous_args = 0
 552              		@ link register save eliminated.
 553 0000 80B4     		push	{r7}
 554              		.cfi_def_cfa_offset 4
 555              		.cfi_offset 7, -4
 556 0002 85B0     		sub	sp, sp, #20
 557              		.cfi_def_cfa_offset 24
 558 0004 00AF     		add	r7, sp, #0
 559              		.cfi_def_cfa_register 7
 560 0006 7860     		str	r0, [r7, #4]
 295:../../libDaisy//src/daisy_core.h ****     {
 296:../../libDaisy//src/daisy_core.h ****         return dsy_gpio_pin{.port = static_cast<dsy_gpio_port>(port),
 561              		.loc 4 296 64
 562 0008 7B68     		ldr	r3, [r7, #4]
 563 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 297:../../libDaisy//src/daisy_core.h ****                             .pin  = pin};
 564              		.loc 4 297 40
 565 000c 3B73     		strb	r3, [r7, #12]
 566              		.loc 4 297 37
 567 000e 7B68     		ldr	r3, [r7, #4]
 568 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 569              		.loc 4 297 40
 570 0012 7B73     		strb	r3, [r7, #13]
 571 0014 0023     		movs	r3, #0
 572 0016 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 573 0018 62F30703 		bfi	r3, r2, #0, #8
 574 001c 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 575 001e 62F30F23 		bfi	r3, r2, #8, #8
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 27


 298:../../libDaisy//src/daisy_core.h ****     }
 576              		.loc 4 298 5
 577 0022 1846     		mov	r0, r3	@ movhi
 578 0024 1437     		adds	r7, r7, #20
 579              		.cfi_def_cfa_offset 4
 580 0026 BD46     		mov	sp, r7
 581              		.cfi_def_cfa_register 13
 582              		@ sp needed
 583 0028 5DF8047B 		ldr	r7, [sp], #4
 584              		.cfi_restore 7
 585              		.cfi_def_cfa_offset 0
 586 002c 7047     		bx	lr
 587              		.cfi_endproc
 588              	.LFE3528:
 590              		.section	.text._ZN5daisy11TimerHandle6ConfigC2Ev,"axG",%progbits,_ZN5daisy11TimerHandle6ConfigC5Ev
 591              		.align	1
 592              		.weak	_ZN5daisy11TimerHandle6ConfigC2Ev
 593              		.syntax unified
 594              		.thumb
 595              		.thumb_func
 596              		.fpu fpv5-d16
 598              	_ZN5daisy11TimerHandle6ConfigC2Ev:
 599              	.LFB3530:
 600              		.file 5 "../../libDaisy//src/per/tim.h"
   1:../../libDaisy//src/per/tim.h **** #pragma once
   2:../../libDaisy//src/per/tim.h **** #ifndef DSY_TIM_H
   3:../../libDaisy//src/per/tim.h **** #define DSY_TIM_H
   4:../../libDaisy//src/per/tim.h **** 
   5:../../libDaisy//src/per/tim.h **** #include <cstdint>
   6:../../libDaisy//src/per/tim.h **** 
   7:../../libDaisy//src/per/tim.h **** namespace daisy
   8:../../libDaisy//src/per/tim.h **** {
   9:../../libDaisy//src/per/tim.h **** /** @brief Hardare timer peripheral support.
  10:../../libDaisy//src/per/tim.h ****  ** 
  11:../../libDaisy//src/per/tim.h ****  ** Supports general-function TIM peripherals:
  12:../../libDaisy//src/per/tim.h ****  ** - TIM2, TIM3, TIM4, TIM5
  13:../../libDaisy//src/per/tim.h ****  **
  14:../../libDaisy//src/per/tim.h ****  ** DaisySeed, and many internal peripherals utilize TIM2 for timing/delay purposes.
  15:../../libDaisy//src/per/tim.h ****  ** It is configured to be at the maximum frequency: typically 200MHz or 240MHz (boost) 
  16:../../libDaisy//src/per/tim.h ****  ** for measuring/delaying for very short periods. 
  17:../../libDaisy//src/per/tim.h ****  **
  18:../../libDaisy//src/per/tim.h ****  ** The GetUs/GetMs functions are available for convenience (and backwards compatibility),
  19:../../libDaisy//src/per/tim.h ****  ** but to avoid wrapping errors on math when doing time-delta calculations, using ticks is 
  20:../../libDaisy//src/per/tim.h ****  ** recommended. The data can be converted to the final time-base after getting the difference in t
  21:../../libDaisy//src/per/tim.h ****  ** (Using GetFreq() can be used for these time-base calculations).
  22:../../libDaisy//src/per/tim.h ****  **
  23:../../libDaisy//src/per/tim.h ****  ** User callbacks can be set, and changed at any point during operation. However,
  24:../../libDaisy//src/per/tim.h ****  ** the Config::enable_irq must be set to true when initializing for the interrupts
  25:../../libDaisy//src/per/tim.h ****  ** to turn on and function.
  26:../../libDaisy//src/per/tim.h ****  **
  27:../../libDaisy//src/per/tim.h ****  ** @todo Fix issues with realtime getters, and wrapping of the timer(s).
  28:../../libDaisy//src/per/tim.h ****  **     - This very noticeable with default settings for the 16-bit counters.
  29:../../libDaisy//src/per/tim.h ****  ** @todo Other General purpose timers
  30:../../libDaisy//src/per/tim.h ****  ** @todo Non-internal clock sources
  31:../../libDaisy//src/per/tim.h ****  ** @todo Use of the four-tim channels per tim
  32:../../libDaisy//src/per/tim.h ****  **     - PWM, etc.
  33:../../libDaisy//src/per/tim.h ****  **     - InputCapture/OutputCompare, etc.
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 28


  34:../../libDaisy//src/per/tim.h ****  ** @todo HRTIM
  35:../../libDaisy//src/per/tim.h ****  ** @todo Advanced timers (TIM1/TIM8)
  36:../../libDaisy//src/per/tim.h ****  ** */
  37:../../libDaisy//src/per/tim.h **** class TimerHandle
  38:../../libDaisy//src/per/tim.h **** {
  39:../../libDaisy//src/per/tim.h ****   public:
  40:../../libDaisy//src/per/tim.h ****     /** @brief Configuration struct for the Peripheral
  41:../../libDaisy//src/per/tim.h ****      *  @note These settings are used during initialization
  42:../../libDaisy//src/per/tim.h ****      *   and changing them afterwards may not have the desired effect.
  43:../../libDaisy//src/per/tim.h ****      */
  44:../../libDaisy//src/per/tim.h ****     struct Config
  45:../../libDaisy//src/per/tim.h ****     {
  46:../../libDaisy//src/per/tim.h ****         /** @brief Hardware Timer to configure, and use. */
  47:../../libDaisy//src/per/tim.h ****         enum class Peripheral
  48:../../libDaisy//src/per/tim.h ****         {
  49:../../libDaisy//src/per/tim.h ****             TIM_2 = 0, /**< 32-bit counter */
  50:../../libDaisy//src/per/tim.h ****             TIM_3,     /**< 16-bit counter */
  51:../../libDaisy//src/per/tim.h ****             TIM_4,     /**< 16-bit counter */
  52:../../libDaisy//src/per/tim.h ****             TIM_5,     /**< 32-bit counter*/
  53:../../libDaisy//src/per/tim.h ****         };
  54:../../libDaisy//src/per/tim.h **** 
  55:../../libDaisy//src/per/tim.h ****         /** @brief Direction of the auto-reload counter. 
  56:../../libDaisy//src/per/tim.h ****          ** @todo Add support for the various  
  57:../../libDaisy//src/per/tim.h ****          ** versions of Up/Down counters.
  58:../../libDaisy//src/per/tim.h ****          ** */
  59:../../libDaisy//src/per/tim.h ****         enum class CounterDir
  60:../../libDaisy//src/per/tim.h ****         {
  61:../../libDaisy//src/per/tim.h ****             UP = 0,
  62:../../libDaisy//src/per/tim.h ****             DOWN,
  63:../../libDaisy//src/per/tim.h ****         };
  64:../../libDaisy//src/per/tim.h **** 
  65:../../libDaisy//src/per/tim.h ****         Peripheral periph; /**< Hardware Peripheral */
  66:../../libDaisy//src/per/tim.h ****         CounterDir dir;    /**< Counter direction */
  67:../../libDaisy//src/per/tim.h **** 
  68:../../libDaisy//src/per/tim.h ****         /** @brief period in ticks at TIM frequency that counter will reset based on dir
  69:../../libDaisy//src/per/tim.h ****          *  @note TIM3 and TIM4 are both 16-bit timers. So the period maximum is 0xffff.
  70:../../libDaisy//src/per/tim.h ****         */
  71:../../libDaisy//src/per/tim.h ****         uint32_t period;
  72:../../libDaisy//src/per/tim.h ****         bool     enable_irq; /**< Enable interrupt for user based callback */
  73:../../libDaisy//src/per/tim.h **** 
  74:../../libDaisy//src/per/tim.h ****         /* @brief Constructor for default states */
  75:../../libDaisy//src/per/tim.h ****         Config()
 601              		.loc 5 75 9
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 8
 604              		@ frame_needed = 1, uses_anonymous_args = 0
 605              		@ link register save eliminated.
 606 0000 80B4     		push	{r7}
 607              		.cfi_def_cfa_offset 4
 608              		.cfi_offset 7, -4
 609 0002 83B0     		sub	sp, sp, #12
 610              		.cfi_def_cfa_offset 16
 611 0004 00AF     		add	r7, sp, #0
 612              		.cfi_def_cfa_register 7
 613 0006 7860     		str	r0, [r7, #4]
 614              	.LBB4:
  76:../../libDaisy//src/per/tim.h ****         : periph(Peripheral::TIM_2),
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 29


  77:../../libDaisy//src/per/tim.h ****           dir(CounterDir::UP),
  78:../../libDaisy//src/per/tim.h ****           period(0xffffffff),
  79:../../libDaisy//src/per/tim.h ****           enable_irq(false)
 615              		.loc 5 79 27
 616 0008 7B68     		ldr	r3, [r7, #4]
 617 000a 0022     		movs	r2, #0
 618 000c 1A60     		str	r2, [r3]
 619 000e 7B68     		ldr	r3, [r7, #4]
 620 0010 0022     		movs	r2, #0
 621 0012 5A60     		str	r2, [r3, #4]
 622 0014 7B68     		ldr	r3, [r7, #4]
 623 0016 4FF0FF32 		mov	r2, #-1
 624 001a 9A60     		str	r2, [r3, #8]
 625 001c 7B68     		ldr	r3, [r7, #4]
 626 001e 0022     		movs	r2, #0
 627 0020 1A73     		strb	r2, [r3, #12]
 628              	.LBE4:
  80:../../libDaisy//src/per/tim.h ****         {
  81:../../libDaisy//src/per/tim.h ****         }
 629              		.loc 5 81 9
 630 0022 7B68     		ldr	r3, [r7, #4]
 631 0024 1846     		mov	r0, r3
 632 0026 0C37     		adds	r7, r7, #12
 633              		.cfi_def_cfa_offset 4
 634 0028 BD46     		mov	sp, r7
 635              		.cfi_def_cfa_register 13
 636              		@ sp needed
 637 002a 5DF8047B 		ldr	r7, [sp], #4
 638              		.cfi_restore 7
 639              		.cfi_def_cfa_offset 0
 640 002e 7047     		bx	lr
 641              		.cfi_endproc
 642              	.LFE3530:
 644              		.weak	_ZN5daisy11TimerHandle6ConfigC1Ev
 645              		.thumb_set _ZN5daisy11TimerHandle6ConfigC1Ev,_ZN5daisy11TimerHandle6ConfigC2Ev
 646              		.section	.text._ZN5daisy11TimerHandleC2Ev,"axG",%progbits,_ZN5daisy11TimerHandleC5Ev,comdat
 647              		.align	1
 648              		.weak	_ZN5daisy11TimerHandleC2Ev
 649              		.syntax unified
 650              		.thumb
 651              		.thumb_func
 652              		.fpu fpv5-d16
 654              	_ZN5daisy11TimerHandleC2Ev:
 655              	.LFB3533:
  82:../../libDaisy//src/per/tim.h ****     };
  83:../../libDaisy//src/per/tim.h **** 
  84:../../libDaisy//src/per/tim.h ****     /** @brief Return values for TIM funcitons. */
  85:../../libDaisy//src/per/tim.h ****     enum class Result
  86:../../libDaisy//src/per/tim.h ****     {
  87:../../libDaisy//src/per/tim.h ****         OK,
  88:../../libDaisy//src/per/tim.h ****         ERR,
  89:../../libDaisy//src/per/tim.h ****     };
  90:../../libDaisy//src/per/tim.h **** 
  91:../../libDaisy//src/per/tim.h ****     /** @brief User Callback type that will fire at the end of each timer 
  92:../../libDaisy//src/per/tim.h ****      *   period. This requires that Config::enable_irq is true before Init
  93:../../libDaisy//src/per/tim.h ****      *  @param data pointer to arbitrary user-provided data
  94:../../libDaisy//src/per/tim.h ****     */
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 30


  95:../../libDaisy//src/per/tim.h ****     typedef void (*PeriodElapsedCallback)(void* data);
  96:../../libDaisy//src/per/tim.h **** 
  97:../../libDaisy//src/per/tim.h ****     TimerHandle() : pimpl_(nullptr) {}
 656              		.loc 5 97 5
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 8
 659              		@ frame_needed = 1, uses_anonymous_args = 0
 660              		@ link register save eliminated.
 661 0000 80B4     		push	{r7}
 662              		.cfi_def_cfa_offset 4
 663              		.cfi_offset 7, -4
 664 0002 83B0     		sub	sp, sp, #12
 665              		.cfi_def_cfa_offset 16
 666 0004 00AF     		add	r7, sp, #0
 667              		.cfi_def_cfa_register 7
 668 0006 7860     		str	r0, [r7, #4]
 669              	.LBB5:
 670              		.loc 5 97 35
 671 0008 7B68     		ldr	r3, [r7, #4]
 672 000a 0022     		movs	r2, #0
 673 000c 1A60     		str	r2, [r3]
 674              	.LBE5:
 675              		.loc 5 97 38
 676 000e 7B68     		ldr	r3, [r7, #4]
 677 0010 1846     		mov	r0, r3
 678 0012 0C37     		adds	r7, r7, #12
 679              		.cfi_def_cfa_offset 4
 680 0014 BD46     		mov	sp, r7
 681              		.cfi_def_cfa_register 13
 682              		@ sp needed
 683 0016 5DF8047B 		ldr	r7, [sp], #4
 684              		.cfi_restore 7
 685              		.cfi_def_cfa_offset 0
 686 001a 7047     		bx	lr
 687              		.cfi_endproc
 688              	.LFE3533:
 690              		.weak	_ZN5daisy11TimerHandleC1Ev
 691              		.thumb_set _ZN5daisy11TimerHandleC1Ev,_ZN5daisy11TimerHandleC2Ev
 692              		.section	.text._ZN5daisy11TimerHandleD2Ev,"axG",%progbits,_ZN5daisy11TimerHandleD5Ev,comdat
 693              		.align	1
 694              		.weak	_ZN5daisy11TimerHandleD2Ev
 695              		.syntax unified
 696              		.thumb
 697              		.thumb_func
 698              		.fpu fpv5-d16
 700              	_ZN5daisy11TimerHandleD2Ev:
 701              	.LFB3536:
  98:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
  99:../../libDaisy//src/per/tim.h ****     TimerHandle& operator=(const TimerHandle& other) = default;
 100:../../libDaisy//src/per/tim.h ****     ~TimerHandle() {}
 702              		.loc 5 100 5
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 8
 705              		@ frame_needed = 1, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 707 0000 80B4     		push	{r7}
 708              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 31


 709              		.cfi_offset 7, -4
 710 0002 83B0     		sub	sp, sp, #12
 711              		.cfi_def_cfa_offset 16
 712 0004 00AF     		add	r7, sp, #0
 713              		.cfi_def_cfa_register 7
 714 0006 7860     		str	r0, [r7, #4]
 715              		.loc 5 100 21
 716 0008 7B68     		ldr	r3, [r7, #4]
 717 000a 1846     		mov	r0, r3
 718 000c 0C37     		adds	r7, r7, #12
 719              		.cfi_def_cfa_offset 4
 720 000e BD46     		mov	sp, r7
 721              		.cfi_def_cfa_register 13
 722              		@ sp needed
 723 0010 5DF8047B 		ldr	r7, [sp], #4
 724              		.cfi_restore 7
 725              		.cfi_def_cfa_offset 0
 726 0014 7047     		bx	lr
 727              		.cfi_endproc
 728              	.LFE3536:
 730              		.weak	_ZN5daisy11TimerHandleD1Ev
 731              		.thumb_set _ZN5daisy11TimerHandleD1Ev,_ZN5daisy11TimerHandleD2Ev
 732              		.section	.text._ZN5daisy6SystemC2Ev,"axG",%progbits,_ZN5daisy6SystemC5Ev,comdat
 733              		.align	1
 734              		.weak	_ZN5daisy6SystemC2Ev
 735              		.syntax unified
 736              		.thumb
 737              		.thumb_func
 738              		.fpu fpv5-d16
 740              	_ZN5daisy6SystemC2Ev:
 741              	.LFB3541:
 742              		.file 6 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 32


  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  63:../../libDaisy//src/sys/system.h ****     {
  64:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  66:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  67:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  68:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  70:../../libDaisy//src/sys/system.h ****         SDRAM,
  71:../../libDaisy//src/sys/system.h ****         QSPI,
  72:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  73:../../libDaisy//src/sys/system.h ****     };
  74:../../libDaisy//src/sys/system.h **** 
  75:../../libDaisy//src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../libDaisy//src/sys/system.h ****     struct BootInfo
  77:../../libDaisy//src/sys/system.h ****     {
  78:../../libDaisy//src/sys/system.h ****         enum class Type : uint32_t
  79:../../libDaisy//src/sys/system.h ****         {
  80:../../libDaisy//src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../libDaisy//src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../libDaisy//src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 33


  83:../../libDaisy//src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../libDaisy//src/sys/system.h ****         } status;
  85:../../libDaisy//src/sys/system.h ****         uint32_t data;
  86:../../libDaisy//src/sys/system.h ****         enum class Version : uint32_t
  87:../../libDaisy//src/sys/system.h ****         {
  88:../../libDaisy//src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../libDaisy//src/sys/system.h ****             NONE,        // No bootloader present
  90:../../libDaisy//src/sys/system.h ****             v6_0,        // v6.0
  91:../../libDaisy//src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../libDaisy//src/sys/system.h ****             LAST
  93:../../libDaisy//src/sys/system.h ****         } version;
  94:../../libDaisy//src/sys/system.h ****     };
  95:../../libDaisy//src/sys/system.h **** 
  96:../../libDaisy//src/sys/system.h ****     System() {}
 743              		.loc 6 96 5
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 8
 746              		@ frame_needed = 1, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 748 0000 80B4     		push	{r7}
 749              		.cfi_def_cfa_offset 4
 750              		.cfi_offset 7, -4
 751 0002 83B0     		sub	sp, sp, #12
 752              		.cfi_def_cfa_offset 16
 753 0004 00AF     		add	r7, sp, #0
 754              		.cfi_def_cfa_register 7
 755 0006 7860     		str	r0, [r7, #4]
 756              		.loc 6 96 15
 757 0008 7B68     		ldr	r3, [r7, #4]
 758 000a 1846     		mov	r0, r3
 759 000c 0C37     		adds	r7, r7, #12
 760              		.cfi_def_cfa_offset 4
 761 000e BD46     		mov	sp, r7
 762              		.cfi_def_cfa_register 13
 763              		@ sp needed
 764 0010 5DF8047B 		ldr	r7, [sp], #4
 765              		.cfi_restore 7
 766              		.cfi_def_cfa_offset 0
 767 0014 7047     		bx	lr
 768              		.cfi_endproc
 769              	.LFE3541:
 771              		.weak	_ZN5daisy6SystemC1Ev
 772              		.thumb_set _ZN5daisy6SystemC1Ev,_ZN5daisy6SystemC2Ev
 773              		.section	.text._ZN5daisy6SystemD2Ev,"axG",%progbits,_ZN5daisy6SystemD5Ev,comdat
 774              		.align	1
 775              		.weak	_ZN5daisy6SystemD2Ev
 776              		.syntax unified
 777              		.thumb
 778              		.thumb_func
 779              		.fpu fpv5-d16
 781              	_ZN5daisy6SystemD2Ev:
 782              	.LFB3544:
  97:../../libDaisy//src/sys/system.h ****     ~System() {}
 783              		.loc 6 97 5
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 8
 786              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 34


 787              		@ link register save eliminated.
 788 0000 80B4     		push	{r7}
 789              		.cfi_def_cfa_offset 4
 790              		.cfi_offset 7, -4
 791 0002 83B0     		sub	sp, sp, #12
 792              		.cfi_def_cfa_offset 16
 793 0004 00AF     		add	r7, sp, #0
 794              		.cfi_def_cfa_register 7
 795 0006 7860     		str	r0, [r7, #4]
 796              		.loc 6 97 16
 797 0008 7B68     		ldr	r3, [r7, #4]
 798 000a 1846     		mov	r0, r3
 799 000c 0C37     		adds	r7, r7, #12
 800              		.cfi_def_cfa_offset 4
 801 000e BD46     		mov	sp, r7
 802              		.cfi_def_cfa_register 13
 803              		@ sp needed
 804 0010 5DF8047B 		ldr	r7, [sp], #4
 805              		.cfi_restore 7
 806              		.cfi_def_cfa_offset 0
 807 0014 7047     		bx	lr
 808              		.cfi_endproc
 809              	.LFE3544:
 811              		.weak	_ZN5daisy6SystemD1Ev
 812              		.thumb_set _ZN5daisy6SystemD1Ev,_ZN5daisy6SystemD2Ev
 813              		.section	.text._ZN5daisy10QSPIHandleC2Ev,"axG",%progbits,_ZN5daisy10QSPIHandleC5Ev,comdat
 814              		.align	1
 815              		.weak	_ZN5daisy10QSPIHandleC2Ev
 816              		.syntax unified
 817              		.thumb
 818              		.thumb_func
 819              		.fpu fpv5-d16
 821              	_ZN5daisy10QSPIHandleC2Ev:
 822              	.LFB3548:
 823              		.file 7 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 35


  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 36


  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 37


 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 824              		.loc 7 166 5
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 8
 827              		@ frame_needed = 1, uses_anonymous_args = 0
 828              		@ link register save eliminated.
 829 0000 80B4     		push	{r7}
 830              		.cfi_def_cfa_offset 4
 831              		.cfi_offset 7, -4
 832 0002 83B0     		sub	sp, sp, #12
 833              		.cfi_def_cfa_offset 16
 834 0004 00AF     		add	r7, sp, #0
 835              		.cfi_def_cfa_register 7
 836 0006 7860     		str	r0, [r7, #4]
 837              	.LBB6:
 838              		.loc 7 166 34
 839 0008 7B68     		ldr	r3, [r7, #4]
 840 000a 0022     		movs	r2, #0
 841 000c 1A60     		str	r2, [r3]
 842              	.LBE6:
 843              		.loc 7 166 37
 844 000e 7B68     		ldr	r3, [r7, #4]
 845 0010 1846     		mov	r0, r3
 846 0012 0C37     		adds	r7, r7, #12
 847              		.cfi_def_cfa_offset 4
 848 0014 BD46     		mov	sp, r7
 849              		.cfi_def_cfa_register 13
 850              		@ sp needed
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 38


 851 0016 5DF8047B 		ldr	r7, [sp], #4
 852              		.cfi_restore 7
 853              		.cfi_def_cfa_offset 0
 854 001a 7047     		bx	lr
 855              		.cfi_endproc
 856              	.LFE3548:
 858              		.weak	_ZN5daisy10QSPIHandleC1Ev
 859              		.thumb_set _ZN5daisy10QSPIHandleC1Ev,_ZN5daisy10QSPIHandleC2Ev
 860              		.section	.text._ZN5daisy9DacHandleC2Ev,"axG",%progbits,_ZN5daisy9DacHandleC5Ev,comdat
 861              		.align	1
 862              		.weak	_ZN5daisy9DacHandleC2Ev
 863              		.syntax unified
 864              		.thumb
 865              		.thumb_func
 866              		.fpu fpv5-d16
 868              	_ZN5daisy9DacHandleC2Ev:
 869              	.LFB3551:
 870              		.file 8 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 39


  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 871              		.loc 8 84 5
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 8
 874              		@ frame_needed = 1, uses_anonymous_args = 0
 875              		@ link register save eliminated.
 876 0000 80B4     		push	{r7}
 877              		.cfi_def_cfa_offset 4
 878              		.cfi_offset 7, -4
 879 0002 83B0     		sub	sp, sp, #12
 880              		.cfi_def_cfa_offset 16
 881 0004 00AF     		add	r7, sp, #0
 882              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 40


 883 0006 7860     		str	r0, [r7, #4]
 884              	.LBB7:
 885              		.loc 8 84 33
 886 0008 7B68     		ldr	r3, [r7, #4]
 887 000a 0022     		movs	r2, #0
 888 000c 1A60     		str	r2, [r3]
 889              	.LBE7:
 890              		.loc 8 84 36
 891 000e 7B68     		ldr	r3, [r7, #4]
 892 0010 1846     		mov	r0, r3
 893 0012 0C37     		adds	r7, r7, #12
 894              		.cfi_def_cfa_offset 4
 895 0014 BD46     		mov	sp, r7
 896              		.cfi_def_cfa_register 13
 897              		@ sp needed
 898 0016 5DF8047B 		ldr	r7, [sp], #4
 899              		.cfi_restore 7
 900              		.cfi_def_cfa_offset 0
 901 001a 7047     		bx	lr
 902              		.cfi_endproc
 903              	.LFE3551:
 905              		.weak	_ZN5daisy9DacHandleC1Ev
 906              		.thumb_set _ZN5daisy9DacHandleC1Ev,_ZN5daisy9DacHandleC2Ev
 907              		.section	.text._ZN5daisy9I2CHandleC2Ev,"axG",%progbits,_ZN5daisy9I2CHandleC5Ev,comdat
 908              		.align	1
 909              		.weak	_ZN5daisy9I2CHandleC2Ev
 910              		.syntax unified
 911              		.thumb
 912              		.thumb_func
 913              		.fpu fpv5-d16
 915              	_ZN5daisy9I2CHandleC2Ev:
 916              	.LFB3561:
 917              		.file 9 "../../libDaisy//src/per/i2c.h"
   1:../../libDaisy//src/per/i2c.h **** #pragma once
   2:../../libDaisy//src/per/i2c.h **** #include "daisy_core.h"
   3:../../libDaisy//src/per/i2c.h **** 
   4:../../libDaisy//src/per/i2c.h **** namespace daisy
   5:../../libDaisy//src/per/i2c.h **** {
   6:../../libDaisy//src/per/i2c.h **** /** A handle for interacting with an I2C peripheral. This is a dumb
   7:../../libDaisy//src/per/i2c.h ****  *  gateway that internally points to one of the four I2C peripherals
   8:../../libDaisy//src/per/i2c.h ****  *  after it was initialised. It can then be copied and passed around.
   9:../../libDaisy//src/per/i2c.h ****  *  Use an I2CHandle like this:
  10:../../libDaisy//src/per/i2c.h ****  *  
  11:../../libDaisy//src/per/i2c.h ****  *      // setup the configuration
  12:../../libDaisy//src/per/i2c.h ****  *      I2CHandle::Config i2c_conf;
  13:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.periph = I2CHandle::Config::Peripheral::I2C_1;
  14:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.speed  = I2CHandle::Config::Speed::I2C_400KHZ;
  15:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.mode   = I2CHandle::Config::Mode::Master;
  16:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.pin_config.scl  = {DSY_GPIOB, 8};
  17:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.pin_config.sda  = {DSY_GPIOB, 9};
  18:../../libDaisy//src/per/i2c.h ****  *      // initialise the peripheral
  19:../../libDaisy//src/per/i2c.h ****  *      I2CHandle i2c;
  20:../../libDaisy//src/per/i2c.h ****  *      i2c.Init(i2c_conf);
  21:../../libDaisy//src/per/i2c.h ****  *      // now i2c points to the corresponding peripheral and can be used.
  22:../../libDaisy//src/per/i2c.h ****  *      i2c.TransmitBlocking( ... );
  23:../../libDaisy//src/per/i2c.h ****  */
  24:../../libDaisy//src/per/i2c.h **** class I2CHandle
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 41


  25:../../libDaisy//src/per/i2c.h **** {
  26:../../libDaisy//src/per/i2c.h ****   public:
  27:../../libDaisy//src/per/i2c.h ****     /** Contains settings for initialising an I2C interface. */
  28:../../libDaisy//src/per/i2c.h ****     struct Config
  29:../../libDaisy//src/per/i2c.h ****     {
  30:../../libDaisy//src/per/i2c.h ****         /** Specifies whether the interface will operate in master or slave mode. */
  31:../../libDaisy//src/per/i2c.h ****         enum class Mode
  32:../../libDaisy//src/per/i2c.h ****         {
  33:../../libDaisy//src/per/i2c.h ****             I2C_MASTER,
  34:../../libDaisy//src/per/i2c.h ****             I2C_SLAVE,
  35:../../libDaisy//src/per/i2c.h ****         };
  36:../../libDaisy//src/per/i2c.h **** 
  37:../../libDaisy//src/per/i2c.h ****         /** Specifices the internal peripheral to use (these are mapped to different pins on the ha
  38:../../libDaisy//src/per/i2c.h ****         enum class Peripheral
  39:../../libDaisy//src/per/i2c.h ****         {
  40:../../libDaisy//src/per/i2c.h ****             I2C_1 = 0, /**< & */
  41:../../libDaisy//src/per/i2c.h ****             I2C_2,     /**< & */
  42:../../libDaisy//src/per/i2c.h ****             I2C_3,     /**< & */
  43:../../libDaisy//src/per/i2c.h ****             I2C_4,     /**< & */
  44:../../libDaisy//src/per/i2c.h ****         };
  45:../../libDaisy//src/per/i2c.h **** 
  46:../../libDaisy//src/per/i2c.h ****         /** Rate at which the clock/data will be sent/received. The device being used will have max
  47:../../libDaisy//src/per/i2c.h ****          *  1MHZ Mode is currently 886kHz
  48:../../libDaisy//src/per/i2c.h ****          */
  49:../../libDaisy//src/per/i2c.h ****         enum class Speed
  50:../../libDaisy//src/per/i2c.h ****         {
  51:../../libDaisy//src/per/i2c.h ****             I2C_100KHZ, /**< & */
  52:../../libDaisy//src/per/i2c.h ****             I2C_400KHZ, /**< & */
  53:../../libDaisy//src/per/i2c.h ****             I2C_1MHZ,   /**< & */
  54:../../libDaisy//src/per/i2c.h ****         };
  55:../../libDaisy//src/per/i2c.h **** 
  56:../../libDaisy//src/per/i2c.h ****         Peripheral periph; /**< & */
  57:../../libDaisy//src/per/i2c.h ****         struct
  58:../../libDaisy//src/per/i2c.h ****         {
  59:../../libDaisy//src/per/i2c.h ****             dsy_gpio_pin scl; /**< & */
  60:../../libDaisy//src/per/i2c.h ****             dsy_gpio_pin sda; /**< & */
  61:../../libDaisy//src/per/i2c.h ****         } pin_config;         /**< & */
  62:../../libDaisy//src/per/i2c.h **** 
  63:../../libDaisy//src/per/i2c.h ****         Speed speed; /**< & */
  64:../../libDaisy//src/per/i2c.h ****         Mode  mode;  /**< & */
  65:../../libDaisy//src/per/i2c.h ****         // 0x10 is chosen as a default to avoid conflicts with reserved addresses
  66:../../libDaisy//src/per/i2c.h ****         uint8_t address = 0x10; /**< & */
  67:../../libDaisy//src/per/i2c.h ****     };
  68:../../libDaisy//src/per/i2c.h **** 
  69:../../libDaisy//src/per/i2c.h ****     /** Return values for I2C functions. */
  70:../../libDaisy//src/per/i2c.h ****     enum class Result
  71:../../libDaisy//src/per/i2c.h ****     {
  72:../../libDaisy//src/per/i2c.h ****         OK, /**< & */
  73:../../libDaisy//src/per/i2c.h ****         ERR /**< & */
  74:../../libDaisy//src/per/i2c.h ****     };
  75:../../libDaisy//src/per/i2c.h **** 
  76:../../libDaisy//src/per/i2c.h ****     enum class Direction
  77:../../libDaisy//src/per/i2c.h ****     {
  78:../../libDaisy//src/per/i2c.h ****         TRANSMIT, /**< & */
  79:../../libDaisy//src/per/i2c.h ****         RECEIVE,  /**< & */
  80:../../libDaisy//src/per/i2c.h ****     };
  81:../../libDaisy//src/per/i2c.h **** 
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 42


  82:../../libDaisy//src/per/i2c.h ****     I2CHandle() : pimpl_(nullptr) {}
 918              		.loc 9 82 5
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 8
 921              		@ frame_needed = 1, uses_anonymous_args = 0
 922              		@ link register save eliminated.
 923 0000 80B4     		push	{r7}
 924              		.cfi_def_cfa_offset 4
 925              		.cfi_offset 7, -4
 926 0002 83B0     		sub	sp, sp, #12
 927              		.cfi_def_cfa_offset 16
 928 0004 00AF     		add	r7, sp, #0
 929              		.cfi_def_cfa_register 7
 930 0006 7860     		str	r0, [r7, #4]
 931              	.LBB8:
 932              		.loc 9 82 33
 933 0008 7B68     		ldr	r3, [r7, #4]
 934 000a 0022     		movs	r2, #0
 935 000c 1A60     		str	r2, [r3]
 936              	.LBE8:
 937              		.loc 9 82 36
 938 000e 7B68     		ldr	r3, [r7, #4]
 939 0010 1846     		mov	r0, r3
 940 0012 0C37     		adds	r7, r7, #12
 941              		.cfi_def_cfa_offset 4
 942 0014 BD46     		mov	sp, r7
 943              		.cfi_def_cfa_register 13
 944              		@ sp needed
 945 0016 5DF8047B 		ldr	r7, [sp], #4
 946              		.cfi_restore 7
 947              		.cfi_def_cfa_offset 0
 948 001a 7047     		bx	lr
 949              		.cfi_endproc
 950              	.LFE3561:
 952              		.weak	_ZN5daisy9I2CHandleC1Ev
 953              		.thumb_set _ZN5daisy9I2CHandleC1Ev,_ZN5daisy9I2CHandleC2Ev
 954              		.section	.text._ZN5daisy18Mpr121I2CTransportC2Ev,"axG",%progbits,_ZN5daisy18Mpr121I2CTransportC5Ev
 955              		.align	1
 956              		.weak	_ZN5daisy18Mpr121I2CTransportC2Ev
 957              		.syntax unified
 958              		.thumb
 959              		.thumb_func
 960              		.fpu fpv5-d16
 962              	_ZN5daisy18Mpr121I2CTransportC2Ev:
 963              	.LFB3581:
 964              		.file 10 "../../libDaisy//src/dev/mpr121.h"
   1:../../libDaisy//src/dev/mpr121.h **** #pragma once
   2:../../libDaisy//src/dev/mpr121.h **** #ifndef DSY_MPR121_H
   3:../../libDaisy//src/dev/mpr121.h **** #define DSY_MPR121_H
   4:../../libDaisy//src/dev/mpr121.h **** 
   5:../../libDaisy//src/dev/mpr121.h **** // The default I2C address
   6:../../libDaisy//src/dev/mpr121.h **** #define MPR121_I2CADDR_DEFAULT 0x5A        ///< default I2C address
   7:../../libDaisy//src/dev/mpr121.h **** #define MPR121_TOUCH_THRESHOLD_DEFAULT 12  ///< default touch threshold value
   8:../../libDaisy//src/dev/mpr121.h **** #define MPR121_RELEASE_THRESHOLD_DEFAULT 6 ///< default relese threshold value
   9:../../libDaisy//src/dev/mpr121.h **** 
  10:../../libDaisy//src/dev/mpr121.h **** namespace daisy
  11:../../libDaisy//src/dev/mpr121.h **** {
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 43


  12:../../libDaisy//src/dev/mpr121.h **** /** @addtogroup external 
  13:../../libDaisy//src/dev/mpr121.h ****     @{ 
  14:../../libDaisy//src/dev/mpr121.h **** */
  15:../../libDaisy//src/dev/mpr121.h **** 
  16:../../libDaisy//src/dev/mpr121.h **** /** I2C Transport for MPR121 */
  17:../../libDaisy//src/dev/mpr121.h **** class Mpr121I2CTransport
  18:../../libDaisy//src/dev/mpr121.h **** {
  19:../../libDaisy//src/dev/mpr121.h ****   public:
  20:../../libDaisy//src/dev/mpr121.h ****     Mpr121I2CTransport() {}
 965              		.loc 10 20 5
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 8
 968              		@ frame_needed = 1, uses_anonymous_args = 0
 969 0000 80B5     		push	{r7, lr}
 970              		.cfi_def_cfa_offset 8
 971              		.cfi_offset 7, -8
 972              		.cfi_offset 14, -4
 973 0002 82B0     		sub	sp, sp, #8
 974              		.cfi_def_cfa_offset 16
 975 0004 00AF     		add	r7, sp, #0
 976              		.cfi_def_cfa_register 7
 977 0006 7860     		str	r0, [r7, #4]
 978              	.LBB9:
 979              		.loc 10 20 26
 980 0008 7B68     		ldr	r3, [r7, #4]
 981 000a 1846     		mov	r0, r3
 982 000c FFF7FEFF 		bl	_ZN5daisy9I2CHandleC1Ev
 983 0010 7B68     		ldr	r3, [r7, #4]
 984 0012 0433     		adds	r3, r3, #4
 985 0014 1846     		mov	r0, r3
 986 0016 FFF7FEFF 		bl	_ZN5daisy18Mpr121I2CTransport6ConfigC1Ev
 987              	.LBE9:
 988              		.loc 10 20 27
 989 001a 7B68     		ldr	r3, [r7, #4]
 990 001c 1846     		mov	r0, r3
 991 001e 0837     		adds	r7, r7, #8
 992              		.cfi_def_cfa_offset 8
 993 0020 BD46     		mov	sp, r7
 994              		.cfi_def_cfa_register 13
 995              		@ sp needed
 996 0022 80BD     		pop	{r7, pc}
 997              		.cfi_endproc
 998              	.LFE3581:
 1000              		.weak	_ZN5daisy18Mpr121I2CTransportC1Ev
 1001              		.thumb_set _ZN5daisy18Mpr121I2CTransportC1Ev,_ZN5daisy18Mpr121I2CTransportC2Ev
 1002              		.section	.text._ZN5daisy18Mpr121I2CTransportD2Ev,"axG",%progbits,_ZN5daisy18Mpr121I2CTransportD5Ev
 1003              		.align	1
 1004              		.weak	_ZN5daisy18Mpr121I2CTransportD2Ev
 1005              		.syntax unified
 1006              		.thumb
 1007              		.thumb_func
 1008              		.fpu fpv5-d16
 1010              	_ZN5daisy18Mpr121I2CTransportD2Ev:
 1011              	.LFB3584:
  21:../../libDaisy//src/dev/mpr121.h ****     ~Mpr121I2CTransport() {}
 1012              		.loc 10 21 5
 1013              		.cfi_startproc
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 44


 1014              		@ args = 0, pretend = 0, frame = 8
 1015              		@ frame_needed = 1, uses_anonymous_args = 0
 1016              		@ link register save eliminated.
 1017 0000 80B4     		push	{r7}
 1018              		.cfi_def_cfa_offset 4
 1019              		.cfi_offset 7, -4
 1020 0002 83B0     		sub	sp, sp, #12
 1021              		.cfi_def_cfa_offset 16
 1022 0004 00AF     		add	r7, sp, #0
 1023              		.cfi_def_cfa_register 7
 1024 0006 7860     		str	r0, [r7, #4]
 1025              		.loc 10 21 28
 1026 0008 7B68     		ldr	r3, [r7, #4]
 1027 000a 1846     		mov	r0, r3
 1028 000c 0C37     		adds	r7, r7, #12
 1029              		.cfi_def_cfa_offset 4
 1030 000e BD46     		mov	sp, r7
 1031              		.cfi_def_cfa_register 13
 1032              		@ sp needed
 1033 0010 5DF8047B 		ldr	r7, [sp], #4
 1034              		.cfi_restore 7
 1035              		.cfi_def_cfa_offset 0
 1036 0014 7047     		bx	lr
 1037              		.cfi_endproc
 1038              	.LFE3584:
 1040              		.weak	_ZN5daisy18Mpr121I2CTransportD1Ev
 1041              		.thumb_set _ZN5daisy18Mpr121I2CTransportD1Ev,_ZN5daisy18Mpr121I2CTransportD2Ev
 1042              		.section	.text._ZN5daisy18Mpr121I2CTransport6ConfigC2Ev,"axG",%progbits,_ZN5daisy18Mpr121I2CTransp
 1043              		.align	1
 1044              		.weak	_ZN5daisy18Mpr121I2CTransport6ConfigC2Ev
 1045              		.syntax unified
 1046              		.thumb
 1047              		.thumb_func
 1048              		.fpu fpv5-d16
 1050              	_ZN5daisy18Mpr121I2CTransport6ConfigC2Ev:
 1051              	.LFB3587:
  22:../../libDaisy//src/dev/mpr121.h **** 
  23:../../libDaisy//src/dev/mpr121.h ****     struct Config
  24:../../libDaisy//src/dev/mpr121.h ****     {
  25:../../libDaisy//src/dev/mpr121.h ****         I2CHandle::Config::Peripheral periph;
  26:../../libDaisy//src/dev/mpr121.h ****         I2CHandle::Config::Speed      speed;
  27:../../libDaisy//src/dev/mpr121.h ****         Pin                           scl;
  28:../../libDaisy//src/dev/mpr121.h ****         Pin                           sda;
  29:../../libDaisy//src/dev/mpr121.h **** 
  30:../../libDaisy//src/dev/mpr121.h ****         I2CHandle::Config::Mode mode;
  31:../../libDaisy//src/dev/mpr121.h **** 
  32:../../libDaisy//src/dev/mpr121.h ****         uint8_t dev_addr;
  33:../../libDaisy//src/dev/mpr121.h **** 
  34:../../libDaisy//src/dev/mpr121.h ****         Config()
 1052              		.loc 10 34 9
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 16
 1055              		@ frame_needed = 1, uses_anonymous_args = 0
 1056 0000 80B5     		push	{r7, lr}
 1057              		.cfi_def_cfa_offset 8
 1058              		.cfi_offset 7, -8
 1059              		.cfi_offset 14, -4
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 45


 1060 0002 84B0     		sub	sp, sp, #16
 1061              		.cfi_def_cfa_offset 24
 1062 0004 00AF     		add	r7, sp, #0
 1063              		.cfi_def_cfa_register 7
 1064 0006 7860     		str	r0, [r7, #4]
 1065              	.LBB10:
  35:../../libDaisy//src/dev/mpr121.h ****         {
 1066              		.loc 10 35 9
 1067 0008 7B68     		ldr	r3, [r7, #4]
 1068 000a 0833     		adds	r3, r3, #8
 1069 000c 1846     		mov	r0, r3
 1070 000e FFF7FEFF 		bl	_ZN5daisy3PinC1Ev
 1071 0012 7B68     		ldr	r3, [r7, #4]
 1072 0014 0A33     		adds	r3, r3, #10
 1073 0016 1846     		mov	r0, r3
 1074 0018 FFF7FEFF 		bl	_ZN5daisy3PinC1Ev
  36:../../libDaisy//src/dev/mpr121.h ****             periph = I2CHandle::Config::Peripheral::I2C_1;
 1075              		.loc 10 36 20
 1076 001c 7B68     		ldr	r3, [r7, #4]
 1077 001e 0022     		movs	r2, #0
 1078 0020 1A60     		str	r2, [r3]
  37:../../libDaisy//src/dev/mpr121.h ****             speed  = I2CHandle::Config::Speed::I2C_400KHZ;
 1079              		.loc 10 37 20
 1080 0022 7B68     		ldr	r3, [r7, #4]
 1081 0024 0122     		movs	r2, #1
 1082 0026 5A60     		str	r2, [r3, #4]
  38:../../libDaisy//src/dev/mpr121.h **** 
  39:../../libDaisy//src/dev/mpr121.h ****             scl = Pin(PORTB, 8);
 1083              		.loc 10 39 31
 1084 0028 07F10803 		add	r3, r7, #8
 1085 002c 0822     		movs	r2, #8
 1086 002e 0121     		movs	r1, #1
 1087 0030 1846     		mov	r0, r3
 1088 0032 FFF7FEFF 		bl	_ZN5daisy3PinC1ENS_8GPIOPortEh
 1089              		.loc 10 39 17
 1090 0036 7B68     		ldr	r3, [r7, #4]
 1091 0038 3A89     		ldrh	r2, [r7, #8]	@ movhi
 1092 003a 1A81     		strh	r2, [r3, #8]	@ movhi
  40:../../libDaisy//src/dev/mpr121.h ****             sda = Pin(PORTB, 9);
 1093              		.loc 10 40 31
 1094 003c 07F10C03 		add	r3, r7, #12
 1095 0040 0922     		movs	r2, #9
 1096 0042 0121     		movs	r1, #1
 1097 0044 1846     		mov	r0, r3
 1098 0046 FFF7FEFF 		bl	_ZN5daisy3PinC1ENS_8GPIOPortEh
 1099              		.loc 10 40 17
 1100 004a 7B68     		ldr	r3, [r7, #4]
 1101 004c BA89     		ldrh	r2, [r7, #12]	@ movhi
 1102 004e 5A81     		strh	r2, [r3, #10]	@ movhi
  41:../../libDaisy//src/dev/mpr121.h **** 
  42:../../libDaisy//src/dev/mpr121.h ****             dev_addr = MPR121_I2CADDR_DEFAULT;
 1103              		.loc 10 42 22
 1104 0050 7B68     		ldr	r3, [r7, #4]
 1105 0052 5A22     		movs	r2, #90
 1106 0054 1A74     		strb	r2, [r3, #16]
 1107              	.LBE10:
  43:../../libDaisy//src/dev/mpr121.h ****         }
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 46


 1108              		.loc 10 43 9
 1109 0056 7B68     		ldr	r3, [r7, #4]
 1110 0058 1846     		mov	r0, r3
 1111 005a 1037     		adds	r7, r7, #16
 1112              		.cfi_def_cfa_offset 8
 1113 005c BD46     		mov	sp, r7
 1114              		.cfi_def_cfa_register 13
 1115              		@ sp needed
 1116 005e 80BD     		pop	{r7, pc}
 1117              		.cfi_endproc
 1118              	.LFE3587:
 1120              		.weak	_ZN5daisy18Mpr121I2CTransport6ConfigC1Ev
 1121              		.thumb_set _ZN5daisy18Mpr121I2CTransport6ConfigC1Ev,_ZN5daisy18Mpr121I2CTransport6ConfigC2Ev
 1122              		.section	.text._ZN5daisy9I2CHandle6ConfigC2Ev,"axG",%progbits,_ZN5daisy9I2CHandle6ConfigC5Ev,comda
 1123              		.align	1
 1124              		.weak	_ZN5daisy9I2CHandle6ConfigC2Ev
 1125              		.syntax unified
 1126              		.thumb
 1127              		.thumb_func
 1128              		.fpu fpv5-d16
 1130              	_ZN5daisy9I2CHandle6ConfigC2Ev:
 1131              	.LFB3591:
  28:../../libDaisy//src/per/i2c.h ****     {
 1132              		.loc 9 28 12
 1133              		.cfi_startproc
 1134              		@ args = 0, pretend = 0, frame = 8
 1135              		@ frame_needed = 1, uses_anonymous_args = 0
 1136              		@ link register save eliminated.
 1137 0000 80B4     		push	{r7}
 1138              		.cfi_def_cfa_offset 4
 1139              		.cfi_offset 7, -4
 1140 0002 83B0     		sub	sp, sp, #12
 1141              		.cfi_def_cfa_offset 16
 1142 0004 00AF     		add	r7, sp, #0
 1143              		.cfi_def_cfa_register 7
 1144 0006 7860     		str	r0, [r7, #4]
 1145              	.LBB11:
  28:../../libDaisy//src/per/i2c.h ****     {
 1146              		.loc 9 28 12
 1147 0008 7B68     		ldr	r3, [r7, #4]
 1148 000a 1022     		movs	r2, #16
 1149 000c 1A74     		strb	r2, [r3, #16]
 1150              	.LBE11:
 1151 000e 7B68     		ldr	r3, [r7, #4]
 1152 0010 1846     		mov	r0, r3
 1153 0012 0C37     		adds	r7, r7, #12
 1154              		.cfi_def_cfa_offset 4
 1155 0014 BD46     		mov	sp, r7
 1156              		.cfi_def_cfa_register 13
 1157              		@ sp needed
 1158 0016 5DF8047B 		ldr	r7, [sp], #4
 1159              		.cfi_restore 7
 1160              		.cfi_def_cfa_offset 0
 1161 001a 7047     		bx	lr
 1162              		.cfi_endproc
 1163              	.LFE3591:
 1165              		.weak	_ZN5daisy9I2CHandle6ConfigC1Ev
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 47


 1166              		.thumb_set _ZN5daisy9I2CHandle6ConfigC1Ev,_ZN5daisy9I2CHandle6ConfigC2Ev
 1167              		.section	.text._ZN5daisy18Mpr121I2CTransport4InitENS0_6ConfigE,"axG",%progbits,_ZN5daisy18Mpr121I2
 1168              		.align	1
 1169              		.weak	_ZN5daisy18Mpr121I2CTransport4InitENS0_6ConfigE
 1170              		.syntax unified
 1171              		.thumb
 1172              		.thumb_func
 1173              		.fpu fpv5-d16
 1175              	_ZN5daisy18Mpr121I2CTransport4InitENS0_6ConfigE:
 1176              	.LFB3589:
  44:../../libDaisy//src/dev/mpr121.h ****     };
  45:../../libDaisy//src/dev/mpr121.h **** 
  46:../../libDaisy//src/dev/mpr121.h ****     /** \return Did the transaction error? i.e. Return true if error, false if ok */
  47:../../libDaisy//src/dev/mpr121.h ****     inline bool Init(Config config)
 1177              		.loc 10 47 17
 1178              		.cfi_startproc
 1179              		@ args = 24, pretend = 16, frame = 32
 1180              		@ frame_needed = 1, uses_anonymous_args = 0
 1181 0000 84B0     		sub	sp, sp, #16
 1182              		.cfi_def_cfa_offset 16
 1183 0002 B0B5     		push	{r4, r5, r7, lr}
 1184              		.cfi_def_cfa_offset 32
 1185              		.cfi_offset 4, -32
 1186              		.cfi_offset 5, -28
 1187              		.cfi_offset 7, -24
 1188              		.cfi_offset 14, -20
 1189 0004 88B0     		sub	sp, sp, #32
 1190              		.cfi_def_cfa_offset 64
 1191 0006 00AF     		add	r7, sp, #0
 1192              		.cfi_def_cfa_register 7
 1193 0008 7860     		str	r0, [r7, #4]
 1194 000a 07F13400 		add	r0, r7, #52
 1195 000e 80E80E00 		stm	r0, {r1, r2, r3}
  48:../../libDaisy//src/dev/mpr121.h ****     {
  49:../../libDaisy//src/dev/mpr121.h ****         config_ = config;
 1196              		.loc 10 49 17
 1197 0012 7B68     		ldr	r3, [r7, #4]
 1198 0014 1D1D     		adds	r5, r3, #4
 1199 0016 07F13404 		add	r4, r7, #52
 1200 001a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1201 001c 2860     		str	r0, [r5]	@ unaligned
 1202 001e 6960     		str	r1, [r5, #4]	@ unaligned
 1203 0020 AA60     		str	r2, [r5, #8]	@ unaligned
 1204 0022 EB60     		str	r3, [r5, #12]	@ unaligned
 1205 0024 2378     		ldrb	r3, [r4]
 1206 0026 2B74     		strb	r3, [r5, #16]
  50:../../libDaisy//src/dev/mpr121.h **** 
  51:../../libDaisy//src/dev/mpr121.h ****         I2CHandle::Config i2c_conf;
 1207              		.loc 10 51 27
 1208 0028 07F10C03 		add	r3, r7, #12
 1209 002c 1846     		mov	r0, r3
 1210 002e FFF7FEFF 		bl	_ZN5daisy9I2CHandle6ConfigC1Ev
  52:../../libDaisy//src/dev/mpr121.h ****         i2c_conf.mode   = I2CHandle::Config::Mode::I2C_MASTER;
 1211              		.loc 10 52 25
 1212 0032 0023     		movs	r3, #0
 1213 0034 BB61     		str	r3, [r7, #24]
  53:../../libDaisy//src/dev/mpr121.h ****         i2c_conf.periph = config.periph;
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 48


 1214              		.loc 10 53 34
 1215 0036 7B6B     		ldr	r3, [r7, #52]
 1216              		.loc 10 53 25
 1217 0038 FB60     		str	r3, [r7, #12]
  54:../../libDaisy//src/dev/mpr121.h ****         i2c_conf.speed  = config.speed;
 1218              		.loc 10 54 34
 1219 003a BB6B     		ldr	r3, [r7, #56]
 1220              		.loc 10 54 25
 1221 003c 7B61     		str	r3, [r7, #20]
  55:../../libDaisy//src/dev/mpr121.h **** 
  56:../../libDaisy//src/dev/mpr121.h ****         i2c_conf.pin_config.scl = config.scl;
 1222              		.loc 10 56 42
 1223 003e 07F13403 		add	r3, r7, #52
 1224 0042 0833     		adds	r3, r3, #8
 1225 0044 1846     		mov	r0, r3
 1226 0046 FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 1227 004a 0346     		mov	r3, r0	@ movhi
 1228 004c 3B82     		strh	r3, [r7, #16]	@ movhi
  57:../../libDaisy//src/dev/mpr121.h ****         i2c_conf.pin_config.sda = config.sda;
 1229              		.loc 10 57 42
 1230 004e 07F13403 		add	r3, r7, #52
 1231 0052 0A33     		adds	r3, r3, #10
 1232 0054 1846     		mov	r0, r3
 1233 0056 FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 1234 005a 0346     		mov	r3, r0	@ movhi
 1235 005c 7B82     		strh	r3, [r7, #18]	@ movhi
  58:../../libDaisy//src/dev/mpr121.h **** 
  59:../../libDaisy//src/dev/mpr121.h ****         return I2CHandle::Result::OK != i2c_.Init(i2c_conf);
 1236              		.loc 10 59 50
 1237 005e 7B68     		ldr	r3, [r7, #4]
 1238 0060 07F10C02 		add	r2, r7, #12
 1239 0064 1146     		mov	r1, r2
 1240 0066 1846     		mov	r0, r3
 1241 0068 FFF7FEFF 		bl	_ZN5daisy9I2CHandle4InitERKNS0_6ConfigE
 1242 006c 0346     		mov	r3, r0
 1243              		.loc 10 59 59
 1244 006e 002B     		cmp	r3, #0
 1245 0070 14BF     		ite	ne
 1246 0072 0123     		movne	r3, #1
 1247 0074 0023     		moveq	r3, #0
 1248 0076 DBB2     		uxtb	r3, r3
  60:../../libDaisy//src/dev/mpr121.h ****     }
 1249              		.loc 10 60 5
 1250 0078 1846     		mov	r0, r3
 1251 007a 2037     		adds	r7, r7, #32
 1252              		.cfi_def_cfa_offset 32
 1253 007c BD46     		mov	sp, r7
 1254              		.cfi_def_cfa_register 13
 1255              		@ sp needed
 1256 007e BDE8B040 		pop	{r4, r5, r7, lr}
 1257              		.cfi_restore 14
 1258              		.cfi_restore 7
 1259              		.cfi_restore 5
 1260              		.cfi_restore 4
 1261              		.cfi_def_cfa_offset 16
 1262 0082 04B0     		add	sp, sp, #16
 1263              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 49


 1264 0084 7047     		bx	lr
 1265              		.cfi_endproc
 1266              	.LFE3589:
 1268              		.section	.text._ZN5daisy18Mpr121I2CTransport5WriteEPht,"axG",%progbits,_ZN5daisy18Mpr121I2CTranspo
 1269              		.align	1
 1270              		.weak	_ZN5daisy18Mpr121I2CTransport5WriteEPht
 1271              		.syntax unified
 1272              		.thumb
 1273              		.thumb_func
 1274              		.fpu fpv5-d16
 1276              	_ZN5daisy18Mpr121I2CTransport5WriteEPht:
 1277              	.LFB3593:
  61:../../libDaisy//src/dev/mpr121.h **** 
  62:../../libDaisy//src/dev/mpr121.h ****     /** \return Did the transaction error? i.e. Return true if error, false if ok */
  63:../../libDaisy//src/dev/mpr121.h ****     bool Write(uint8_t *data, uint16_t size)
 1278              		.loc 10 63 10
 1279              		.cfi_startproc
 1280              		@ args = 0, pretend = 0, frame = 16
 1281              		@ frame_needed = 1, uses_anonymous_args = 0
 1282 0000 80B5     		push	{r7, lr}
 1283              		.cfi_def_cfa_offset 8
 1284              		.cfi_offset 7, -8
 1285              		.cfi_offset 14, -4
 1286 0002 86B0     		sub	sp, sp, #24
 1287              		.cfi_def_cfa_offset 32
 1288 0004 02AF     		add	r7, sp, #8
 1289              		.cfi_def_cfa 7, 24
 1290 0006 F860     		str	r0, [r7, #12]
 1291 0008 B960     		str	r1, [r7, #8]
 1292 000a 1346     		mov	r3, r2
 1293 000c FB80     		strh	r3, [r7, #6]	@ movhi
  64:../../libDaisy//src/dev/mpr121.h ****     {
  65:../../libDaisy//src/dev/mpr121.h ****         return I2CHandle::Result::OK
  66:../../libDaisy//src/dev/mpr121.h ****                != i2c_.TransmitBlocking(config_.dev_addr, data, size, 10);
 1294              		.loc 10 66 40
 1295 000e F868     		ldr	r0, [r7, #12]
 1296              		.loc 10 66 49
 1297 0010 FB68     		ldr	r3, [r7, #12]
 1298 0012 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1299              		.loc 10 66 40
 1300 0014 99B2     		uxth	r1, r3
 1301 0016 FB88     		ldrh	r3, [r7, #6]
 1302 0018 0A22     		movs	r2, #10
 1303 001a 0092     		str	r2, [sp]
 1304 001c BA68     		ldr	r2, [r7, #8]
 1305 001e FFF7FEFF 		bl	_ZN5daisy9I2CHandle16TransmitBlockingEtPhtm
 1306 0022 0346     		mov	r3, r0
 1307              		.loc 10 66 73
 1308 0024 002B     		cmp	r3, #0
 1309 0026 14BF     		ite	ne
 1310 0028 0123     		movne	r3, #1
 1311 002a 0023     		moveq	r3, #0
 1312 002c DBB2     		uxtb	r3, r3
  67:../../libDaisy//src/dev/mpr121.h ****     }
 1313              		.loc 10 67 5
 1314 002e 1846     		mov	r0, r3
 1315 0030 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 50


 1316              		.cfi_def_cfa_offset 8
 1317 0032 BD46     		mov	sp, r7
 1318              		.cfi_def_cfa_register 13
 1319              		@ sp needed
 1320 0034 80BD     		pop	{r7, pc}
 1321              		.cfi_endproc
 1322              	.LFE3593:
 1324              		.section	.text._ZN5daisy18Mpr121I2CTransport4ReadEPht,"axG",%progbits,_ZN5daisy18Mpr121I2CTranspor
 1325              		.align	1
 1326              		.weak	_ZN5daisy18Mpr121I2CTransport4ReadEPht
 1327              		.syntax unified
 1328              		.thumb
 1329              		.thumb_func
 1330              		.fpu fpv5-d16
 1332              	_ZN5daisy18Mpr121I2CTransport4ReadEPht:
 1333              	.LFB3594:
  68:../../libDaisy//src/dev/mpr121.h **** 
  69:../../libDaisy//src/dev/mpr121.h ****     /** \return Did the transaction error? i.e. Return true if error, false if ok */
  70:../../libDaisy//src/dev/mpr121.h ****     bool Read(uint8_t *data, uint16_t size)
 1334              		.loc 10 70 10
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 16
 1337              		@ frame_needed = 1, uses_anonymous_args = 0
 1338 0000 80B5     		push	{r7, lr}
 1339              		.cfi_def_cfa_offset 8
 1340              		.cfi_offset 7, -8
 1341              		.cfi_offset 14, -4
 1342 0002 86B0     		sub	sp, sp, #24
 1343              		.cfi_def_cfa_offset 32
 1344 0004 02AF     		add	r7, sp, #8
 1345              		.cfi_def_cfa 7, 24
 1346 0006 F860     		str	r0, [r7, #12]
 1347 0008 B960     		str	r1, [r7, #8]
 1348 000a 1346     		mov	r3, r2
 1349 000c FB80     		strh	r3, [r7, #6]	@ movhi
  71:../../libDaisy//src/dev/mpr121.h ****     {
  72:../../libDaisy//src/dev/mpr121.h ****         return I2CHandle::Result::OK
  73:../../libDaisy//src/dev/mpr121.h ****                != i2c_.ReceiveBlocking(config_.dev_addr, data, size, 10);
 1350              		.loc 10 73 39
 1351 000e F868     		ldr	r0, [r7, #12]
 1352              		.loc 10 73 48
 1353 0010 FB68     		ldr	r3, [r7, #12]
 1354 0012 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1355              		.loc 10 73 39
 1356 0014 99B2     		uxth	r1, r3
 1357 0016 FB88     		ldrh	r3, [r7, #6]
 1358 0018 0A22     		movs	r2, #10
 1359 001a 0092     		str	r2, [sp]
 1360 001c BA68     		ldr	r2, [r7, #8]
 1361 001e FFF7FEFF 		bl	_ZN5daisy9I2CHandle15ReceiveBlockingEtPhtm
 1362 0022 0346     		mov	r3, r0
 1363              		.loc 10 73 72
 1364 0024 002B     		cmp	r3, #0
 1365 0026 14BF     		ite	ne
 1366 0028 0123     		movne	r3, #1
 1367 002a 0023     		moveq	r3, #0
 1368 002c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 51


  74:../../libDaisy//src/dev/mpr121.h ****     }
 1369              		.loc 10 74 5
 1370 002e 1846     		mov	r0, r3
 1371 0030 1037     		adds	r7, r7, #16
 1372              		.cfi_def_cfa_offset 8
 1373 0032 BD46     		mov	sp, r7
 1374              		.cfi_def_cfa_register 13
 1375              		@ sp needed
 1376 0034 80BD     		pop	{r7, pc}
 1377              		.cfi_endproc
 1378              	.LFE3594:
 1380              		.section	.text._ZN5daisy9SaiHandleC2Ev,"axG",%progbits,_ZN5daisy9SaiHandleC5Ev,comdat
 1381              		.align	1
 1382              		.weak	_ZN5daisy9SaiHandleC2Ev
 1383              		.syntax unified
 1384              		.thumb
 1385              		.thumb_func
 1386              		.fpu fpv5-d16
 1388              	_ZN5daisy9SaiHandleC2Ev:
 1389              	.LFB3615:
 1390              		.file 11 "../../libDaisy//src/per/sai.h"
   1:../../libDaisy//src/per/sai.h **** #pragma once
   2:../../libDaisy//src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../libDaisy//src/per/sai.h **** #define DSY_SAI_H
   4:../../libDaisy//src/per/sai.h **** 
   5:../../libDaisy//src/per/sai.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/sai.h **** 
   7:../../libDaisy//src/per/sai.h **** namespace daisy
   8:../../libDaisy//src/per/sai.h **** {
   9:../../libDaisy//src/per/sai.h **** /** 
  10:../../libDaisy//src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../libDaisy//src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../libDaisy//src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../../libDaisy//src/per/sai.h ****  * 
  14:../../libDaisy//src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../libDaisy//src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../../libDaisy//src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../libDaisy//src/per/sai.h ****  *
  18:../../libDaisy//src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../libDaisy//src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../libDaisy//src/per/sai.h ****  * 
  21:../../libDaisy//src/per/sai.h ****  * Use SAI Handle like this:
  22:../../libDaisy//src/per/sai.h ****  * 
  23:../../libDaisy//src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../../libDaisy//src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../../libDaisy//src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../../libDaisy//src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../libDaisy//src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../libDaisy//src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../libDaisy//src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../libDaisy//src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../libDaisy//src/per/sai.h ****  *  // Then Initialize
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 52


  37:../../libDaisy//src/per/sai.h ****  *  SaiHandle sai;
  38:../../libDaisy//src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../libDaisy//src/per/sai.h ****  *  // Now you can use it:
  40:../../libDaisy//src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../libDaisy//src/per/sai.h ****  */
  42:../../libDaisy//src/per/sai.h **** class SaiHandle
  43:../../libDaisy//src/per/sai.h **** {
  44:../../libDaisy//src/per/sai.h ****   public:
  45:../../libDaisy//src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../libDaisy//src/per/sai.h ****     struct Config
  47:../../libDaisy//src/per/sai.h ****     {
  48:../../libDaisy//src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../../libDaisy//src/per/sai.h ****         enum class Peripheral
  50:../../libDaisy//src/per/sai.h ****         {
  51:../../libDaisy//src/per/sai.h ****             SAI_1,
  52:../../libDaisy//src/per/sai.h ****             SAI_2,
  53:../../libDaisy//src/per/sai.h ****         };
  54:../../libDaisy//src/per/sai.h **** 
  55:../../libDaisy//src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../libDaisy//src/per/sai.h ****         enum class SampleRate
  57:../../libDaisy//src/per/sai.h ****         {
  58:../../libDaisy//src/per/sai.h ****             SAI_8KHZ,
  59:../../libDaisy//src/per/sai.h ****             SAI_16KHZ,
  60:../../libDaisy//src/per/sai.h ****             SAI_32KHZ,
  61:../../libDaisy//src/per/sai.h ****             SAI_48KHZ,
  62:../../libDaisy//src/per/sai.h ****             SAI_96KHZ,
  63:../../libDaisy//src/per/sai.h ****         };
  64:../../libDaisy//src/per/sai.h **** 
  65:../../libDaisy//src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../libDaisy//src/per/sai.h ****         enum class BitDepth
  67:../../libDaisy//src/per/sai.h ****         {
  68:../../libDaisy//src/per/sai.h ****             SAI_16BIT,
  69:../../libDaisy//src/per/sai.h ****             SAI_24BIT,
  70:../../libDaisy//src/per/sai.h ****             SAI_32BIT,
  71:../../libDaisy//src/per/sai.h ****         };
  72:../../libDaisy//src/per/sai.h **** 
  73:../../libDaisy//src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../libDaisy//src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../../libDaisy//src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../libDaisy//src/per/sai.h ****          */
  77:../../libDaisy//src/per/sai.h ****         enum class Sync
  78:../../libDaisy//src/per/sai.h ****         {
  79:../../libDaisy//src/per/sai.h ****             MASTER,
  80:../../libDaisy//src/per/sai.h ****             SLAVE,
  81:../../libDaisy//src/per/sai.h ****         };
  82:../../libDaisy//src/per/sai.h **** 
  83:../../libDaisy//src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../libDaisy//src/per/sai.h ****         enum class Direction
  85:../../libDaisy//src/per/sai.h ****         {
  86:../../libDaisy//src/per/sai.h ****             TRANSMIT,
  87:../../libDaisy//src/per/sai.h ****             RECEIVE,
  88:../../libDaisy//src/per/sai.h ****         };
  89:../../libDaisy//src/per/sai.h **** 
  90:../../libDaisy//src/per/sai.h ****         Peripheral periph;
  91:../../libDaisy//src/per/sai.h ****         struct
  92:../../libDaisy//src/per/sai.h ****         {
  93:../../libDaisy//src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 53


  94:../../libDaisy//src/per/sai.h ****         } pin_config;
  95:../../libDaisy//src/per/sai.h ****         SampleRate sr;
  96:../../libDaisy//src/per/sai.h ****         BitDepth   bit_depth;
  97:../../libDaisy//src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../libDaisy//src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../../libDaisy//src/per/sai.h ****     };
 100:../../libDaisy//src/per/sai.h **** 
 101:../../libDaisy//src/per/sai.h ****     /** Return values for SAI functions */
 102:../../libDaisy//src/per/sai.h ****     enum class Result
 103:../../libDaisy//src/per/sai.h ****     {
 104:../../libDaisy//src/per/sai.h ****         OK,
 105:../../libDaisy//src/per/sai.h ****         ERR,
 106:../../libDaisy//src/per/sai.h ****     };
 107:../../libDaisy//src/per/sai.h **** 
 108:../../libDaisy//src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 1391              		.loc 11 108 5
 1392              		.cfi_startproc
 1393              		@ args = 0, pretend = 0, frame = 8
 1394              		@ frame_needed = 1, uses_anonymous_args = 0
 1395              		@ link register save eliminated.
 1396 0000 80B4     		push	{r7}
 1397              		.cfi_def_cfa_offset 4
 1398              		.cfi_offset 7, -4
 1399 0002 83B0     		sub	sp, sp, #12
 1400              		.cfi_def_cfa_offset 16
 1401 0004 00AF     		add	r7, sp, #0
 1402              		.cfi_def_cfa_register 7
 1403 0006 7860     		str	r0, [r7, #4]
 1404              	.LBB12:
 1405              		.loc 11 108 33
 1406 0008 7B68     		ldr	r3, [r7, #4]
 1407 000a 0022     		movs	r2, #0
 1408 000c 1A60     		str	r2, [r3]
 1409              	.LBE12:
 1410              		.loc 11 108 36
 1411 000e 7B68     		ldr	r3, [r7, #4]
 1412 0010 1846     		mov	r0, r3
 1413 0012 0C37     		adds	r7, r7, #12
 1414              		.cfi_def_cfa_offset 4
 1415 0014 BD46     		mov	sp, r7
 1416              		.cfi_def_cfa_register 13
 1417              		@ sp needed
 1418 0016 5DF8047B 		ldr	r7, [sp], #4
 1419              		.cfi_restore 7
 1420              		.cfi_def_cfa_offset 0
 1421 001a 7047     		bx	lr
 1422              		.cfi_endproc
 1423              	.LFE3615:
 1425              		.weak	_ZN5daisy9SaiHandleC1Ev
 1426              		.thumb_set _ZN5daisy9SaiHandleC1Ev,_ZN5daisy9SaiHandleC2Ev
 1427              		.section	.text._ZN5daisy11AudioHandleC2Ev,"axG",%progbits,_ZN5daisy11AudioHandleC5Ev,comdat
 1428              		.align	1
 1429              		.weak	_ZN5daisy11AudioHandleC2Ev
 1430              		.syntax unified
 1431              		.thumb
 1432              		.thumb_func
 1433              		.fpu fpv5-d16
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 54


 1435              	_ZN5daisy11AudioHandleC2Ev:
 1436              	.LFB3622:
 1437              		.file 12 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 55


  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
 1438              		.loc 12 95 5
 1439              		.cfi_startproc
 1440              		@ args = 0, pretend = 0, frame = 8
 1441              		@ frame_needed = 1, uses_anonymous_args = 0
 1442              		@ link register save eliminated.
 1443 0000 80B4     		push	{r7}
 1444              		.cfi_def_cfa_offset 4
 1445              		.cfi_offset 7, -4
 1446 0002 83B0     		sub	sp, sp, #12
 1447              		.cfi_def_cfa_offset 16
 1448 0004 00AF     		add	r7, sp, #0
 1449              		.cfi_def_cfa_register 7
 1450 0006 7860     		str	r0, [r7, #4]
 1451              	.LBB13:
 1452              		.loc 12 95 35
 1453 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 56


 1454 000a 0022     		movs	r2, #0
 1455 000c 1A60     		str	r2, [r3]
 1456              	.LBE13:
 1457              		.loc 12 95 38
 1458 000e 7B68     		ldr	r3, [r7, #4]
 1459 0010 1846     		mov	r0, r3
 1460 0012 0C37     		adds	r7, r7, #12
 1461              		.cfi_def_cfa_offset 4
 1462 0014 BD46     		mov	sp, r7
 1463              		.cfi_def_cfa_register 13
 1464              		@ sp needed
 1465 0016 5DF8047B 		ldr	r7, [sp], #4
 1466              		.cfi_restore 7
 1467              		.cfi_def_cfa_offset 0
 1468 001a 7047     		bx	lr
 1469              		.cfi_endproc
 1470              	.LFE3622:
 1472              		.weak	_ZN5daisy11AudioHandleC1Ev
 1473              		.thumb_set _ZN5daisy11AudioHandleC1Ev,_ZN5daisy11AudioHandleC2Ev
 1474              		.section	.text._ZN5daisy11AudioHandleD2Ev,"axG",%progbits,_ZN5daisy11AudioHandleD5Ev,comdat
 1475              		.align	1
 1476              		.weak	_ZN5daisy11AudioHandleD2Ev
 1477              		.syntax unified
 1478              		.thumb
 1479              		.thumb_func
 1480              		.fpu fpv5-d16
 1482              	_ZN5daisy11AudioHandleD2Ev:
 1483              	.LFB3625:
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1484              		.loc 12 96 5
 1485              		.cfi_startproc
 1486              		@ args = 0, pretend = 0, frame = 8
 1487              		@ frame_needed = 1, uses_anonymous_args = 0
 1488              		@ link register save eliminated.
 1489 0000 80B4     		push	{r7}
 1490              		.cfi_def_cfa_offset 4
 1491              		.cfi_offset 7, -4
 1492 0002 83B0     		sub	sp, sp, #12
 1493              		.cfi_def_cfa_offset 16
 1494 0004 00AF     		add	r7, sp, #0
 1495              		.cfi_def_cfa_register 7
 1496 0006 7860     		str	r0, [r7, #4]
 1497              		.loc 12 96 21
 1498 0008 7B68     		ldr	r3, [r7, #4]
 1499 000a 1846     		mov	r0, r3
 1500 000c 0C37     		adds	r7, r7, #12
 1501              		.cfi_def_cfa_offset 4
 1502 000e BD46     		mov	sp, r7
 1503              		.cfi_def_cfa_register 13
 1504              		@ sp needed
 1505 0010 5DF8047B 		ldr	r7, [sp], #4
 1506              		.cfi_restore 7
 1507              		.cfi_def_cfa_offset 0
 1508 0014 7047     		bx	lr
 1509              		.cfi_endproc
 1510              	.LFE3625:
 1512              		.weak	_ZN5daisy11AudioHandleD1Ev
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 57


 1513              		.thumb_set _ZN5daisy11AudioHandleD1Ev,_ZN5daisy11AudioHandleD2Ev
 1514              		.section	.text._ZN5daisy9AdcHandleC2Ev,"axG",%progbits,_ZN5daisy9AdcHandleC5Ev,comdat
 1515              		.align	1
 1516              		.weak	_ZN5daisy9AdcHandleC2Ev
 1517              		.syntax unified
 1518              		.thumb
 1519              		.thumb_func
 1520              		.fpu fpv5-d16
 1522              	_ZN5daisy9AdcHandleC2Ev:
 1523              	.LFB3628:
 1524              		.file 13 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../libDaisy//src/per/adc.h ****     enum ConversionSpeed
  44:../../libDaisy//src/per/adc.h ****     {
  45:../../libDaisy//src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../libDaisy//src/per/adc.h ****         SPEED_2CYCLES_5,
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 58


  47:../../libDaisy//src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../libDaisy//src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../libDaisy//src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../libDaisy//src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../libDaisy//src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../libDaisy//src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../libDaisy//src/per/adc.h ****     };
  54:../../libDaisy//src/per/adc.h **** 
  55:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  57:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../libDaisy//src/per/adc.h ****      */
  59:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../libDaisy//src/per/adc.h **** 
  61:../../libDaisy//src/per/adc.h ****     /** 
  62:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  68:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  70:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../libDaisy//src/per/adc.h ****     */
  74:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../libDaisy//src/per/adc.h ****                  size_t          mux_channels,
  76:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_0,
  77:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../libDaisy//src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../libDaisy//src/per/adc.h **** 
  81:../../libDaisy//src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../libDaisy//src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../libDaisy//src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../libDaisy//src/per/adc.h ****     ConversionSpeed speed_;
  85:../../libDaisy//src/per/adc.h **** };
  86:../../libDaisy//src/per/adc.h **** 
  87:../../libDaisy//src/per/adc.h **** /**
  88:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../libDaisy//src/per/adc.h **** */
  90:../../libDaisy//src/per/adc.h **** class AdcHandle
  91:../../libDaisy//src/per/adc.h **** {
  92:../../libDaisy//src/per/adc.h ****   public:
  93:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../libDaisy//src/per/adc.h ****     enum OverSampling
  95:../../libDaisy//src/per/adc.h ****     {
  96:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  98:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  99:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
 100:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
 101:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
 102:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
 103:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 59


 104:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
 105:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
 106:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../libDaisy//src/per/adc.h ****     };
 108:../../libDaisy//src/per/adc.h **** 
 109:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
 1525              		.loc 13 109 5
 1526              		.cfi_startproc
 1527              		@ args = 0, pretend = 0, frame = 8
 1528              		@ frame_needed = 1, uses_anonymous_args = 0
 1529              		@ link register save eliminated.
 1530 0000 80B4     		push	{r7}
 1531              		.cfi_def_cfa_offset 4
 1532              		.cfi_offset 7, -4
 1533 0002 83B0     		sub	sp, sp, #12
 1534              		.cfi_def_cfa_offset 16
 1535 0004 00AF     		add	r7, sp, #0
 1536              		.cfi_def_cfa_register 7
 1537 0006 7860     		str	r0, [r7, #4]
 1538              		.loc 13 109 18
 1539 0008 7B68     		ldr	r3, [r7, #4]
 1540 000a 1846     		mov	r0, r3
 1541 000c 0C37     		adds	r7, r7, #12
 1542              		.cfi_def_cfa_offset 4
 1543 000e BD46     		mov	sp, r7
 1544              		.cfi_def_cfa_register 13
 1545              		@ sp needed
 1546 0010 5DF8047B 		ldr	r7, [sp], #4
 1547              		.cfi_restore 7
 1548              		.cfi_def_cfa_offset 0
 1549 0014 7047     		bx	lr
 1550              		.cfi_endproc
 1551              	.LFE3628:
 1553              		.weak	_ZN5daisy9AdcHandleC1Ev
 1554              		.thumb_set _ZN5daisy9AdcHandleC1Ev,_ZN5daisy9AdcHandleC2Ev
 1555              		.section	.text._ZN5daisy9AdcHandleD2Ev,"axG",%progbits,_ZN5daisy9AdcHandleD5Ev,comdat
 1556              		.align	1
 1557              		.weak	_ZN5daisy9AdcHandleD2Ev
 1558              		.syntax unified
 1559              		.thumb
 1560              		.thumb_func
 1561              		.fpu fpv5-d16
 1563              	_ZN5daisy9AdcHandleD2Ev:
 1564              	.LFB3631:
 110:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 1565              		.loc 13 110 5
 1566              		.cfi_startproc
 1567              		@ args = 0, pretend = 0, frame = 8
 1568              		@ frame_needed = 1, uses_anonymous_args = 0
 1569              		@ link register save eliminated.
 1570 0000 80B4     		push	{r7}
 1571              		.cfi_def_cfa_offset 4
 1572              		.cfi_offset 7, -4
 1573 0002 83B0     		sub	sp, sp, #12
 1574              		.cfi_def_cfa_offset 16
 1575 0004 00AF     		add	r7, sp, #0
 1576              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 60


 1577 0006 7860     		str	r0, [r7, #4]
 1578              		.loc 13 110 19
 1579 0008 7B68     		ldr	r3, [r7, #4]
 1580 000a 1846     		mov	r0, r3
 1581 000c 0C37     		adds	r7, r7, #12
 1582              		.cfi_def_cfa_offset 4
 1583 000e BD46     		mov	sp, r7
 1584              		.cfi_def_cfa_register 13
 1585              		@ sp needed
 1586 0010 5DF8047B 		ldr	r7, [sp], #4
 1587              		.cfi_restore 7
 1588              		.cfi_def_cfa_offset 0
 1589 0014 7047     		bx	lr
 1590              		.cfi_endproc
 1591              	.LFE3631:
 1593              		.weak	_ZN5daisy9AdcHandleD1Ev
 1594              		.thumb_set _ZN5daisy9AdcHandleD1Ev,_ZN5daisy9AdcHandleD2Ev
 1595              		.section	.text._ZN5daisy9UsbHandleC2Ev,"axG",%progbits,_ZN5daisy9UsbHandleC5Ev,comdat
 1596              		.align	1
 1597              		.weak	_ZN5daisy9UsbHandleC2Ev
 1598              		.syntax unified
 1599              		.thumb
 1600              		.thumb_func
 1601              		.fpu fpv5-d16
 1603              	_ZN5daisy9UsbHandleC2Ev:
 1604              	.LFB3723:
 1605              		.file 14 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 61


  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
 1606              		.loc 14 40 5
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 8
 1609              		@ frame_needed = 1, uses_anonymous_args = 0
 1610              		@ link register save eliminated.
 1611 0000 80B4     		push	{r7}
 1612              		.cfi_def_cfa_offset 4
 1613              		.cfi_offset 7, -4
 1614 0002 83B0     		sub	sp, sp, #12
 1615              		.cfi_def_cfa_offset 16
 1616 0004 00AF     		add	r7, sp, #0
 1617              		.cfi_def_cfa_register 7
 1618 0006 7860     		str	r0, [r7, #4]
 1619              		.loc 14 40 18
 1620 0008 7B68     		ldr	r3, [r7, #4]
 1621 000a 1846     		mov	r0, r3
 1622 000c 0C37     		adds	r7, r7, #12
 1623              		.cfi_def_cfa_offset 4
 1624 000e BD46     		mov	sp, r7
 1625              		.cfi_def_cfa_register 13
 1626              		@ sp needed
 1627 0010 5DF8047B 		ldr	r7, [sp], #4
 1628              		.cfi_restore 7
 1629              		.cfi_def_cfa_offset 0
 1630 0014 7047     		bx	lr
 1631              		.cfi_endproc
 1632              	.LFE3723:
 1634              		.weak	_ZN5daisy9UsbHandleC1Ev
 1635              		.thumb_set _ZN5daisy9UsbHandleC1Ev,_ZN5daisy9UsbHandleC2Ev
 1636              		.section	.text._ZN5daisy9UsbHandleD2Ev,"axG",%progbits,_ZN5daisy9UsbHandleD5Ev,comdat
 1637              		.align	1
 1638              		.weak	_ZN5daisy9UsbHandleD2Ev
 1639              		.syntax unified
 1640              		.thumb
 1641              		.thumb_func
 1642              		.fpu fpv5-d16
 1644              	_ZN5daisy9UsbHandleD2Ev:
 1645              	.LFB3726:
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
 1646              		.loc 14 42 5
 1647              		.cfi_startproc
 1648              		@ args = 0, pretend = 0, frame = 8
 1649              		@ frame_needed = 1, uses_anonymous_args = 0
 1650              		@ link register save eliminated.
 1651 0000 80B4     		push	{r7}
 1652              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 62


 1653              		.cfi_offset 7, -4
 1654 0002 83B0     		sub	sp, sp, #12
 1655              		.cfi_def_cfa_offset 16
 1656 0004 00AF     		add	r7, sp, #0
 1657              		.cfi_def_cfa_register 7
 1658 0006 7860     		str	r0, [r7, #4]
 1659              		.loc 14 42 19
 1660 0008 7B68     		ldr	r3, [r7, #4]
 1661 000a 1846     		mov	r0, r3
 1662 000c 0C37     		adds	r7, r7, #12
 1663              		.cfi_def_cfa_offset 4
 1664 000e BD46     		mov	sp, r7
 1665              		.cfi_def_cfa_register 13
 1666              		@ sp needed
 1667 0010 5DF8047B 		ldr	r7, [sp], #4
 1668              		.cfi_restore 7
 1669              		.cfi_def_cfa_offset 0
 1670 0014 7047     		bx	lr
 1671              		.cfi_endproc
 1672              	.LFE3726:
 1674              		.weak	_ZN5daisy9UsbHandleD1Ev
 1675              		.thumb_set _ZN5daisy9UsbHandleD1Ev,_ZN5daisy9UsbHandleD2Ev
 1676              		.section	.text._ZN5daisy6SwitchC2Ev,"axG",%progbits,_ZN5daisy6SwitchC5Ev,comdat
 1677              		.align	1
 1678              		.weak	_ZN5daisy6SwitchC2Ev
 1679              		.syntax unified
 1680              		.thumb
 1681              		.thumb_func
 1682              		.fpu fpv5-d16
 1684              	_ZN5daisy6SwitchC2Ev:
 1685              	.LFB3760:
 1686              		.file 15 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 63


  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
 1687              		.loc 15 41 5
 1688              		.cfi_startproc
 1689              		@ args = 0, pretend = 0, frame = 8
 1690              		@ frame_needed = 1, uses_anonymous_args = 0
 1691              		@ link register save eliminated.
 1692 0000 80B4     		push	{r7}
 1693              		.cfi_def_cfa_offset 4
 1694              		.cfi_offset 7, -4
 1695 0002 83B0     		sub	sp, sp, #12
 1696              		.cfi_def_cfa_offset 16
 1697 0004 00AF     		add	r7, sp, #0
 1698              		.cfi_def_cfa_register 7
 1699 0006 7860     		str	r0, [r7, #4]
 1700              		.loc 15 41 15
 1701 0008 7B68     		ldr	r3, [r7, #4]
 1702 000a 1846     		mov	r0, r3
 1703 000c 0C37     		adds	r7, r7, #12
 1704              		.cfi_def_cfa_offset 4
 1705 000e BD46     		mov	sp, r7
 1706              		.cfi_def_cfa_register 13
 1707              		@ sp needed
 1708 0010 5DF8047B 		ldr	r7, [sp], #4
 1709              		.cfi_restore 7
 1710              		.cfi_def_cfa_offset 0
 1711 0014 7047     		bx	lr
 1712              		.cfi_endproc
 1713              	.LFE3760:
 1715              		.weak	_ZN5daisy6SwitchC1Ev
 1716              		.thumb_set _ZN5daisy6SwitchC1Ev,_ZN5daisy6SwitchC2Ev
 1717              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
 1718              		.align	1
 1719              		.weak	_ZN5daisy6SwitchD2Ev
 1720              		.syntax unified
 1721              		.thumb
 1722              		.thumb_func
 1723              		.fpu fpv5-d16
 1725              	_ZN5daisy6SwitchD2Ev:
 1726              	.LFB3763:
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1727              		.loc 15 42 5
 1728              		.cfi_startproc
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 64


 1729              		@ args = 0, pretend = 0, frame = 8
 1730              		@ frame_needed = 1, uses_anonymous_args = 0
 1731              		@ link register save eliminated.
 1732 0000 80B4     		push	{r7}
 1733              		.cfi_def_cfa_offset 4
 1734              		.cfi_offset 7, -4
 1735 0002 83B0     		sub	sp, sp, #12
 1736              		.cfi_def_cfa_offset 16
 1737 0004 00AF     		add	r7, sp, #0
 1738              		.cfi_def_cfa_register 7
 1739 0006 7860     		str	r0, [r7, #4]
 1740              		.loc 15 42 16
 1741 0008 7B68     		ldr	r3, [r7, #4]
 1742 000a 1846     		mov	r0, r3
 1743 000c 0C37     		adds	r7, r7, #12
 1744              		.cfi_def_cfa_offset 4
 1745 000e BD46     		mov	sp, r7
 1746              		.cfi_def_cfa_register 13
 1747              		@ sp needed
 1748 0010 5DF8047B 		ldr	r7, [sp], #4
 1749              		.cfi_restore 7
 1750              		.cfi_def_cfa_offset 0
 1751 0014 7047     		bx	lr
 1752              		.cfi_endproc
 1753              	.LFE3763:
 1755              		.weak	_ZN5daisy6SwitchD1Ev
 1756              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
 1757              		.section	.text._ZNK5daisy6Switch10RisingEdgeEv,"axG",%progbits,_ZNK5daisy6Switch10RisingEdgeEv,com
 1758              		.align	1
 1759              		.weak	_ZNK5daisy6Switch10RisingEdgeEv
 1760              		.syntax unified
 1761              		.thumb
 1762              		.thumb_func
 1763              		.fpu fpv5-d16
 1765              	_ZNK5daisy6Switch10RisingEdgeEv:
 1766              	.LFB3765:
  43:../../libDaisy//src/hid/switch.h **** 
  44:../../libDaisy//src/hid/switch.h ****     /** 
  45:../../libDaisy//src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libDaisy//src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libDaisy//src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libDaisy//src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libDaisy//src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libDaisy//src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libDaisy//src/hid/switch.h ****     */
  52:../../libDaisy//src/hid/switch.h ****     void
  53:../../libDaisy//src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libDaisy//src/hid/switch.h **** 
  55:../../libDaisy//src/hid/switch.h ****     /**
  56:../../libDaisy//src/hid/switch.h ****        Simplified Init.
  57:../../libDaisy//src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libDaisy//src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libDaisy//src/hid/switch.h ****     */
  60:../../libDaisy//src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libDaisy//src/hid/switch.h **** 
  62:../../libDaisy//src/hid/switch.h ****     /** 
  63:../../libDaisy//src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 65


  64:../../libDaisy//src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libDaisy//src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libDaisy//src/hid/switch.h ****     */
  67:../../libDaisy//src/hid/switch.h ****     void Debounce();
  68:../../libDaisy//src/hid/switch.h **** 
  69:../../libDaisy//src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libDaisy//src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
 1767              		.loc 15 70 17
 1768              		.cfi_startproc
 1769              		@ args = 0, pretend = 0, frame = 8
 1770              		@ frame_needed = 1, uses_anonymous_args = 0
 1771              		@ link register save eliminated.
 1772 0000 80B4     		push	{r7}
 1773              		.cfi_def_cfa_offset 4
 1774              		.cfi_offset 7, -4
 1775 0002 83B0     		sub	sp, sp, #12
 1776              		.cfi_def_cfa_offset 16
 1777 0004 00AF     		add	r7, sp, #0
 1778              		.cfi_def_cfa_register 7
 1779 0006 7860     		str	r0, [r7, #4]
 1780              		.loc 15 70 45
 1781 0008 7B68     		ldr	r3, [r7, #4]
 1782 000a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1783              		.loc 15 70 54
 1784 000c 002B     		cmp	r3, #0
 1785 000e 07D0     		beq	.L77
 1786              		.loc 15 70 56 discriminator 1
 1787 0010 7B68     		ldr	r3, [r7, #4]
 1788 0012 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1789              		.loc 15 70 54 discriminator 1
 1790 0014 7F2B     		cmp	r3, #127
 1791 0016 0CBF     		ite	eq
 1792 0018 0123     		moveq	r3, #1
 1793 001a 0023     		movne	r3, #0
 1794 001c DBB2     		uxtb	r3, r3
 1795 001e 00E0     		b	.L78
 1796              	.L77:
 1797              		.loc 15 70 54 is_stmt 0 discriminator 2
 1798 0020 0023     		movs	r3, #0
 1799              	.L78:
 1800              		.loc 15 70 80 is_stmt 1 discriminator 4
 1801 0022 1846     		mov	r0, r3
 1802 0024 0C37     		adds	r7, r7, #12
 1803              		.cfi_def_cfa_offset 4
 1804 0026 BD46     		mov	sp, r7
 1805              		.cfi_def_cfa_register 13
 1806              		@ sp needed
 1807 0028 5DF8047B 		ldr	r7, [sp], #4
 1808              		.cfi_restore 7
 1809              		.cfi_def_cfa_offset 0
 1810 002c 7047     		bx	lr
 1811              		.cfi_endproc
 1812              	.LFE3765:
 1814              		.section	.text._ZNK5daisy6Switch7PressedEv,"axG",%progbits,_ZNK5daisy6Switch7PressedEv,comdat
 1815              		.align	1
 1816              		.weak	_ZNK5daisy6Switch7PressedEv
 1817              		.syntax unified
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 66


 1818              		.thumb
 1819              		.thumb_func
 1820              		.fpu fpv5-d16
 1822              	_ZNK5daisy6Switch7PressedEv:
 1823              	.LFB3767:
  71:../../libDaisy//src/hid/switch.h **** 
  72:../../libDaisy//src/hid/switch.h ****     /** \return true if the button was just released */
  73:../../libDaisy//src/hid/switch.h ****     inline bool FallingEdge() const
  74:../../libDaisy//src/hid/switch.h ****     {
  75:../../libDaisy//src/hid/switch.h ****         return updated_ ? state_ == 0x80 : false;
  76:../../libDaisy//src/hid/switch.h ****     }
  77:../../libDaisy//src/hid/switch.h **** 
  78:../../libDaisy//src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  79:../../libDaisy//src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 1824              		.loc 15 79 17
 1825              		.cfi_startproc
 1826              		@ args = 0, pretend = 0, frame = 8
 1827              		@ frame_needed = 1, uses_anonymous_args = 0
 1828              		@ link register save eliminated.
 1829 0000 80B4     		push	{r7}
 1830              		.cfi_def_cfa_offset 4
 1831              		.cfi_offset 7, -4
 1832 0002 83B0     		sub	sp, sp, #12
 1833              		.cfi_def_cfa_offset 16
 1834 0004 00AF     		add	r7, sp, #0
 1835              		.cfi_def_cfa_register 7
 1836 0006 7860     		str	r0, [r7, #4]
 1837              		.loc 15 79 42
 1838 0008 7B68     		ldr	r3, [r7, #4]
 1839 000a 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1840              		.loc 15 79 52
 1841 000c FF2B     		cmp	r3, #255
 1842 000e 0CBF     		ite	eq
 1843 0010 0123     		moveq	r3, #1
 1844 0012 0023     		movne	r3, #0
 1845 0014 DBB2     		uxtb	r3, r3
 1846              		.loc 15 79 58
 1847 0016 1846     		mov	r0, r3
 1848 0018 0C37     		adds	r7, r7, #12
 1849              		.cfi_def_cfa_offset 4
 1850 001a BD46     		mov	sp, r7
 1851              		.cfi_def_cfa_register 13
 1852              		@ sp needed
 1853 001c 5DF8047B 		ldr	r7, [sp], #4
 1854              		.cfi_restore 7
 1855              		.cfi_def_cfa_offset 0
 1856 0020 7047     		bx	lr
 1857              		.cfi_endproc
 1858              	.LFE3767:
 1860              		.section	.rodata._ZN5daisyL15kWavFileChunkIdE,"a"
 1861              		.align	2
 1864              	_ZN5daisyL15kWavFileChunkIdE:
 1865 0000 52494646 		.word	1179011410
 1866              		.section	.rodata._ZN5daisyL14kWavFileWaveIdE,"a"
 1867              		.align	2
 1870              	_ZN5daisyL14kWavFileWaveIdE:
 1871 0000 57415645 		.word	1163280727
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 67


 1872              		.section	.rodata._ZN5daisyL19kWavFileSubChunk1IdE,"a"
 1873              		.align	2
 1876              	_ZN5daisyL19kWavFileSubChunk1IdE:
 1877 0000 666D7420 		.word	544501094
 1878              		.section	.rodata._ZN5daisyL19kWavFileSubChunk2IdE,"a"
 1879              		.align	2
 1882              	_ZN5daisyL19kWavFileSubChunk2IdE:
 1883 0000 64617461 		.word	1635017060
 1884              		.section	.rodata._ZL19kMaxSr595DaisyChain,"a"
 1885              		.align	2
 1888              	_ZL19kMaxSr595DaisyChain:
 1889 0000 10000000 		.word	16
 1890              		.section	.text._ZN5daisy9DaisySeedC2Ev,"axG",%progbits,_ZN5daisy9DaisySeedC5Ev,comdat
 1891              		.align	1
 1892              		.weak	_ZN5daisy9DaisySeedC2Ev
 1893              		.syntax unified
 1894              		.thumb
 1895              		.thumb_func
 1896              		.fpu fpv5-d16
 1898              	_ZN5daisy9DaisySeedC2Ev:
 1899              	.LFB4670:
 1900              		.file 16 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
 1901              		.loc 16 21 5
 1902              		.cfi_startproc
 1903              		@ args = 0, pretend = 0, frame = 8
 1904              		@ frame_needed = 1, uses_anonymous_args = 0
 1905 0000 80B5     		push	{r7, lr}
 1906              		.cfi_def_cfa_offset 8
 1907              		.cfi_offset 7, -8
 1908              		.cfi_offset 14, -4
 1909 0002 82B0     		sub	sp, sp, #8
 1910              		.cfi_def_cfa_offset 16
 1911 0004 00AF     		add	r7, sp, #0
 1912              		.cfi_def_cfa_register 7
 1913 0006 7860     		str	r0, [r7, #4]
 1914              	.LBB14:
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 68


 1915              		.loc 16 21 17
 1916 0008 7B68     		ldr	r3, [r7, #4]
 1917 000a 1846     		mov	r0, r3
 1918 000c FFF7FEFF 		bl	_ZN5daisy10QSPIHandleC1Ev
 1919 0010 7B68     		ldr	r3, [r7, #4]
 1920 0012 1433     		adds	r3, r3, #20
 1921 0014 1846     		mov	r0, r3
 1922 0016 FFF7FEFF 		bl	_ZN5daisy11AudioHandleC1Ev
 1923 001a 7B68     		ldr	r3, [r7, #4]
 1924 001c 1833     		adds	r3, r3, #24
 1925 001e 1846     		mov	r0, r3
 1926 0020 FFF7FEFF 		bl	_ZN5daisy9AdcHandleC1Ev
 1927 0024 7B68     		ldr	r3, [r7, #4]
 1928 0026 2033     		adds	r3, r3, #32
 1929 0028 1846     		mov	r0, r3
 1930 002a FFF7FEFF 		bl	_ZN5daisy9DacHandleC1Ev
 1931 002e 7B68     		ldr	r3, [r7, #4]
 1932 0030 2433     		adds	r3, r3, #36
 1933 0032 1846     		mov	r0, r3
 1934 0034 FFF7FEFF 		bl	_ZN5daisy9UsbHandleC1Ev
 1935 0038 7B68     		ldr	r3, [r7, #4]
 1936 003a 3033     		adds	r3, r3, #48
 1937 003c 1846     		mov	r0, r3
 1938 003e FFF7FEFF 		bl	_ZN5daisy6SystemC1Ev
 1939 0042 7B68     		ldr	r3, [r7, #4]
 1940 0044 3C33     		adds	r3, r3, #60
 1941 0046 1846     		mov	r0, r3
 1942 0048 FFF7FEFF 		bl	_ZN5daisy9SaiHandleC1Ev
 1943              	.LBE14:
 1944              		.loc 16 21 18
 1945 004c 7B68     		ldr	r3, [r7, #4]
 1946 004e 1846     		mov	r0, r3
 1947 0050 0837     		adds	r7, r7, #8
 1948              		.cfi_def_cfa_offset 8
 1949 0052 BD46     		mov	sp, r7
 1950              		.cfi_def_cfa_register 13
 1951              		@ sp needed
 1952 0054 80BD     		pop	{r7, pc}
 1953              		.cfi_endproc
 1954              	.LFE4670:
 1956              		.weak	_ZN5daisy9DaisySeedC1Ev
 1957              		.thumb_set _ZN5daisy9DaisySeedC1Ev,_ZN5daisy9DaisySeedC2Ev
 1958              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
 1959              		.align	1
 1960              		.weak	_ZN5daisy9DaisySeedD2Ev
 1961              		.syntax unified
 1962              		.thumb
 1963              		.thumb_func
 1964              		.fpu fpv5-d16
 1966              	_ZN5daisy9DaisySeedD2Ev:
 1967              	.LFB4673:
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 1968              		.loc 16 22 5
 1969              		.cfi_startproc
 1970              		@ args = 0, pretend = 0, frame = 8
 1971              		@ frame_needed = 1, uses_anonymous_args = 0
 1972 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 69


 1973              		.cfi_def_cfa_offset 8
 1974              		.cfi_offset 7, -8
 1975              		.cfi_offset 14, -4
 1976 0002 82B0     		sub	sp, sp, #8
 1977              		.cfi_def_cfa_offset 16
 1978 0004 00AF     		add	r7, sp, #0
 1979              		.cfi_def_cfa_register 7
 1980 0006 7860     		str	r0, [r7, #4]
 1981              	.LBB15:
 1982              		.loc 16 22 18
 1983 0008 7B68     		ldr	r3, [r7, #4]
 1984 000a 3033     		adds	r3, r3, #48
 1985 000c 1846     		mov	r0, r3
 1986 000e FFF7FEFF 		bl	_ZN5daisy6SystemD1Ev
 1987 0012 7B68     		ldr	r3, [r7, #4]
 1988 0014 2433     		adds	r3, r3, #36
 1989 0016 1846     		mov	r0, r3
 1990 0018 FFF7FEFF 		bl	_ZN5daisy9UsbHandleD1Ev
 1991 001c 7B68     		ldr	r3, [r7, #4]
 1992 001e 1833     		adds	r3, r3, #24
 1993 0020 1846     		mov	r0, r3
 1994 0022 FFF7FEFF 		bl	_ZN5daisy9AdcHandleD1Ev
 1995 0026 7B68     		ldr	r3, [r7, #4]
 1996 0028 1433     		adds	r3, r3, #20
 1997 002a 1846     		mov	r0, r3
 1998 002c FFF7FEFF 		bl	_ZN5daisy11AudioHandleD1Ev
 1999              	.LBE15:
 2000              		.loc 16 22 19
 2001 0030 7B68     		ldr	r3, [r7, #4]
 2002 0032 1846     		mov	r0, r3
 2003 0034 0837     		adds	r7, r7, #8
 2004              		.cfi_def_cfa_offset 8
 2005 0036 BD46     		mov	sp, r7
 2006              		.cfi_def_cfa_register 13
 2007              		@ sp needed
 2008 0038 80BD     		pop	{r7, pc}
 2009              		.cfi_endproc
 2010              	.LFE4673:
 2012              		.weak	_ZN5daisy9DaisySeedD1Ev
 2013              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
 2014              		.section	.rodata._ZN5daisy4seedL2D0E,"a"
 2015              		.align	2
 2018              	_ZN5daisy4seedL2D0E:
 2019 0000 01       		.byte	1
 2020 0001 0C       		.byte	12
 2021              		.section	.rodata._ZN5daisy4seedL2D1E,"a"
 2022              		.align	2
 2025              	_ZN5daisy4seedL2D1E:
 2026 0000 02       		.byte	2
 2027 0001 0B       		.byte	11
 2028              		.section	.rodata._ZN5daisy4seedL2D2E,"a"
 2029              		.align	2
 2032              	_ZN5daisy4seedL2D2E:
 2033 0000 02       		.byte	2
 2034 0001 0A       		.byte	10
 2035              		.section	.rodata._ZN5daisy4seedL2D3E,"a"
 2036              		.align	2
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 70


 2039              	_ZN5daisy4seedL2D3E:
 2040 0000 02       		.byte	2
 2041 0001 09       		.byte	9
 2042              		.section	.rodata._ZN5daisy4seedL2D4E,"a"
 2043              		.align	2
 2046              	_ZN5daisy4seedL2D4E:
 2047 0000 02       		.byte	2
 2048 0001 08       		.byte	8
 2049              		.section	.rodata._ZN5daisy4seedL2D5E,"a"
 2050              		.align	2
 2053              	_ZN5daisy4seedL2D5E:
 2054 0000 03       		.byte	3
 2055 0001 02       		.byte	2
 2056              		.section	.rodata._ZN5daisy4seedL2D6E,"a"
 2057              		.align	2
 2060              	_ZN5daisy4seedL2D6E:
 2061 0000 02       		.byte	2
 2062 0001 0C       		.byte	12
 2063              		.section	.rodata._ZN5daisy4seedL2D7E,"a"
 2064              		.align	2
 2067              	_ZN5daisy4seedL2D7E:
 2068 0000 06       		.byte	6
 2069 0001 0A       		.byte	10
 2070              		.section	.rodata._ZN5daisy4seedL2D8E,"a"
 2071              		.align	2
 2074              	_ZN5daisy4seedL2D8E:
 2075 0000 06       		.byte	6
 2076 0001 0B       		.byte	11
 2077              		.section	.rodata._ZN5daisy4seedL2D9E,"a"
 2078              		.align	2
 2081              	_ZN5daisy4seedL2D9E:
 2082 0000 01       		.byte	1
 2083 0001 04       		.byte	4
 2084              		.section	.rodata._ZN5daisy4seedL3D10E,"a"
 2085              		.align	2
 2088              	_ZN5daisy4seedL3D10E:
 2089 0000 01       		.byte	1
 2090 0001 05       		.byte	5
 2091              		.section	.rodata._ZN5daisy4seedL3D11E,"a"
 2092              		.align	2
 2095              	_ZN5daisy4seedL3D11E:
 2096 0000 01       		.byte	1
 2097 0001 08       		.byte	8
 2098              		.section	.rodata._ZN5daisy4seedL3D12E,"a"
 2099              		.align	2
 2102              	_ZN5daisy4seedL3D12E:
 2103 0000 01       		.byte	1
 2104 0001 09       		.byte	9
 2105              		.section	.rodata._ZN5daisy4seedL3D13E,"a"
 2106              		.align	2
 2109              	_ZN5daisy4seedL3D13E:
 2110 0000 01       		.byte	1
 2111 0001 06       		.byte	6
 2112              		.section	.rodata._ZN5daisy4seedL3D14E,"a"
 2113              		.align	2
 2116              	_ZN5daisy4seedL3D14E:
 2117 0000 01       		.byte	1
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 71


 2118 0001 07       		.byte	7
 2119              		.section	.rodata._ZN5daisy4seedL3D15E,"a"
 2120              		.align	2
 2123              	_ZN5daisy4seedL3D15E:
 2124 0000 02       		.byte	2
 2125 0001 00       		.byte	0
 2126              		.section	.rodata._ZN5daisy4seedL3D16E,"a"
 2127              		.align	2
 2130              	_ZN5daisy4seedL3D16E:
 2131 0000 00       		.byte	0
 2132 0001 03       		.byte	3
 2133              		.section	.rodata._ZN5daisy4seedL3D17E,"a"
 2134              		.align	2
 2137              	_ZN5daisy4seedL3D17E:
 2138 0000 01       		.byte	1
 2139 0001 01       		.byte	1
 2140              		.section	.rodata._ZN5daisy4seedL3D18E,"a"
 2141              		.align	2
 2144              	_ZN5daisy4seedL3D18E:
 2145 0000 00       		.byte	0
 2146 0001 07       		.byte	7
 2147              		.section	.rodata._ZN5daisy4seedL3D19E,"a"
 2148              		.align	2
 2151              	_ZN5daisy4seedL3D19E:
 2152 0000 00       		.byte	0
 2153 0001 06       		.byte	6
 2154              		.section	.rodata._ZN5daisy4seedL3D20E,"a"
 2155              		.align	2
 2158              	_ZN5daisy4seedL3D20E:
 2159 0000 02       		.byte	2
 2160 0001 01       		.byte	1
 2161              		.section	.rodata._ZN5daisy4seedL3D21E,"a"
 2162              		.align	2
 2165              	_ZN5daisy4seedL3D21E:
 2166 0000 02       		.byte	2
 2167 0001 04       		.byte	4
 2168              		.section	.rodata._ZN5daisy4seedL3D22E,"a"
 2169              		.align	2
 2172              	_ZN5daisy4seedL3D22E:
 2173 0000 00       		.byte	0
 2174 0001 05       		.byte	5
 2175              		.section	.rodata._ZN5daisy4seedL3D23E,"a"
 2176              		.align	2
 2179              	_ZN5daisy4seedL3D23E:
 2180 0000 00       		.byte	0
 2181 0001 04       		.byte	4
 2182              		.section	.rodata._ZN5daisy4seedL3D24E,"a"
 2183              		.align	2
 2186              	_ZN5daisy4seedL3D24E:
 2187 0000 00       		.byte	0
 2188 0001 01       		.byte	1
 2189              		.section	.rodata._ZN5daisy4seedL3D25E,"a"
 2190              		.align	2
 2193              	_ZN5daisy4seedL3D25E:
 2194 0000 0000     		.space	2
 2195              		.section	.rodata._ZN5daisy4seedL3D26E,"a"
 2196              		.align	2
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 72


 2199              	_ZN5daisy4seedL3D26E:
 2200 0000 03       		.byte	3
 2201 0001 0B       		.byte	11
 2202              		.section	.rodata._ZN5daisy4seedL3D27E,"a"
 2203              		.align	2
 2206              	_ZN5daisy4seedL3D27E:
 2207 0000 06       		.byte	6
 2208 0001 09       		.byte	9
 2209              		.section	.rodata._ZN5daisy4seedL3D28E,"a"
 2210              		.align	2
 2213              	_ZN5daisy4seedL3D28E:
 2214 0000 00       		.byte	0
 2215 0001 02       		.byte	2
 2216              		.section	.rodata._ZN5daisy4seedL3D29E,"a"
 2217              		.align	2
 2220              	_ZN5daisy4seedL3D29E:
 2221 0000 01       		.byte	1
 2222 0001 0E       		.byte	14
 2223              		.section	.rodata._ZN5daisy4seedL3D30E,"a"
 2224              		.align	2
 2227              	_ZN5daisy4seedL3D30E:
 2228 0000 01       		.byte	1
 2229 0001 0F       		.byte	15
 2230              		.section	.rodata._ZN5daisy4seedL2A0E,"a"
 2231              		.align	2
 2234              	_ZN5daisy4seedL2A0E:
 2235 0000 02       		.byte	2
 2236 0001 00       		.byte	0
 2237              		.section	.rodata._ZN5daisy4seedL2A1E,"a"
 2238              		.align	2
 2241              	_ZN5daisy4seedL2A1E:
 2242 0000 00       		.byte	0
 2243 0001 03       		.byte	3
 2244              		.section	.rodata._ZN5daisy4seedL2A2E,"a"
 2245              		.align	2
 2248              	_ZN5daisy4seedL2A2E:
 2249 0000 01       		.byte	1
 2250 0001 01       		.byte	1
 2251              		.section	.rodata._ZN5daisy4seedL2A3E,"a"
 2252              		.align	2
 2255              	_ZN5daisy4seedL2A3E:
 2256 0000 00       		.byte	0
 2257 0001 07       		.byte	7
 2258              		.section	.rodata._ZN5daisy4seedL2A4E,"a"
 2259              		.align	2
 2262              	_ZN5daisy4seedL2A4E:
 2263 0000 00       		.byte	0
 2264 0001 06       		.byte	6
 2265              		.section	.rodata._ZN5daisy4seedL2A5E,"a"
 2266              		.align	2
 2269              	_ZN5daisy4seedL2A5E:
 2270 0000 02       		.byte	2
 2271 0001 01       		.byte	1
 2272              		.section	.rodata._ZN5daisy4seedL2A6E,"a"
 2273              		.align	2
 2276              	_ZN5daisy4seedL2A6E:
 2277 0000 02       		.byte	2
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 73


 2278 0001 04       		.byte	4
 2279              		.section	.rodata._ZN5daisy4seedL2A7E,"a"
 2280              		.align	2
 2283              	_ZN5daisy4seedL2A7E:
 2284 0000 00       		.byte	0
 2285 0001 05       		.byte	5
 2286              		.section	.rodata._ZN5daisy4seedL2A8E,"a"
 2287              		.align	2
 2290              	_ZN5daisy4seedL2A8E:
 2291 0000 00       		.byte	0
 2292 0001 04       		.byte	4
 2293              		.section	.rodata._ZN5daisy4seedL2A9E,"a"
 2294              		.align	2
 2297              	_ZN5daisy4seedL2A9E:
 2298 0000 00       		.byte	0
 2299 0001 01       		.byte	1
 2300              		.section	.rodata._ZN5daisy4seedL3A10E,"a"
 2301              		.align	2
 2304              	_ZN5daisy4seedL3A10E:
 2305 0000 0000     		.space	2
 2306              		.section	.rodata._ZN5daisy4seedL3A11E,"a"
 2307              		.align	2
 2310              	_ZN5daisy4seedL3A11E:
 2311 0000 00       		.byte	0
 2312 0001 02       		.byte	2
 2313              		.section	.rodata._ZN5daisy4seedL3D31E,"a"
 2314              		.align	2
 2317              	_ZN5daisy4seedL3D31E:
 2318 0000 02       		.byte	2
 2319 0001 02       		.byte	2
 2320              		.section	.rodata._ZN5daisy4seedL3D32E,"a"
 2321              		.align	2
 2324              	_ZN5daisy4seedL3D32E:
 2325 0000 02       		.byte	2
 2326 0001 03       		.byte	3
 2327              		.section	.rodata._ZN5daisy4seedL3A12E,"a"
 2328              		.align	2
 2331              	_ZN5daisy4seedL3A12E:
 2332 0000 02       		.byte	2
 2333 0001 02       		.byte	2
 2334              		.section	.rodata._ZN5daisy4seedL3A13E,"a"
 2335              		.align	2
 2338              	_ZN5daisy4seedL3A13E:
 2339 0000 02       		.byte	2
 2340 0001 03       		.byte	3
 2341              		.section	.text._ZN8clasADSR18mRecursiveEquationEfff,"axG",%progbits,_ZN8clasADSR18mRecursiveEquati
 2342              		.align	1
 2343              		.weak	_ZN8clasADSR18mRecursiveEquationEfff
 2344              		.syntax unified
 2345              		.thumb
 2346              		.thumb_func
 2347              		.fpu fpv5-d16
 2349              	_ZN8clasADSR18mRecursiveEquationEfff:
 2350              	.LFB4678:
 2351              		.file 17 "adsr.h"
   1:adsr.h        **** #pragma once
   2:adsr.h        **** #ifndef ADSR_H
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 74


   3:adsr.h        **** #define ADSR_H
   4:adsr.h        **** 
   5:adsr.h        **** #include <stdint.h>
   6:adsr.h        **** #ifdef __cplusplus
   7:adsr.h        **** 
   8:adsr.h        **** enum eMode
   9:adsr.h        **** {
  10:adsr.h        ****     ADSR_IDLE    = 0,
  11:adsr.h        ****     ADSR_ATTACK  = 1,
  12:adsr.h        ****     ADSR_DECAY   = 2,
  13:adsr.h        ****     ADSR_SUSTAIN = 3,
  14:adsr.h        ****     ADSR_RELEASE = 4
  15:adsr.h        **** };
  16:adsr.h        **** 
  17:adsr.h        **** 
  18:adsr.h        **** class clasADSR
  19:adsr.h        **** {
  20:adsr.h        ****     private:
  21:adsr.h        ****     //Attributes///////////////////////////////////////////////////////////////////////////////////
  22:adsr.h        ****     ///////////////////////////////////////////////////////////////////////////////////////////////
  23:adsr.h        **** 
  24:adsr.h        ****     float flSampleRate_;
  25:adsr.h        ****     float flDt_;
  26:adsr.h        **** 
  27:adsr.h        ****     float flAttackTime_;
  28:adsr.h        ****     float flDecayTime_;
  29:adsr.h        ****     float flReleaseTime_;
  30:adsr.h        ****     float flSustainLevel_;
  31:adsr.h        ****     
  32:adsr.h        ****     float flX0Attack_;
  33:adsr.h        ****     float flX0Decay_;
  34:adsr.h        ****     float flX0Release_;
  35:adsr.h        **** 
  36:adsr.h        ****     float flBAttack_;
  37:adsr.h        ****     float flBDecay_;
  38:adsr.h        ****     float flBRelease_;
  39:adsr.h        **** 
  40:adsr.h        ****     eMode uiMode_;
  41:adsr.h        ****     bool xNoteOn_;
  42:adsr.h        ****     float flY_;
  43:adsr.h        ****     float flYPrev_;
  44:adsr.h        **** 
  45:adsr.h        ****     //Methods/////////////////////////////////////////////////////////////////////////////////////
  46:adsr.h        ****     ///////////////////////////////////////////////////////////////////////////////////////////////
  47:adsr.h        **** 
  48:adsr.h        ****     //Recursive Output Equation
  49:adsr.h        ****     float mRecursiveEquation(float X0, float b, float YPrev){
 2352              		.loc 17 49 11
 2353              		.cfi_startproc
 2354              		@ args = 0, pretend = 0, frame = 24
 2355              		@ frame_needed = 1, uses_anonymous_args = 0
 2356              		@ link register save eliminated.
 2357 0000 80B4     		push	{r7}
 2358              		.cfi_def_cfa_offset 4
 2359              		.cfi_offset 7, -4
 2360 0002 87B0     		sub	sp, sp, #28
 2361              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 75


 2362 0004 00AF     		add	r7, sp, #0
 2363              		.cfi_def_cfa_register 7
 2364 0006 F860     		str	r0, [r7, #12]
 2365 0008 87ED020A 		vstr.32	s0, [r7, #8]
 2366 000c C7ED010A 		vstr.32	s1, [r7, #4]
 2367 0010 87ED001A 		vstr.32	s2, [r7]
  50:adsr.h        ****         float Y = X0 + b * YPrev;
 2368              		.loc 17 50 26
 2369 0014 97ED017A 		vldr.32	s14, [r7, #4]
 2370 0018 D7ED007A 		vldr.32	s15, [r7]
 2371 001c 67EE277A 		vmul.f32	s15, s14, s15
 2372              		.loc 17 50 15
 2373 0020 97ED027A 		vldr.32	s14, [r7, #8]
 2374 0024 77EE277A 		vadd.f32	s15, s14, s15
 2375 0028 C7ED057A 		vstr.32	s15, [r7, #20]
  51:adsr.h        ****         flYPrev_ = Y;
 2376              		.loc 17 51 18
 2377 002c FB68     		ldr	r3, [r7, #12]
 2378 002e 7A69     		ldr	r2, [r7, #20]	@ float
 2379 0030 9A63     		str	r2, [r3, #56]	@ float
  52:adsr.h        ****         return Y;
 2380              		.loc 17 52 16
 2381 0032 7B69     		ldr	r3, [r7, #20]	@ float
 2382 0034 07EE903A 		vmov	s15, r3
  53:adsr.h        ****     }
 2383              		.loc 17 53 5
 2384 0038 B0EE670A 		vmov.f32	s0, s15
 2385 003c 1C37     		adds	r7, r7, #28
 2386              		.cfi_def_cfa_offset 4
 2387 003e BD46     		mov	sp, r7
 2388              		.cfi_def_cfa_register 13
 2389              		@ sp needed
 2390 0040 5DF8047B 		ldr	r7, [sp], #4
 2391              		.cfi_restore 7
 2392              		.cfi_def_cfa_offset 0
 2393 0044 7047     		bx	lr
 2394              		.cfi_endproc
 2395              	.LFE4678:
 2397              		.section	.text._ZN8clasADSR4InitEf,"axG",%progbits,_ZN8clasADSR4InitEf,comdat
 2398              		.align	1
 2399              		.weak	_ZN8clasADSR4InitEf
 2400              		.syntax unified
 2401              		.thumb
 2402              		.thumb_func
 2403              		.fpu fpv5-d16
 2405              	_ZN8clasADSR4InitEf:
 2406              	.LFB4679:
  54:adsr.h        ****     public:
  55:adsr.h        **** 
  56:adsr.h        ****     //Methods/////////////////////////////////////////////////////////////////////////////////////
  57:adsr.h        ****     ///////////////////////////////////////////////////////////////////////////////////////////////
  58:adsr.h        **** 
  59:adsr.h        ****     //Initalise the object and setup the rates. 
  60:adsr.h        ****     void Init(float flSampleRate){
 2407              		.loc 17 60 10
 2408              		.cfi_startproc
 2409              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 76


 2410              		@ frame_needed = 1, uses_anonymous_args = 0
 2411 0000 80B5     		push	{r7, lr}
 2412              		.cfi_def_cfa_offset 8
 2413              		.cfi_offset 7, -8
 2414              		.cfi_offset 14, -4
 2415 0002 82B0     		sub	sp, sp, #8
 2416              		.cfi_def_cfa_offset 16
 2417 0004 00AF     		add	r7, sp, #0
 2418              		.cfi_def_cfa_register 7
 2419 0006 7860     		str	r0, [r7, #4]
 2420 0008 87ED000A 		vstr.32	s0, [r7]
  61:adsr.h        ****         flSampleRate_ = flSampleRate;
 2421              		.loc 17 61 23
 2422 000c 7B68     		ldr	r3, [r7, #4]
 2423 000e 3A68     		ldr	r2, [r7]	@ float
 2424 0010 1A60     		str	r2, [r3]	@ float
  62:adsr.h        ****         flDt_ = 1.0f / flSampleRate;
 2425              		.loc 17 62 22
 2426 0012 F7EE006A 		vmov.f32	s13, #1.0e+0
 2427 0016 97ED007A 		vldr.32	s14, [r7]
 2428 001a C6EE877A 		vdiv.f32	s15, s13, s14
 2429              		.loc 17 62 15
 2430 001e 7B68     		ldr	r3, [r7, #4]
 2431 0020 C3ED017A 		vstr.32	s15, [r3, #4]
  63:adsr.h        ****         flAttackTime_ = 1.0f;
 2432              		.loc 17 63 23
 2433 0024 7B68     		ldr	r3, [r7, #4]
 2434 0026 4FF07E52 		mov	r2, #1065353216
 2435 002a 9A60     		str	r2, [r3, #8]	@ float
  64:adsr.h        ****         flDecayTime_ = 1.0f;
 2436              		.loc 17 64 22
 2437 002c 7B68     		ldr	r3, [r7, #4]
 2438 002e 4FF07E52 		mov	r2, #1065353216
 2439 0032 DA60     		str	r2, [r3, #12]	@ float
  65:adsr.h        ****         flReleaseTime_ = 1.0f;
 2440              		.loc 17 65 24
 2441 0034 7B68     		ldr	r3, [r7, #4]
 2442 0036 4FF07E52 		mov	r2, #1065353216
 2443 003a 1A61     		str	r2, [r3, #16]	@ float
  66:adsr.h        ****         flSustainLevel_ = 0.05f;
 2444              		.loc 17 66 25
 2445 003c 7B68     		ldr	r3, [r7, #4]
 2446 003e 0F4A     		ldr	r2, .L89
 2447 0040 5A61     		str	r2, [r3, #20]	@ float
  67:adsr.h        ****         
  68:adsr.h        ****         SetAttackRate(flAttackTime_);
 2448              		.loc 17 68 22
 2449 0042 7B68     		ldr	r3, [r7, #4]
 2450 0044 D3ED027A 		vldr.32	s15, [r3, #8]
 2451 0048 B0EE670A 		vmov.f32	s0, s15
 2452 004c 7868     		ldr	r0, [r7, #4]
 2453 004e FFF7FEFF 		bl	_ZN8clasADSR13SetAttackRateEf
  69:adsr.h        ****         SetDecayRate(flDecayTime_);
 2454              		.loc 17 69 21
 2455 0052 7B68     		ldr	r3, [r7, #4]
 2456 0054 D3ED037A 		vldr.32	s15, [r3, #12]
 2457 0058 B0EE670A 		vmov.f32	s0, s15
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 77


 2458 005c 7868     		ldr	r0, [r7, #4]
 2459 005e FFF7FEFF 		bl	_ZN8clasADSR12SetDecayRateEf
  70:adsr.h        ****         SetReleaseRate(flReleaseTime_);
 2460              		.loc 17 70 23
 2461 0062 7B68     		ldr	r3, [r7, #4]
 2462 0064 D3ED047A 		vldr.32	s15, [r3, #16]
 2463 0068 B0EE670A 		vmov.f32	s0, s15
 2464 006c 7868     		ldr	r0, [r7, #4]
 2465 006e FFF7FEFF 		bl	_ZN8clasADSR14SetReleaseRateEf
  71:adsr.h        ****     };   
 2466              		.loc 17 71 5
 2467 0072 00BF     		nop
 2468 0074 0837     		adds	r7, r7, #8
 2469              		.cfi_def_cfa_offset 8
 2470 0076 BD46     		mov	sp, r7
 2471              		.cfi_def_cfa_register 13
 2472              		@ sp needed
 2473 0078 80BD     		pop	{r7, pc}
 2474              	.L90:
 2475 007a 00BF     		.align	2
 2476              	.L89:
 2477 007c CDCC4C3D 		.word	1028443341
 2478              		.cfi_endproc
 2479              	.LFE4679:
 2481              		.section	.text._ZN8clasADSR7ProcessEb,"axG",%progbits,_ZN8clasADSR7ProcessEb,comdat
 2482              		.align	1
 2483              		.weak	_ZN8clasADSR7ProcessEb
 2484              		.syntax unified
 2485              		.thumb
 2486              		.thumb_func
 2487              		.fpu fpv5-d16
 2489              	_ZN8clasADSR7ProcessEb:
 2490              	.LFB4680:
  72:adsr.h        **** 
  73:adsr.h        **** 
  74:adsr.h        ****     float Process(bool xSignalOn){
 2491              		.loc 17 74 11
 2492              		.cfi_startproc
 2493              		@ args = 0, pretend = 0, frame = 8
 2494              		@ frame_needed = 1, uses_anonymous_args = 0
 2495 0000 80B5     		push	{r7, lr}
 2496              		.cfi_def_cfa_offset 8
 2497              		.cfi_offset 7, -8
 2498              		.cfi_offset 14, -4
 2499 0002 82B0     		sub	sp, sp, #8
 2500              		.cfi_def_cfa_offset 16
 2501 0004 00AF     		add	r7, sp, #0
 2502              		.cfi_def_cfa_register 7
 2503 0006 7860     		str	r0, [r7, #4]
 2504 0008 0B46     		mov	r3, r1
 2505 000a FB70     		strb	r3, [r7, #3]
  75:adsr.h        **** 
  76:adsr.h        ****         //Signal ON / OFF
  77:adsr.h        ****         if (xSignalOn && !xNoteOn_){
 2506              		.loc 17 77 9
 2507 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2508 000e 002B     		cmp	r3, #0
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 78


 2509 0010 0CD0     		beq	.L92
 2510              		.loc 17 77 27 discriminator 1
 2511 0012 7B68     		ldr	r3, [r7, #4]
 2512 0014 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 2513              		.loc 17 77 26 discriminator 1
 2514 0018 83F00103 		eor	r3, r3, #1
 2515 001c DBB2     		uxtb	r3, r3
 2516              		.loc 17 77 23 discriminator 1
 2517 001e 002B     		cmp	r3, #0
 2518 0020 04D0     		beq	.L92
  78:adsr.h        ****             uiMode_ = ADSR_ATTACK;
 2519              		.loc 17 78 21
 2520 0022 7B68     		ldr	r3, [r7, #4]
 2521 0024 0122     		movs	r2, #1
 2522 0026 83F83020 		strb	r2, [r3, #48]
 2523 002a 0EE0     		b	.L93
 2524              	.L92:
  79:adsr.h        ****         } else if (!xSignalOn && xNoteOn_) {
 2525              		.loc 17 79 20
 2526 002c FB78     		ldrb	r3, [r7, #3]
 2527 002e 83F00103 		eor	r3, r3, #1
 2528 0032 DBB2     		uxtb	r3, r3
 2529              		.loc 17 79 16
 2530 0034 002B     		cmp	r3, #0
 2531 0036 08D0     		beq	.L93
 2532              		.loc 17 79 34 discriminator 1
 2533 0038 7B68     		ldr	r3, [r7, #4]
 2534 003a 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 2535              		.loc 17 79 31 discriminator 1
 2536 003e 002B     		cmp	r3, #0
 2537 0040 03D0     		beq	.L93
  80:adsr.h        ****             uiMode_ = ADSR_RELEASE;
 2538              		.loc 17 80 21
 2539 0042 7B68     		ldr	r3, [r7, #4]
 2540 0044 0422     		movs	r2, #4
 2541 0046 83F83020 		strb	r2, [r3, #48]
 2542              	.L93:
  81:adsr.h        ****         }
  82:adsr.h        ****         xNoteOn_ = xSignalOn;
 2543              		.loc 17 82 18
 2544 004a 7B68     		ldr	r3, [r7, #4]
 2545 004c FA78     		ldrb	r2, [r7, #3]
 2546 004e 83F83120 		strb	r2, [r3, #49]
  83:adsr.h        **** 
  84:adsr.h        ****         //Switch case for ADSR sections. 
  85:adsr.h        ****         switch(uiMode_)
 2547              		.loc 17 85 16
 2548 0052 7B68     		ldr	r3, [r7, #4]
 2549 0054 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 2550 0058 042B     		cmp	r3, #4
 2551 005a 00F29780 		bhi	.L94
 2552 005e 01A2     		adr	r2, .L96
 2553 0060 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2554              		.p2align 2
 2555              	.L96:
 2556 0064 79000000 		.word	.L100+1
 2557 0068 83000000 		.word	.L99+1
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 79


 2558 006c D9000000 		.word	.L98+1
 2559 0070 31010000 		.word	.L97+1
 2560 0074 3B010000 		.word	.L95+1
 2561              		.p2align 1
 2562              	.L100:
  86:adsr.h        ****         {
  87:adsr.h        ****             case ADSR_IDLE:
  88:adsr.h        ****                 flY_ = 0.0f;
 2563              		.loc 17 88 22
 2564 0078 7B68     		ldr	r3, [r7, #4]
 2565 007a 4FF00002 		mov	r2, #0
 2566 007e 5A63     		str	r2, [r3, #52]	@ float
  89:adsr.h        ****                 break;
 2567              		.loc 17 89 17
 2568 0080 89E0     		b	.L101
 2569              	.L99:
  90:adsr.h        **** 
  91:adsr.h        ****             case ADSR_ATTACK:
  92:adsr.h        ****                 flY_ = mRecursiveEquation(flX0Attack_, flBAttack_, flYPrev_);
 2570              		.loc 17 92 42
 2571 0082 7B68     		ldr	r3, [r7, #4]
 2572 0084 D3ED067A 		vldr.32	s15, [r3, #24]
 2573 0088 7B68     		ldr	r3, [r7, #4]
 2574 008a 93ED097A 		vldr.32	s14, [r3, #36]
 2575 008e 7B68     		ldr	r3, [r7, #4]
 2576 0090 D3ED0E6A 		vldr.32	s13, [r3, #56]
 2577 0094 B0EE661A 		vmov.f32	s2, s13
 2578 0098 F0EE470A 		vmov.f32	s1, s14
 2579 009c B0EE670A 		vmov.f32	s0, s15
 2580 00a0 7868     		ldr	r0, [r7, #4]
 2581 00a2 FFF7FEFF 		bl	_ZN8clasADSR18mRecursiveEquationEfff
 2582 00a6 F0EE407A 		vmov.f32	s15, s0
 2583              		.loc 17 92 22
 2584 00aa 7B68     		ldr	r3, [r7, #4]
 2585 00ac C3ED0D7A 		vstr.32	s15, [r3, #52]
  93:adsr.h        ****                 
  94:adsr.h        ****                 if (flY_ >= 1.0f) { //Change condition
 2586              		.loc 17 94 21
 2587 00b0 7B68     		ldr	r3, [r7, #4]
 2588 00b2 D3ED0D7A 		vldr.32	s15, [r3, #52]
 2589              		.loc 17 94 17
 2590 00b6 B7EE007A 		vmov.f32	s14, #1.0e+0
 2591 00ba F4EEC77A 		vcmpe.f32	s15, s14
 2592 00be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2593 00c2 00DA     		bge	.L109
  95:adsr.h        ****                     flY_ = 1.0f;
  96:adsr.h        ****                     uiMode_ = ADSR_DECAY; 
  97:adsr.h        ****                 }
  98:adsr.h        ****                 break;
 2594              		.loc 17 98 17
 2595 00c4 67E0     		b	.L101
 2596              	.L109:
  95:adsr.h        ****                     flY_ = 1.0f;
 2597              		.loc 17 95 26
 2598 00c6 7B68     		ldr	r3, [r7, #4]
 2599 00c8 4FF07E52 		mov	r2, #1065353216
 2600 00cc 5A63     		str	r2, [r3, #52]	@ float
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 80


  96:adsr.h        ****                 }
 2601              		.loc 17 96 29
 2602 00ce 7B68     		ldr	r3, [r7, #4]
 2603 00d0 0222     		movs	r2, #2
 2604 00d2 83F83020 		strb	r2, [r3, #48]
 2605              		.loc 17 98 17
 2606 00d6 5EE0     		b	.L101
 2607              	.L98:
  99:adsr.h        **** 
 100:adsr.h        ****             case ADSR_DECAY:
 101:adsr.h        ****                 flY_ = mRecursiveEquation(flX0Decay_, flBDecay_, flYPrev_);
 2608              		.loc 17 101 42
 2609 00d8 7B68     		ldr	r3, [r7, #4]
 2610 00da D3ED077A 		vldr.32	s15, [r3, #28]
 2611 00de 7B68     		ldr	r3, [r7, #4]
 2612 00e0 93ED0A7A 		vldr.32	s14, [r3, #40]
 2613 00e4 7B68     		ldr	r3, [r7, #4]
 2614 00e6 D3ED0E6A 		vldr.32	s13, [r3, #56]
 2615 00ea B0EE661A 		vmov.f32	s2, s13
 2616 00ee F0EE470A 		vmov.f32	s1, s14
 2617 00f2 B0EE670A 		vmov.f32	s0, s15
 2618 00f6 7868     		ldr	r0, [r7, #4]
 2619 00f8 FFF7FEFF 		bl	_ZN8clasADSR18mRecursiveEquationEfff
 2620 00fc F0EE407A 		vmov.f32	s15, s0
 2621              		.loc 17 101 22
 2622 0100 7B68     		ldr	r3, [r7, #4]
 2623 0102 C3ED0D7A 		vstr.32	s15, [r3, #52]
 102:adsr.h        **** 
 103:adsr.h        ****                 if (flY_ <= flSustainLevel_) { //Change condition
 2624              		.loc 17 103 21
 2625 0106 7B68     		ldr	r3, [r7, #4]
 2626 0108 93ED0D7A 		vldr.32	s14, [r3, #52]
 2627              		.loc 17 103 29
 2628 010c 7B68     		ldr	r3, [r7, #4]
 2629 010e D3ED057A 		vldr.32	s15, [r3, #20]
 2630              		.loc 17 103 17
 2631 0112 B4EEE77A 		vcmpe.f32	s14, s15
 2632 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2633 011a 00D9     		bls	.L110
 104:adsr.h        ****                     flY_ = flSustainLevel_;
 105:adsr.h        ****                     uiMode_ = ADSR_SUSTAIN;
 106:adsr.h        ****                 }
 107:adsr.h        ****                 break;
 2634              		.loc 17 107 17
 2635 011c 3BE0     		b	.L101
 2636              	.L110:
 104:adsr.h        ****                     flY_ = flSustainLevel_;
 2637              		.loc 17 104 28
 2638 011e 7B68     		ldr	r3, [r7, #4]
 2639 0120 5A69     		ldr	r2, [r3, #20]	@ float
 104:adsr.h        ****                     flY_ = flSustainLevel_;
 2640              		.loc 17 104 26
 2641 0122 7B68     		ldr	r3, [r7, #4]
 2642 0124 5A63     		str	r2, [r3, #52]	@ float
 105:adsr.h        ****                 }
 2643              		.loc 17 105 29
 2644 0126 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 81


 2645 0128 0322     		movs	r2, #3
 2646 012a 83F83020 		strb	r2, [r3, #48]
 2647              		.loc 17 107 17
 2648 012e 32E0     		b	.L101
 2649              	.L97:
 108:adsr.h        **** 
 109:adsr.h        ****             case ADSR_SUSTAIN:
 110:adsr.h        ****                 flY_ = flSustainLevel_;
 2650              		.loc 17 110 24
 2651 0130 7B68     		ldr	r3, [r7, #4]
 2652 0132 5A69     		ldr	r2, [r3, #20]	@ float
 2653              		.loc 17 110 22
 2654 0134 7B68     		ldr	r3, [r7, #4]
 2655 0136 5A63     		str	r2, [r3, #52]	@ float
 111:adsr.h        ****                 break;
 2656              		.loc 17 111 17
 2657 0138 2DE0     		b	.L101
 2658              	.L95:
 112:adsr.h        **** 
 113:adsr.h        ****             case ADSR_RELEASE:
 114:adsr.h        ****                 flY_ = mRecursiveEquation(flX0Release_, flBRelease_, flYPrev_);
 2659              		.loc 17 114 42
 2660 013a 7B68     		ldr	r3, [r7, #4]
 2661 013c D3ED087A 		vldr.32	s15, [r3, #32]
 2662 0140 7B68     		ldr	r3, [r7, #4]
 2663 0142 93ED0B7A 		vldr.32	s14, [r3, #44]
 2664 0146 7B68     		ldr	r3, [r7, #4]
 2665 0148 D3ED0E6A 		vldr.32	s13, [r3, #56]
 2666 014c B0EE661A 		vmov.f32	s2, s13
 2667 0150 F0EE470A 		vmov.f32	s1, s14
 2668 0154 B0EE670A 		vmov.f32	s0, s15
 2669 0158 7868     		ldr	r0, [r7, #4]
 2670 015a FFF7FEFF 		bl	_ZN8clasADSR18mRecursiveEquationEfff
 2671 015e F0EE407A 		vmov.f32	s15, s0
 2672              		.loc 17 114 22
 2673 0162 7B68     		ldr	r3, [r7, #4]
 2674 0164 C3ED0D7A 		vstr.32	s15, [r3, #52]
 115:adsr.h        **** 
 116:adsr.h        ****                 if (flY_ <= 0.0f){ //Change condition
 2675              		.loc 17 116 21
 2676 0168 7B68     		ldr	r3, [r7, #4]
 2677 016a D3ED0D7A 		vldr.32	s15, [r3, #52]
 2678              		.loc 17 116 17
 2679 016e F5EEC07A 		vcmpe.f32	s15, #0
 2680 0172 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2681 0176 00D9     		bls	.L111
 117:adsr.h        ****                     flY_ = 0.0f;
 118:adsr.h        ****                     uiMode_ = ADSR_IDLE;
 119:adsr.h        ****                 }
 120:adsr.h        ****                 break;
 2682              		.loc 17 120 17
 2683 0178 0DE0     		b	.L101
 2684              	.L111:
 117:adsr.h        ****                     flY_ = 0.0f;
 2685              		.loc 17 117 26
 2686 017a 7B68     		ldr	r3, [r7, #4]
 2687 017c 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 82


 2688 0180 5A63     		str	r2, [r3, #52]	@ float
 118:adsr.h        ****                 }
 2689              		.loc 17 118 29
 2690 0182 7B68     		ldr	r3, [r7, #4]
 2691 0184 0022     		movs	r2, #0
 2692 0186 83F83020 		strb	r2, [r3, #48]
 2693              		.loc 17 120 17
 2694 018a 04E0     		b	.L101
 2695              	.L94:
 121:adsr.h        **** 
 122:adsr.h        ****             default:
 123:adsr.h        ****                 uiMode_ = ADSR_IDLE;
 2696              		.loc 17 123 25
 2697 018c 7B68     		ldr	r3, [r7, #4]
 2698 018e 0022     		movs	r2, #0
 2699 0190 83F83020 		strb	r2, [r3, #48]
 124:adsr.h        ****                 break;
 2700              		.loc 17 124 17
 2701 0194 00BF     		nop
 2702              	.L101:
 125:adsr.h        ****         }
 126:adsr.h        ****         return flY_;
 2703              		.loc 17 126 16
 2704 0196 7B68     		ldr	r3, [r7, #4]
 2705 0198 5B6B     		ldr	r3, [r3, #52]	@ float
 2706 019a 07EE903A 		vmov	s15, r3
 127:adsr.h        ****     };
 2707              		.loc 17 127 5
 2708 019e B0EE670A 		vmov.f32	s0, s15
 2709 01a2 0837     		adds	r7, r7, #8
 2710              		.cfi_def_cfa_offset 8
 2711 01a4 BD46     		mov	sp, r7
 2712              		.cfi_def_cfa_register 13
 2713              		@ sp needed
 2714 01a6 80BD     		pop	{r7, pc}
 2715              		.cfi_endproc
 2716              	.LFE4680:
 2718              		.section	.text._ZN8clasADSR13GetAttackTimeEv,"axG",%progbits,_ZN8clasADSR13GetAttackTimeEv,comdat
 2719              		.align	1
 2720              		.weak	_ZN8clasADSR13GetAttackTimeEv
 2721              		.syntax unified
 2722              		.thumb
 2723              		.thumb_func
 2724              		.fpu fpv5-d16
 2726              	_ZN8clasADSR13GetAttackTimeEv:
 2727              	.LFB4681:
 128:adsr.h        **** 
 129:adsr.h        **** 
 130:adsr.h        ****     //Getters//////////////////////////////////////////////////////////////////////////////////////
 131:adsr.h        ****     ///////////////////////////////////////////////////////////////////////////////////////////////
 132:adsr.h        **** 
 133:adsr.h        ****     float GetAttackTime(){
 2728              		.loc 17 133 11
 2729              		.cfi_startproc
 2730              		@ args = 0, pretend = 0, frame = 8
 2731              		@ frame_needed = 1, uses_anonymous_args = 0
 2732              		@ link register save eliminated.
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 83


 2733 0000 80B4     		push	{r7}
 2734              		.cfi_def_cfa_offset 4
 2735              		.cfi_offset 7, -4
 2736 0002 83B0     		sub	sp, sp, #12
 2737              		.cfi_def_cfa_offset 16
 2738 0004 00AF     		add	r7, sp, #0
 2739              		.cfi_def_cfa_register 7
 2740 0006 7860     		str	r0, [r7, #4]
 134:adsr.h        ****         return flAttackTime_;
 2741              		.loc 17 134 16
 2742 0008 7B68     		ldr	r3, [r7, #4]
 2743 000a 9B68     		ldr	r3, [r3, #8]	@ float
 2744 000c 07EE903A 		vmov	s15, r3
 135:adsr.h        ****     }
 2745              		.loc 17 135 5
 2746 0010 B0EE670A 		vmov.f32	s0, s15
 2747 0014 0C37     		adds	r7, r7, #12
 2748              		.cfi_def_cfa_offset 4
 2749 0016 BD46     		mov	sp, r7
 2750              		.cfi_def_cfa_register 13
 2751              		@ sp needed
 2752 0018 5DF8047B 		ldr	r7, [sp], #4
 2753              		.cfi_restore 7
 2754              		.cfi_def_cfa_offset 0
 2755 001c 7047     		bx	lr
 2756              		.cfi_endproc
 2757              	.LFE4681:
 2759              		.section	.text._ZN8clasADSR12GetDecayTimeEv,"axG",%progbits,_ZN8clasADSR12GetDecayTimeEv,comdat
 2760              		.align	1
 2761              		.weak	_ZN8clasADSR12GetDecayTimeEv
 2762              		.syntax unified
 2763              		.thumb
 2764              		.thumb_func
 2765              		.fpu fpv5-d16
 2767              	_ZN8clasADSR12GetDecayTimeEv:
 2768              	.LFB4682:
 136:adsr.h        **** 
 137:adsr.h        **** 
 138:adsr.h        ****     float GetDecayTime(){
 2769              		.loc 17 138 11
 2770              		.cfi_startproc
 2771              		@ args = 0, pretend = 0, frame = 8
 2772              		@ frame_needed = 1, uses_anonymous_args = 0
 2773              		@ link register save eliminated.
 2774 0000 80B4     		push	{r7}
 2775              		.cfi_def_cfa_offset 4
 2776              		.cfi_offset 7, -4
 2777 0002 83B0     		sub	sp, sp, #12
 2778              		.cfi_def_cfa_offset 16
 2779 0004 00AF     		add	r7, sp, #0
 2780              		.cfi_def_cfa_register 7
 2781 0006 7860     		str	r0, [r7, #4]
 139:adsr.h        ****         return flDecayTime_;
 2782              		.loc 17 139 16
 2783 0008 7B68     		ldr	r3, [r7, #4]
 2784 000a DB68     		ldr	r3, [r3, #12]	@ float
 2785 000c 07EE903A 		vmov	s15, r3
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 84


 140:adsr.h        ****     }
 2786              		.loc 17 140 5
 2787 0010 B0EE670A 		vmov.f32	s0, s15
 2788 0014 0C37     		adds	r7, r7, #12
 2789              		.cfi_def_cfa_offset 4
 2790 0016 BD46     		mov	sp, r7
 2791              		.cfi_def_cfa_register 13
 2792              		@ sp needed
 2793 0018 5DF8047B 		ldr	r7, [sp], #4
 2794              		.cfi_restore 7
 2795              		.cfi_def_cfa_offset 0
 2796 001c 7047     		bx	lr
 2797              		.cfi_endproc
 2798              	.LFE4682:
 2800              		.section	.text._ZN8clasADSR14GetReleaseTimeEv,"axG",%progbits,_ZN8clasADSR14GetReleaseTimeEv,comda
 2801              		.align	1
 2802              		.weak	_ZN8clasADSR14GetReleaseTimeEv
 2803              		.syntax unified
 2804              		.thumb
 2805              		.thumb_func
 2806              		.fpu fpv5-d16
 2808              	_ZN8clasADSR14GetReleaseTimeEv:
 2809              	.LFB4683:
 141:adsr.h        **** 
 142:adsr.h        **** 
 143:adsr.h        ****     float GetReleaseTime(){
 2810              		.loc 17 143 11
 2811              		.cfi_startproc
 2812              		@ args = 0, pretend = 0, frame = 8
 2813              		@ frame_needed = 1, uses_anonymous_args = 0
 2814              		@ link register save eliminated.
 2815 0000 80B4     		push	{r7}
 2816              		.cfi_def_cfa_offset 4
 2817              		.cfi_offset 7, -4
 2818 0002 83B0     		sub	sp, sp, #12
 2819              		.cfi_def_cfa_offset 16
 2820 0004 00AF     		add	r7, sp, #0
 2821              		.cfi_def_cfa_register 7
 2822 0006 7860     		str	r0, [r7, #4]
 144:adsr.h        ****         return flReleaseTime_;
 2823              		.loc 17 144 16
 2824 0008 7B68     		ldr	r3, [r7, #4]
 2825 000a 1B69     		ldr	r3, [r3, #16]	@ float
 2826 000c 07EE903A 		vmov	s15, r3
 145:adsr.h        ****     }
 2827              		.loc 17 145 5
 2828 0010 B0EE670A 		vmov.f32	s0, s15
 2829 0014 0C37     		adds	r7, r7, #12
 2830              		.cfi_def_cfa_offset 4
 2831 0016 BD46     		mov	sp, r7
 2832              		.cfi_def_cfa_register 13
 2833              		@ sp needed
 2834 0018 5DF8047B 		ldr	r7, [sp], #4
 2835              		.cfi_restore 7
 2836              		.cfi_def_cfa_offset 0
 2837 001c 7047     		bx	lr
 2838              		.cfi_endproc
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 85


 2839              	.LFE4683:
 2841              		.section	.text._ZN8clasADSR15GetSustainLevelEv,"axG",%progbits,_ZN8clasADSR15GetSustainLevelEv,com
 2842              		.align	1
 2843              		.weak	_ZN8clasADSR15GetSustainLevelEv
 2844              		.syntax unified
 2845              		.thumb
 2846              		.thumb_func
 2847              		.fpu fpv5-d16
 2849              	_ZN8clasADSR15GetSustainLevelEv:
 2850              	.LFB4684:
 146:adsr.h        **** 
 147:adsr.h        **** 
 148:adsr.h        ****     float GetSustainLevel(){
 2851              		.loc 17 148 11
 2852              		.cfi_startproc
 2853              		@ args = 0, pretend = 0, frame = 8
 2854              		@ frame_needed = 1, uses_anonymous_args = 0
 2855              		@ link register save eliminated.
 2856 0000 80B4     		push	{r7}
 2857              		.cfi_def_cfa_offset 4
 2858              		.cfi_offset 7, -4
 2859 0002 83B0     		sub	sp, sp, #12
 2860              		.cfi_def_cfa_offset 16
 2861 0004 00AF     		add	r7, sp, #0
 2862              		.cfi_def_cfa_register 7
 2863 0006 7860     		str	r0, [r7, #4]
 149:adsr.h        ****         return flSustainLevel_;
 2864              		.loc 17 149 16
 2865 0008 7B68     		ldr	r3, [r7, #4]
 2866 000a 5B69     		ldr	r3, [r3, #20]	@ float
 2867 000c 07EE903A 		vmov	s15, r3
 150:adsr.h        ****     }
 2868              		.loc 17 150 5
 2869 0010 B0EE670A 		vmov.f32	s0, s15
 2870 0014 0C37     		adds	r7, r7, #12
 2871              		.cfi_def_cfa_offset 4
 2872 0016 BD46     		mov	sp, r7
 2873              		.cfi_def_cfa_register 13
 2874              		@ sp needed
 2875 0018 5DF8047B 		ldr	r7, [sp], #4
 2876              		.cfi_restore 7
 2877              		.cfi_def_cfa_offset 0
 2878 001c 7047     		bx	lr
 2879              		.cfi_endproc
 2880              	.LFE4684:
 2882              		.section	.text._ZN8clasADSR15SetSustainLevelEf,"axG",%progbits,_ZN8clasADSR15SetSustainLevelEf,com
 2883              		.align	1
 2884              		.weak	_ZN8clasADSR15SetSustainLevelEf
 2885              		.syntax unified
 2886              		.thumb
 2887              		.thumb_func
 2888              		.fpu fpv5-d16
 2890              	_ZN8clasADSR15SetSustainLevelEf:
 2891              	.LFB4685:
 151:adsr.h        **** 
 152:adsr.h        **** 
 153:adsr.h        ****     //Setters//////////////////////////////////////////////////////////////////////////////////////
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 86


 154:adsr.h        ****     ///////////////////////////////////////////////////////////////////////////////////////////////
 155:adsr.h        **** 
 156:adsr.h        ****     //Sets the sustain level
 157:adsr.h        ****     inline void SetSustainLevel(float level){ 
 2892              		.loc 17 157 17
 2893              		.cfi_startproc
 2894              		@ args = 0, pretend = 0, frame = 8
 2895              		@ frame_needed = 1, uses_anonymous_args = 0
 2896              		@ link register save eliminated.
 2897 0000 80B4     		push	{r7}
 2898              		.cfi_def_cfa_offset 4
 2899              		.cfi_offset 7, -4
 2900 0002 83B0     		sub	sp, sp, #12
 2901              		.cfi_def_cfa_offset 16
 2902 0004 00AF     		add	r7, sp, #0
 2903              		.cfi_def_cfa_register 7
 2904 0006 7860     		str	r0, [r7, #4]
 2905 0008 87ED000A 		vstr.32	s0, [r7]
 158:adsr.h        ****         level = (level <= 0.f) ? -0.01f // forces envelope into idle 
 2906              		.loc 17 158 32
 2907 000c D7ED007A 		vldr.32	s15, [r7]
 2908 0010 F5EEC07A 		vcmpe.f32	s15, #0
 2909 0014 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2910 0018 01D8     		bhi	.L129
 2911              		.loc 17 158 32 is_stmt 0 discriminator 1
 2912 001a 0C4B     		ldr	r3, .L131
 2913 001c 0CE0     		b	.L123
 2914              	.L129:
 159:adsr.h        ****                                         : (level > 1.f) ? 1.f : level; //clamps to <= 1.0f;
 2915              		.loc 17 159 57 is_stmt 1
 2916 001e D7ED007A 		vldr.32	s15, [r7]
 2917 0022 B7EE007A 		vmov.f32	s14, #1.0e+0
 2918 0026 F4EEC77A 		vcmpe.f32	s15, s14
 2919 002a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2920 002e 02DD     		ble	.L130
 2921              		.loc 17 159 57 is_stmt 0 discriminator 1
 2922 0030 4FF07E53 		mov	r3, #1065353216
 2923 0034 00E0     		b	.L123
 2924              	.L130:
 2925              		.loc 17 159 57 discriminator 2
 2926 0036 3B68     		ldr	r3, [r7]	@ float
 2927              	.L123:
 158:adsr.h        ****         level = (level <= 0.f) ? -0.01f // forces envelope into idle 
 2928              		.loc 17 158 15 is_stmt 1 discriminator 2
 2929 0038 3B60     		str	r3, [r7]	@ float
 160:adsr.h        ****         flSustainLevel_ = level;
 2930              		.loc 17 160 25 discriminator 2
 2931 003a 7B68     		ldr	r3, [r7, #4]
 2932 003c 3A68     		ldr	r2, [r7]	@ float
 2933 003e 5A61     		str	r2, [r3, #20]	@ float
 161:adsr.h        ****     }
 2934              		.loc 17 161 5 discriminator 2
 2935 0040 00BF     		nop
 2936 0042 0C37     		adds	r7, r7, #12
 2937              		.cfi_def_cfa_offset 4
 2938 0044 BD46     		mov	sp, r7
 2939              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 87


 2940              		@ sp needed
 2941 0046 5DF8047B 		ldr	r7, [sp], #4
 2942              		.cfi_restore 7
 2943              		.cfi_def_cfa_offset 0
 2944 004a 7047     		bx	lr
 2945              	.L132:
 2946              		.align	2
 2947              	.L131:
 2948 004c 0AD723BC 		.word	-1138501878
 2949              		.cfi_endproc
 2950              	.LFE4685:
 2952              		.section	.text._ZN8clasADSR13SetAttackRateEf,"axG",%progbits,_ZN8clasADSR13SetAttackRateEf,comdat
 2953              		.align	1
 2954              		.weak	_ZN8clasADSR13SetAttackRateEf
 2955              		.syntax unified
 2956              		.thumb
 2957              		.thumb_func
 2958              		.fpu fpv5-d16
 2960              	_ZN8clasADSR13SetAttackRateEf:
 2961              	.LFB4686:
 162:adsr.h        **** 
 163:adsr.h        **** 
 164:adsr.h        ****     //Sets the Attack rate
 165:adsr.h        ****     void SetAttackRate(float seconds){
 2962              		.loc 17 165 10
 2963              		.cfi_startproc
 2964              		@ args = 0, pretend = 0, frame = 16
 2965              		@ frame_needed = 1, uses_anonymous_args = 0
 2966 0000 80B5     		push	{r7, lr}
 2967              		.cfi_def_cfa_offset 8
 2968              		.cfi_offset 7, -8
 2969              		.cfi_offset 14, -4
 2970 0002 84B0     		sub	sp, sp, #16
 2971              		.cfi_def_cfa_offset 24
 2972 0004 00AF     		add	r7, sp, #0
 2973              		.cfi_def_cfa_register 7
 2974 0006 7860     		str	r0, [r7, #4]
 2975 0008 87ED000A 		vstr.32	s0, [r7]
 166:adsr.h        ****         flAttackTime_ = seconds;
 2976              		.loc 17 166 23
 2977 000c 7B68     		ldr	r3, [r7, #4]
 2978 000e 3A68     		ldr	r2, [r7]	@ float
 2979 0010 9A60     		str	r2, [r3, #8]	@ float
 167:adsr.h        ****         flAttackTime_ = (flAttackTime_ <= 0.f) ? 0.001 : (flAttackTime_ > 10.0f) ? 10.0f : flAttack
 2980              		.loc 17 167 26
 2981 0012 7B68     		ldr	r3, [r7, #4]
 2982 0014 D3ED027A 		vldr.32	s15, [r3, #8]
 2983              		.loc 17 167 48
 2984 0018 F5EEC07A 		vcmpe.f32	s15, #0
 2985 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2986 0020 01D8     		bhi	.L142
 2987              		.loc 17 167 48 is_stmt 0 discriminator 1
 2988 0022 294B     		ldr	r3, .L144
 2989 0024 0DE0     		b	.L136
 2990              	.L142:
 2991              		.loc 17 167 59 is_stmt 1 discriminator 2
 2992 0026 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 88


 2993 0028 D3ED027A 		vldr.32	s15, [r3, #8]
 2994              		.loc 17 167 48 discriminator 2
 2995 002c B2EE047A 		vmov.f32	s14, #1.0e+1
 2996 0030 F4EEC77A 		vcmpe.f32	s15, s14
 2997 0034 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2998 0038 01DD     		ble	.L143
 2999              		.loc 17 167 48 is_stmt 0 discriminator 4
 3000 003a 244B     		ldr	r3, .L144+4
 3001 003c 01E0     		b	.L136
 3002              	.L143:
 3003              		.loc 17 167 48 discriminator 5
 3004 003e 7B68     		ldr	r3, [r7, #4]
 3005 0040 9B68     		ldr	r3, [r3, #8]	@ float
 3006              	.L136:
 3007              		.loc 17 167 23 is_stmt 1 discriminator 8
 3008 0042 7A68     		ldr	r2, [r7, #4]
 3009 0044 9360     		str	r3, [r2, #8]	@ float
 168:adsr.h        ****         float TCO = 1 - 0.99;
 3010              		.loc 17 168 15 discriminator 8
 3011 0046 224B     		ldr	r3, .L144+8
 3012 0048 FB60     		str	r3, [r7, #12]	@ float
 169:adsr.h        ****         float alpha = (-log( (1 + TCO ) / ( TCO ) ) / flAttackTime_ );
 3013              		.loc 17 169 33 discriminator 8
 3014 004a D7ED037A 		vldr.32	s15, [r7, #12]
 3015 004e B7EE007A 		vmov.f32	s14, #1.0e+0
 3016 0052 37EE877A 		vadd.f32	s14, s15, s14
 3017              		.loc 17 169 28 discriminator 8
 3018 0056 D7ED037A 		vldr.32	s15, [r7, #12]
 3019 005a C7EE276A 		vdiv.f32	s13, s14, s15
 3020 005e B0EE660A 		vmov.f32	s0, s13
 3021 0062 FFF7FEFF 		bl	_ZSt3logf
 3022 0066 F0EE407A 		vmov.f32	s15, s0
 3023              		.loc 17 169 24 discriminator 8
 3024 006a F1EE676A 		vneg.f32	s13, s15
 3025              		.loc 17 169 55 discriminator 8
 3026 006e 7B68     		ldr	r3, [r7, #4]
 3027 0070 93ED027A 		vldr.32	s14, [r3, #8]
 3028              		.loc 17 169 69 discriminator 8
 3029 0074 C6EE877A 		vdiv.f32	s15, s13, s14
 3030 0078 C7ED027A 		vstr.32	s15, [r7, #8]
 170:adsr.h        ****         flBAttack_ = exp(alpha * flDt_); 
 3031              		.loc 17 170 34 discriminator 8
 3032 007c 7B68     		ldr	r3, [r7, #4]
 3033 007e 93ED017A 		vldr.32	s14, [r3, #4]
 3034              		.loc 17 170 25 discriminator 8
 3035 0082 D7ED027A 		vldr.32	s15, [r7, #8]
 3036 0086 67EE277A 		vmul.f32	s15, s14, s15
 3037 008a B0EE670A 		vmov.f32	s0, s15
 3038 008e FFF7FEFF 		bl	_ZSt3expf
 3039 0092 F0EE407A 		vmov.f32	s15, s0
 3040              		.loc 17 170 20 discriminator 8
 3041 0096 7B68     		ldr	r3, [r7, #4]
 3042 0098 C3ED097A 		vstr.32	s15, [r3, #36]
 171:adsr.h        ****         flX0Attack_ = ( ( 1 + TCO ) * ( 1 - flBAttack_ ) );
 3043              		.loc 17 171 29 discriminator 8
 3044 009c D7ED037A 		vldr.32	s15, [r7, #12]
 3045 00a0 B7EE007A 		vmov.f32	s14, #1.0e+0
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 89


 3046 00a4 37EE877A 		vadd.f32	s14, s15, s14
 3047              		.loc 17 171 45 discriminator 8
 3048 00a8 7B68     		ldr	r3, [r7, #4]
 3049 00aa D3ED097A 		vldr.32	s15, [r3, #36]
 3050              		.loc 17 171 43 discriminator 8
 3051 00ae F7EE006A 		vmov.f32	s13, #1.0e+0
 3052 00b2 76EEE77A 		vsub.f32	s15, s13, s15
 3053              		.loc 17 171 37 discriminator 8
 3054 00b6 67EE277A 		vmul.f32	s15, s14, s15
 3055              		.loc 17 171 21 discriminator 8
 3056 00ba 7B68     		ldr	r3, [r7, #4]
 3057 00bc C3ED067A 		vstr.32	s15, [r3, #24]
 172:adsr.h        ****     }
 3058              		.loc 17 172 5 discriminator 8
 3059 00c0 00BF     		nop
 3060 00c2 1037     		adds	r7, r7, #16
 3061              		.cfi_def_cfa_offset 8
 3062 00c4 BD46     		mov	sp, r7
 3063              		.cfi_def_cfa_register 13
 3064              		@ sp needed
 3065 00c6 80BD     		pop	{r7, pc}
 3066              	.L145:
 3067              		.align	2
 3068              	.L144:
 3069 00c8 6F12833A 		.word	981668463
 3070 00cc 00002041 		.word	1092616192
 3071 00d0 0AD7233C 		.word	1008981770
 3072              		.cfi_endproc
 3073              	.LFE4686:
 3075              		.section	.text._ZN8clasADSR12SetDecayRateEf,"axG",%progbits,_ZN8clasADSR12SetDecayRateEf,comdat
 3076              		.align	1
 3077              		.weak	_ZN8clasADSR12SetDecayRateEf
 3078              		.syntax unified
 3079              		.thumb
 3080              		.thumb_func
 3081              		.fpu fpv5-d16
 3083              	_ZN8clasADSR12SetDecayRateEf:
 3084              	.LFB4687:
 173:adsr.h        **** 
 174:adsr.h        **** 
 175:adsr.h        ****     //Sets the Decay rate
 176:adsr.h        ****     void SetDecayRate(float seconds){
 3085              		.loc 17 176 10
 3086              		.cfi_startproc
 3087              		@ args = 0, pretend = 0, frame = 16
 3088              		@ frame_needed = 1, uses_anonymous_args = 0
 3089 0000 80B5     		push	{r7, lr}
 3090              		.cfi_def_cfa_offset 8
 3091              		.cfi_offset 7, -8
 3092              		.cfi_offset 14, -4
 3093 0002 84B0     		sub	sp, sp, #16
 3094              		.cfi_def_cfa_offset 24
 3095 0004 00AF     		add	r7, sp, #0
 3096              		.cfi_def_cfa_register 7
 3097 0006 7860     		str	r0, [r7, #4]
 3098 0008 87ED000A 		vstr.32	s0, [r7]
 177:adsr.h        ****         flDecayTime_ = seconds;
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 90


 3099              		.loc 17 177 22
 3100 000c 7B68     		ldr	r3, [r7, #4]
 3101 000e 3A68     		ldr	r2, [r7]	@ float
 3102 0010 DA60     		str	r2, [r3, #12]	@ float
 178:adsr.h        ****         flDecayTime_ = (flDecayTime_ <= 0.f) ? 0.001 : (flDecayTime_ > 10.0f) ? 10.0f : flDecayTime
 3103              		.loc 17 178 25
 3104 0012 7B68     		ldr	r3, [r7, #4]
 3105 0014 D3ED037A 		vldr.32	s15, [r3, #12]
 3106              		.loc 17 178 46
 3107 0018 F5EEC07A 		vcmpe.f32	s15, #0
 3108 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3109 0020 01D8     		bhi	.L155
 3110              		.loc 17 178 46 is_stmt 0 discriminator 1
 3111 0022 2A4B     		ldr	r3, .L157
 3112 0024 0DE0     		b	.L149
 3113              	.L155:
 3114              		.loc 17 178 57 is_stmt 1 discriminator 2
 3115 0026 7B68     		ldr	r3, [r7, #4]
 3116 0028 D3ED037A 		vldr.32	s15, [r3, #12]
 3117              		.loc 17 178 46 discriminator 2
 3118 002c B2EE047A 		vmov.f32	s14, #1.0e+1
 3119 0030 F4EEC77A 		vcmpe.f32	s15, s14
 3120 0034 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3121 0038 01DD     		ble	.L156
 3122              		.loc 17 178 46 is_stmt 0 discriminator 4
 3123 003a 254B     		ldr	r3, .L157+4
 3124 003c 01E0     		b	.L149
 3125              	.L156:
 3126              		.loc 17 178 46 discriminator 5
 3127 003e 7B68     		ldr	r3, [r7, #4]
 3128 0040 DB68     		ldr	r3, [r3, #12]	@ float
 3129              	.L149:
 3130              		.loc 17 178 22 is_stmt 1 discriminator 8
 3131 0042 7A68     		ldr	r2, [r7, #4]
 3132 0044 D360     		str	r3, [r2, #12]	@ float
 179:adsr.h        ****         float TCO = exp(-3);
 3133              		.loc 17 179 15 discriminator 8
 3134 0046 234B     		ldr	r3, .L157+8
 3135 0048 FB60     		str	r3, [r7, #12]	@ float
 180:adsr.h        ****         float alpha = (-log( (1 + TCO ) / ( TCO ) ) / flDecayTime_ );
 3136              		.loc 17 180 33 discriminator 8
 3137 004a D7ED037A 		vldr.32	s15, [r7, #12]
 3138 004e B7EE007A 		vmov.f32	s14, #1.0e+0
 3139 0052 37EE877A 		vadd.f32	s14, s15, s14
 3140              		.loc 17 180 28 discriminator 8
 3141 0056 D7ED037A 		vldr.32	s15, [r7, #12]
 3142 005a C7EE276A 		vdiv.f32	s13, s14, s15
 3143 005e B0EE660A 		vmov.f32	s0, s13
 3144 0062 FFF7FEFF 		bl	_ZSt3logf
 3145 0066 F0EE407A 		vmov.f32	s15, s0
 3146              		.loc 17 180 24 discriminator 8
 3147 006a F1EE676A 		vneg.f32	s13, s15
 3148              		.loc 17 180 55 discriminator 8
 3149 006e 7B68     		ldr	r3, [r7, #4]
 3150 0070 93ED037A 		vldr.32	s14, [r3, #12]
 3151              		.loc 17 180 68 discriminator 8
 3152 0074 C6EE877A 		vdiv.f32	s15, s13, s14
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 91


 3153 0078 C7ED027A 		vstr.32	s15, [r7, #8]
 181:adsr.h        ****         flBDecay_ = exp(alpha * flDt_); 
 3154              		.loc 17 181 33 discriminator 8
 3155 007c 7B68     		ldr	r3, [r7, #4]
 3156 007e 93ED017A 		vldr.32	s14, [r3, #4]
 3157              		.loc 17 181 24 discriminator 8
 3158 0082 D7ED027A 		vldr.32	s15, [r7, #8]
 3159 0086 67EE277A 		vmul.f32	s15, s14, s15
 3160 008a B0EE670A 		vmov.f32	s0, s15
 3161 008e FFF7FEFF 		bl	_ZSt3expf
 3162 0092 F0EE407A 		vmov.f32	s15, s0
 3163              		.loc 17 181 19 discriminator 8
 3164 0096 7B68     		ldr	r3, [r7, #4]
 3165 0098 C3ED0A7A 		vstr.32	s15, [r3, #40]
 182:adsr.h        ****         flX0Decay_ = ( ( flSustainLevel_ - TCO ) * ( 1 - flBDecay_ ) );
 3166              		.loc 17 182 26 discriminator 8
 3167 009c 7B68     		ldr	r3, [r7, #4]
 3168 009e 93ED057A 		vldr.32	s14, [r3, #20]
 3169              		.loc 17 182 42 discriminator 8
 3170 00a2 D7ED037A 		vldr.32	s15, [r7, #12]
 3171 00a6 37EE677A 		vsub.f32	s14, s14, s15
 3172              		.loc 17 182 58 discriminator 8
 3173 00aa 7B68     		ldr	r3, [r7, #4]
 3174 00ac D3ED0A7A 		vldr.32	s15, [r3, #40]
 3175              		.loc 17 182 56 discriminator 8
 3176 00b0 F7EE006A 		vmov.f32	s13, #1.0e+0
 3177 00b4 76EEE77A 		vsub.f32	s15, s13, s15
 3178              		.loc 17 182 50 discriminator 8
 3179 00b8 67EE277A 		vmul.f32	s15, s14, s15
 3180              		.loc 17 182 20 discriminator 8
 3181 00bc 7B68     		ldr	r3, [r7, #4]
 3182 00be C3ED077A 		vstr.32	s15, [r3, #28]
 183:adsr.h        ****     }
 3183              		.loc 17 183 5 discriminator 8
 3184 00c2 00BF     		nop
 3185 00c4 1037     		adds	r7, r7, #16
 3186              		.cfi_def_cfa_offset 8
 3187 00c6 BD46     		mov	sp, r7
 3188              		.cfi_def_cfa_register 13
 3189              		@ sp needed
 3190 00c8 80BD     		pop	{r7, pc}
 3191              	.L158:
 3192 00ca 00BF     		.align	2
 3193              	.L157:
 3194 00cc 6F12833A 		.word	981668463
 3195 00d0 00002041 		.word	1092616192
 3196 00d4 86ED4B3D 		.word	1028386182
 3197              		.cfi_endproc
 3198              	.LFE4687:
 3200              		.section	.text._ZN8clasADSR14SetReleaseRateEf,"axG",%progbits,_ZN8clasADSR14SetReleaseRateEf,comda
 3201              		.align	1
 3202              		.weak	_ZN8clasADSR14SetReleaseRateEf
 3203              		.syntax unified
 3204              		.thumb
 3205              		.thumb_func
 3206              		.fpu fpv5-d16
 3208              	_ZN8clasADSR14SetReleaseRateEf:
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 92


 3209              	.LFB4689:
 184:adsr.h        **** 
 185:adsr.h        **** 
 186:adsr.h        ****     //Sets the Release rate
 187:adsr.h        ****     void SetReleaseRate(float seconds){
 3210              		.loc 17 187 10
 3211              		.cfi_startproc
 3212              		@ args = 0, pretend = 0, frame = 16
 3213              		@ frame_needed = 1, uses_anonymous_args = 0
 3214 0000 80B5     		push	{r7, lr}
 3215              		.cfi_def_cfa_offset 8
 3216              		.cfi_offset 7, -8
 3217              		.cfi_offset 14, -4
 3218 0002 84B0     		sub	sp, sp, #16
 3219              		.cfi_def_cfa_offset 24
 3220 0004 00AF     		add	r7, sp, #0
 3221              		.cfi_def_cfa_register 7
 3222 0006 7860     		str	r0, [r7, #4]
 3223 0008 87ED000A 		vstr.32	s0, [r7]
 188:adsr.h        ****         flReleaseTime_ = seconds;
 3224              		.loc 17 188 24
 3225 000c 7B68     		ldr	r3, [r7, #4]
 3226 000e 3A68     		ldr	r2, [r7]	@ float
 3227 0010 1A61     		str	r2, [r3, #16]	@ float
 189:adsr.h        ****         flReleaseTime_ = (flReleaseTime_ <= 0.f) ? 0.001 : (flReleaseTime_ > 15.0f) ? 15.0f : flRel
 3228              		.loc 17 189 27
 3229 0012 7B68     		ldr	r3, [r7, #4]
 3230 0014 D3ED047A 		vldr.32	s15, [r3, #16]
 3231              		.loc 17 189 50
 3232 0018 F5EEC07A 		vcmpe.f32	s15, #0
 3233 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3234 0020 01D8     		bhi	.L168
 3235              		.loc 17 189 50 is_stmt 0 discriminator 1
 3236 0022 284B     		ldr	r3, .L170
 3237 0024 0DE0     		b	.L162
 3238              	.L168:
 3239              		.loc 17 189 61 is_stmt 1 discriminator 2
 3240 0026 7B68     		ldr	r3, [r7, #4]
 3241 0028 D3ED047A 		vldr.32	s15, [r3, #16]
 3242              		.loc 17 189 50 discriminator 2
 3243 002c B2EE0E7A 		vmov.f32	s14, #1.5e+1
 3244 0030 F4EEC77A 		vcmpe.f32	s15, s14
 3245 0034 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3246 0038 01DD     		ble	.L169
 3247              		.loc 17 189 50 is_stmt 0 discriminator 4
 3248 003a 234B     		ldr	r3, .L170+4
 3249 003c 01E0     		b	.L162
 3250              	.L169:
 3251              		.loc 17 189 50 discriminator 5
 3252 003e 7B68     		ldr	r3, [r7, #4]
 3253 0040 1B69     		ldr	r3, [r3, #16]	@ float
 3254              	.L162:
 3255              		.loc 17 189 24 is_stmt 1 discriminator 8
 3256 0042 7A68     		ldr	r2, [r7, #4]
 3257 0044 1361     		str	r3, [r2, #16]	@ float
 190:adsr.h        ****         float TCO = exp(-3);
 3258              		.loc 17 190 15 discriminator 8
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 93


 3259 0046 214B     		ldr	r3, .L170+8
 3260 0048 FB60     		str	r3, [r7, #12]	@ float
 191:adsr.h        ****         float alpha = (-log( (1 + TCO ) / ( TCO ) ) / flReleaseTime_ );
 3261              		.loc 17 191 33 discriminator 8
 3262 004a D7ED037A 		vldr.32	s15, [r7, #12]
 3263 004e B7EE007A 		vmov.f32	s14, #1.0e+0
 3264 0052 37EE877A 		vadd.f32	s14, s15, s14
 3265              		.loc 17 191 28 discriminator 8
 3266 0056 D7ED037A 		vldr.32	s15, [r7, #12]
 3267 005a C7EE276A 		vdiv.f32	s13, s14, s15
 3268 005e B0EE660A 		vmov.f32	s0, s13
 3269 0062 FFF7FEFF 		bl	_ZSt3logf
 3270 0066 F0EE407A 		vmov.f32	s15, s0
 3271              		.loc 17 191 24 discriminator 8
 3272 006a F1EE676A 		vneg.f32	s13, s15
 3273              		.loc 17 191 55 discriminator 8
 3274 006e 7B68     		ldr	r3, [r7, #4]
 3275 0070 93ED047A 		vldr.32	s14, [r3, #16]
 3276              		.loc 17 191 70 discriminator 8
 3277 0074 C6EE877A 		vdiv.f32	s15, s13, s14
 3278 0078 C7ED027A 		vstr.32	s15, [r7, #8]
 192:adsr.h        ****         flBRelease_ = exp(alpha * flDt_); 
 3279              		.loc 17 192 35 discriminator 8
 3280 007c 7B68     		ldr	r3, [r7, #4]
 3281 007e 93ED017A 		vldr.32	s14, [r3, #4]
 3282              		.loc 17 192 26 discriminator 8
 3283 0082 D7ED027A 		vldr.32	s15, [r7, #8]
 3284 0086 67EE277A 		vmul.f32	s15, s14, s15
 3285 008a B0EE670A 		vmov.f32	s0, s15
 3286 008e FFF7FEFF 		bl	_ZSt3expf
 3287 0092 F0EE407A 		vmov.f32	s15, s0
 3288              		.loc 17 192 21 discriminator 8
 3289 0096 7B68     		ldr	r3, [r7, #4]
 3290 0098 C3ED0B7A 		vstr.32	s15, [r3, #44]
 193:adsr.h        ****         flX0Release_ = ( ( - TCO ) * ( 1 - flBRelease_ ) );
 3291              		.loc 17 193 28 discriminator 8
 3292 009c D7ED037A 		vldr.32	s15, [r7, #12]
 3293 00a0 B1EE677A 		vneg.f32	s14, s15
 3294              		.loc 17 193 44 discriminator 8
 3295 00a4 7B68     		ldr	r3, [r7, #4]
 3296 00a6 D3ED0B7A 		vldr.32	s15, [r3, #44]
 3297              		.loc 17 193 42 discriminator 8
 3298 00aa F7EE006A 		vmov.f32	s13, #1.0e+0
 3299 00ae 76EEE77A 		vsub.f32	s15, s13, s15
 3300              		.loc 17 193 36 discriminator 8
 3301 00b2 67EE277A 		vmul.f32	s15, s14, s15
 3302              		.loc 17 193 22 discriminator 8
 3303 00b6 7B68     		ldr	r3, [r7, #4]
 3304 00b8 C3ED087A 		vstr.32	s15, [r3, #32]
 194:adsr.h        ****     }
 3305              		.loc 17 194 5 discriminator 8
 3306 00bc 00BF     		nop
 3307 00be 1037     		adds	r7, r7, #16
 3308              		.cfi_def_cfa_offset 8
 3309 00c0 BD46     		mov	sp, r7
 3310              		.cfi_def_cfa_register 13
 3311              		@ sp needed
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 94


 3312 00c2 80BD     		pop	{r7, pc}
 3313              	.L171:
 3314              		.align	2
 3315              	.L170:
 3316 00c4 6F12833A 		.word	981668463
 3317 00c8 00007041 		.word	1097859072
 3318 00cc 86ED4B3D 		.word	1028386182
 3319              		.cfi_endproc
 3320              	.LFE4689:
 3322              		.section	.text._ZN21clasSecondOrderFilter9mBilinearE12COEFFICIENTSf,"axG",%progbits,_ZN21clasSecon
 3323              		.align	1
 3324              		.weak	_ZN21clasSecondOrderFilter9mBilinearE12COEFFICIENTSf
 3325              		.syntax unified
 3326              		.thumb
 3327              		.thumb_func
 3328              		.fpu fpv5-d16
 3330              	_ZN21clasSecondOrderFilter9mBilinearE12COEFFICIENTSf:
 3331              	.LFB4690:
 3332              		.file 18 "twoorderfilter.h"
   1:twoorderfilter.h **** #pragma once
   2:twoorderfilter.h **** #ifndef SECONDORD_H
   3:twoorderfilter.h **** #define SECONDORD_H
   4:twoorderfilter.h **** 
   5:twoorderfilter.h **** #include "daisysp.h"
   6:twoorderfilter.h **** #include "daisy_seed.h"
   7:twoorderfilter.h **** #include "math.h"
   8:twoorderfilter.h **** 
   9:twoorderfilter.h **** 
  10:twoorderfilter.h **** //cofficient structure
  11:twoorderfilter.h **** typedef struct {
  12:twoorderfilter.h ****     float den[3];
  13:twoorderfilter.h ****     float num[3];
  14:twoorderfilter.h **** } COEFFICIENTS;
  15:twoorderfilter.h **** 
  16:twoorderfilter.h **** //BELL CURVE EQ CLASS//////////////////////////////////////////////////////////////////////////////
  17:twoorderfilter.h **** class clasSecondOrderFilter {
  18:twoorderfilter.h **** private:
  19:twoorderfilter.h ****     //Variables//////////////
  20:twoorderfilter.h ****     float Fs_;
  21:twoorderfilter.h ****     float Q_;
  22:twoorderfilter.h ****     float fcut_;
  23:twoorderfilter.h ****     float boost_;
  24:twoorderfilter.h ****     float T_;
  25:twoorderfilter.h ****     float pi_ = 3.14159265358979323846;
  26:twoorderfilter.h ****     float aflX_[3];
  27:twoorderfilter.h ****     float aflY_[3];
  28:twoorderfilter.h ****     const int MAX_FREQ = 1500;
  29:twoorderfilter.h ****     COEFFICIENTS stAanCoeff_;                    //Define ananlogue coefficients variable
  30:twoorderfilter.h ****     COEFFICIENTS stDigCoeff_;                    //Define digital coefficients variable
  31:twoorderfilter.h **** 
  32:twoorderfilter.h **** 
  33:twoorderfilter.h ****     //Methods////////////////
  34:twoorderfilter.h **** 
  35:twoorderfilter.h ****     //mBilinear coefficient generator. Takes the analogue coefficients and converts into digital by
  36:twoorderfilter.h ****     COEFFICIENTS mBilinear(COEFFICIENTS stAnaCoeff, float Fs_) {
 3333              		.loc 18 36 18
 3334              		.cfi_startproc
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 95


 3335              		@ args = 24, pretend = 8, frame = 56
 3336              		@ frame_needed = 1, uses_anonymous_args = 0
 3337              		@ link register save eliminated.
 3338 0000 82B0     		sub	sp, sp, #8
 3339              		.cfi_def_cfa_offset 8
 3340 0002 B0B4     		push	{r4, r5, r7}
 3341              		.cfi_def_cfa_offset 20
 3342              		.cfi_offset 4, -20
 3343              		.cfi_offset 5, -16
 3344              		.cfi_offset 7, -12
 3345 0004 8FB0     		sub	sp, sp, #60
 3346              		.cfi_def_cfa_offset 80
 3347 0006 00AF     		add	r7, sp, #0
 3348              		.cfi_def_cfa_register 7
 3349 0008 F860     		str	r0, [r7, #12]
 3350 000a B960     		str	r1, [r7, #8]
 3351 000c 07F14801 		add	r1, r7, #72
 3352 0010 81E80C00 		stm	r1, {r2, r3}
 3353 0014 87ED010A 		vstr.32	s0, [r7, #4]
  37:twoorderfilter.h **** 
  38:twoorderfilter.h ****         //Calculate k
  39:twoorderfilter.h ****         float k = Fs_*2;
 3354              		.loc 18 39 15
 3355 0018 D7ED017A 		vldr.32	s15, [r7, #4]
 3356 001c 77EEA77A 		vadd.f32	s15, s15, s15
 3357 0020 C7ED0D7A 		vstr.32	s15, [r7, #52]
  40:twoorderfilter.h ****         float k2 = k * k;
 3358              		.loc 18 40 15
 3359 0024 D7ED0D7A 		vldr.32	s15, [r7, #52]
 3360 0028 67EEA77A 		vmul.f32	s15, s15, s15
 3361 002c C7ED0C7A 		vstr.32	s15, [r7, #48]
  41:twoorderfilter.h **** 
  42:twoorderfilter.h ****         //Apply the BZT////////////////////////////////////////////////////////////////////////////
  43:twoorderfilter.h ****         float a0 = stAnaCoeff.den[0] * k2 + stAnaCoeff.den[1] * k + stAnaCoeff.den[2];
 3362              		.loc 18 43 36
 3363 0030 97ED127A 		vldr.32	s14, [r7, #72]
 3364              		.loc 18 43 38
 3365 0034 D7ED0C7A 		vldr.32	s15, [r7, #48]
 3366 0038 27EE277A 		vmul.f32	s14, s14, s15
 3367              		.loc 18 43 61
 3368 003c D7ED136A 		vldr.32	s13, [r7, #76]
 3369              		.loc 18 43 63
 3370 0040 D7ED0D7A 		vldr.32	s15, [r7, #52]
 3371 0044 66EEA77A 		vmul.f32	s15, s13, s15
 3372              		.loc 18 43 43
 3373 0048 37EE277A 		vadd.f32	s14, s14, s15
 3374              		.loc 18 43 85
 3375 004c D7ED147A 		vldr.32	s15, [r7, #80]
 3376              		.loc 18 43 15
 3377 0050 77EE277A 		vadd.f32	s15, s14, s15
 3378 0054 C7ED0B7A 		vstr.32	s15, [r7, #44]
  44:twoorderfilter.h ****         float a1 = -2.0f * stAnaCoeff.den[0] * k2 + 2.0f * stAnaCoeff.den[2];
 3379              		.loc 18 44 44
 3380 0058 D7ED127A 		vldr.32	s15, [r7, #72]
 3381              		.loc 18 44 26
 3382 005c B8EE007A 		vmov.f32	s14, #-2.0e+0
 3383 0060 27EE877A 		vmul.f32	s14, s15, s14
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 96


 3384              		.loc 18 44 46
 3385 0064 D7ED0C7A 		vldr.32	s15, [r7, #48]
 3386 0068 27EE277A 		vmul.f32	s14, s14, s15
 3387              		.loc 18 44 76
 3388 006c D7ED147A 		vldr.32	s15, [r7, #80]
 3389              		.loc 18 44 58
 3390 0070 77EEA77A 		vadd.f32	s15, s15, s15
 3391              		.loc 18 44 15
 3392 0074 77EE277A 		vadd.f32	s15, s14, s15
 3393 0078 C7ED0A7A 		vstr.32	s15, [r7, #40]
  45:twoorderfilter.h ****         float a2 = stAnaCoeff.den[0] * k2 - stAnaCoeff.den[1] * k + stAnaCoeff.den[2];
 3394              		.loc 18 45 36
 3395 007c 97ED127A 		vldr.32	s14, [r7, #72]
 3396              		.loc 18 45 38
 3397 0080 D7ED0C7A 		vldr.32	s15, [r7, #48]
 3398 0084 27EE277A 		vmul.f32	s14, s14, s15
 3399              		.loc 18 45 61
 3400 0088 D7ED136A 		vldr.32	s13, [r7, #76]
 3401              		.loc 18 45 63
 3402 008c D7ED0D7A 		vldr.32	s15, [r7, #52]
 3403 0090 66EEA77A 		vmul.f32	s15, s13, s15
 3404              		.loc 18 45 43
 3405 0094 37EE677A 		vsub.f32	s14, s14, s15
 3406              		.loc 18 45 85
 3407 0098 D7ED147A 		vldr.32	s15, [r7, #80]
 3408              		.loc 18 45 15
 3409 009c 77EE277A 		vadd.f32	s15, s14, s15
 3410 00a0 C7ED097A 		vstr.32	s15, [r7, #36]
  46:twoorderfilter.h ****     
  47:twoorderfilter.h ****         float b0 = stAnaCoeff.num[0] * k2 + stAnaCoeff.num[1] * k + stAnaCoeff.num[2];
 3411              		.loc 18 47 36
 3412 00a4 97ED157A 		vldr.32	s14, [r7, #84]
 3413              		.loc 18 47 38
 3414 00a8 D7ED0C7A 		vldr.32	s15, [r7, #48]
 3415 00ac 27EE277A 		vmul.f32	s14, s14, s15
 3416              		.loc 18 47 61
 3417 00b0 D7ED166A 		vldr.32	s13, [r7, #88]
 3418              		.loc 18 47 63
 3419 00b4 D7ED0D7A 		vldr.32	s15, [r7, #52]
 3420 00b8 66EEA77A 		vmul.f32	s15, s13, s15
 3421              		.loc 18 47 43
 3422 00bc 37EE277A 		vadd.f32	s14, s14, s15
 3423              		.loc 18 47 85
 3424 00c0 D7ED177A 		vldr.32	s15, [r7, #92]
 3425              		.loc 18 47 15
 3426 00c4 77EE277A 		vadd.f32	s15, s14, s15
 3427 00c8 C7ED087A 		vstr.32	s15, [r7, #32]
  48:twoorderfilter.h ****         float b1 = -2.0f * stAnaCoeff.num[0] * k2 + 2.0f * stAnaCoeff.num[2];
 3428              		.loc 18 48 44
 3429 00cc D7ED157A 		vldr.32	s15, [r7, #84]
 3430              		.loc 18 48 26
 3431 00d0 B8EE007A 		vmov.f32	s14, #-2.0e+0
 3432 00d4 27EE877A 		vmul.f32	s14, s15, s14
 3433              		.loc 18 48 46
 3434 00d8 D7ED0C7A 		vldr.32	s15, [r7, #48]
 3435 00dc 27EE277A 		vmul.f32	s14, s14, s15
 3436              		.loc 18 48 76
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 97


 3437 00e0 D7ED177A 		vldr.32	s15, [r7, #92]
 3438              		.loc 18 48 58
 3439 00e4 77EEA77A 		vadd.f32	s15, s15, s15
 3440              		.loc 18 48 15
 3441 00e8 77EE277A 		vadd.f32	s15, s14, s15
 3442 00ec C7ED077A 		vstr.32	s15, [r7, #28]
  49:twoorderfilter.h ****         float b2 = stAnaCoeff.num[0] * k2 - stAnaCoeff.num[1] * k + stAnaCoeff.num[2];
 3443              		.loc 18 49 36
 3444 00f0 97ED157A 		vldr.32	s14, [r7, #84]
 3445              		.loc 18 49 38
 3446 00f4 D7ED0C7A 		vldr.32	s15, [r7, #48]
 3447 00f8 27EE277A 		vmul.f32	s14, s14, s15
 3448              		.loc 18 49 61
 3449 00fc D7ED166A 		vldr.32	s13, [r7, #88]
 3450              		.loc 18 49 63
 3451 0100 D7ED0D7A 		vldr.32	s15, [r7, #52]
 3452 0104 66EEA77A 		vmul.f32	s15, s13, s15
 3453              		.loc 18 49 43
 3454 0108 37EE677A 		vsub.f32	s14, s14, s15
 3455              		.loc 18 49 85
 3456 010c D7ED177A 		vldr.32	s15, [r7, #92]
 3457              		.loc 18 49 15
 3458 0110 77EE277A 		vadd.f32	s15, s14, s15
 3459 0114 C7ED067A 		vstr.32	s15, [r7, #24]
  50:twoorderfilter.h ****     
  51:twoorderfilter.h ****         // Normalize in-place (a0 becomes 1)
  52:twoorderfilter.h ****         float inv_a0 = 1.0f / a0;
 3460              		.loc 18 52 15
 3461 0118 F7EE006A 		vmov.f32	s13, #1.0e+0
 3462 011c 97ED0B7A 		vldr.32	s14, [r7, #44]
 3463 0120 C6EE877A 		vdiv.f32	s15, s13, s14
 3464 0124 C7ED057A 		vstr.32	s15, [r7, #20]
  53:twoorderfilter.h ****     
  54:twoorderfilter.h ****         stDigCoeff_.num[0] = b0 * inv_a0;
 3465              		.loc 18 54 33
 3466 0128 97ED087A 		vldr.32	s14, [r7, #32]
 3467 012c D7ED057A 		vldr.32	s15, [r7, #20]
 3468 0130 67EE277A 		vmul.f32	s15, s14, s15
 3469              		.loc 18 54 28
 3470 0134 BB68     		ldr	r3, [r7, #8]
 3471 0136 C3ED167A 		vstr.32	s15, [r3, #88]
  55:twoorderfilter.h ****         stDigCoeff_.num[1] = b1 * inv_a0;
 3472              		.loc 18 55 33
 3473 013a 97ED077A 		vldr.32	s14, [r7, #28]
 3474 013e D7ED057A 		vldr.32	s15, [r7, #20]
 3475 0142 67EE277A 		vmul.f32	s15, s14, s15
 3476              		.loc 18 55 28
 3477 0146 BB68     		ldr	r3, [r7, #8]
 3478 0148 C3ED177A 		vstr.32	s15, [r3, #92]
  56:twoorderfilter.h ****         stDigCoeff_.num[2] = b2 * inv_a0;
 3479              		.loc 18 56 33
 3480 014c 97ED067A 		vldr.32	s14, [r7, #24]
 3481 0150 D7ED057A 		vldr.32	s15, [r7, #20]
 3482 0154 67EE277A 		vmul.f32	s15, s14, s15
 3483              		.loc 18 56 28
 3484 0158 BB68     		ldr	r3, [r7, #8]
 3485 015a C3ED187A 		vstr.32	s15, [r3, #96]
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 98


  57:twoorderfilter.h ****     
  58:twoorderfilter.h ****         stDigCoeff_.den[0] = 1.0f;
 3486              		.loc 18 58 28
 3487 015e BB68     		ldr	r3, [r7, #8]
 3488 0160 4FF07E52 		mov	r2, #1065353216
 3489 0164 DA64     		str	r2, [r3, #76]	@ float
  59:twoorderfilter.h ****         stDigCoeff_.den[1] = a1 * inv_a0;
 3490              		.loc 18 59 33
 3491 0166 97ED0A7A 		vldr.32	s14, [r7, #40]
 3492 016a D7ED057A 		vldr.32	s15, [r7, #20]
 3493 016e 67EE277A 		vmul.f32	s15, s14, s15
 3494              		.loc 18 59 28
 3495 0172 BB68     		ldr	r3, [r7, #8]
 3496 0174 C3ED147A 		vstr.32	s15, [r3, #80]
  60:twoorderfilter.h ****         stDigCoeff_.den[2] = a2 * inv_a0;
 3497              		.loc 18 60 33
 3498 0178 97ED097A 		vldr.32	s14, [r7, #36]
 3499 017c D7ED057A 		vldr.32	s15, [r7, #20]
 3500 0180 67EE277A 		vmul.f32	s15, s14, s15
 3501              		.loc 18 60 28
 3502 0184 BB68     		ldr	r3, [r7, #8]
 3503 0186 C3ED157A 		vstr.32	s15, [r3, #84]
  61:twoorderfilter.h **** 
  62:twoorderfilter.h ****         return stDigCoeff_;
 3504              		.loc 18 62 16
 3505 018a FA68     		ldr	r2, [r7, #12]
 3506 018c BB68     		ldr	r3, [r7, #8]
 3507 018e 1546     		mov	r5, r2
 3508 0190 03F14C04 		add	r4, r3, #76
 3509 0194 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3510 0196 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3511 0198 94E80300 		ldm	r4, {r0, r1}
 3512 019c 85E80300 		stm	r5, {r0, r1}
  63:twoorderfilter.h ****     };
 3513              		.loc 18 63 5
 3514 01a0 F868     		ldr	r0, [r7, #12]
 3515 01a2 3C37     		adds	r7, r7, #60
 3516              		.cfi_def_cfa_offset 20
 3517 01a4 BD46     		mov	sp, r7
 3518              		.cfi_def_cfa_register 13
 3519              		@ sp needed
 3520 01a6 B0BC     		pop	{r4, r5, r7}
 3521              		.cfi_restore 7
 3522              		.cfi_restore 5
 3523              		.cfi_restore 4
 3524              		.cfi_def_cfa_offset 8
 3525 01a8 02B0     		add	sp, sp, #8
 3526              		.cfi_def_cfa_offset 0
 3527 01aa 7047     		bx	lr
 3528              		.cfi_endproc
 3529              	.LFE4690:
 3531              		.section	.text._ZN21clasSecondOrderFilter4InitEf,"axG",%progbits,_ZN21clasSecondOrderFilter4InitEf
 3532              		.align	1
 3533              		.weak	_ZN21clasSecondOrderFilter4InitEf
 3534              		.syntax unified
 3535              		.thumb
 3536              		.thumb_func
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 99


 3537              		.fpu fpv5-d16
 3539              	_ZN21clasSecondOrderFilter4InitEf:
 3540              	.LFB4691:
  64:twoorderfilter.h **** 
  65:twoorderfilter.h **** public:
  66:twoorderfilter.h **** 
  67:twoorderfilter.h ****     //Constructor
  68:twoorderfilter.h ****     // clBellCurveEQ_(){};
  69:twoorderfilter.h **** 
  70:twoorderfilter.h ****     //Initialise the class. 
  71:twoorderfilter.h ****     void Init(float sample_rate){
 3541              		.loc 18 71 10
 3542              		.cfi_startproc
 3543              		@ args = 0, pretend = 0, frame = 8
 3544              		@ frame_needed = 1, uses_anonymous_args = 0
 3545              		@ link register save eliminated.
 3546 0000 80B4     		push	{r7}
 3547              		.cfi_def_cfa_offset 4
 3548              		.cfi_offset 7, -4
 3549 0002 83B0     		sub	sp, sp, #12
 3550              		.cfi_def_cfa_offset 16
 3551 0004 00AF     		add	r7, sp, #0
 3552              		.cfi_def_cfa_register 7
 3553 0006 7860     		str	r0, [r7, #4]
 3554 0008 87ED000A 		vstr.32	s0, [r7]
  72:twoorderfilter.h ****         Fs_ = sample_rate;
 3555              		.loc 18 72 13
 3556 000c 7B68     		ldr	r3, [r7, #4]
 3557 000e 3A68     		ldr	r2, [r7]	@ float
 3558 0010 1A60     		str	r2, [r3]	@ float
  73:twoorderfilter.h ****         Q_ = 0.707;
 3559              		.loc 18 73 12
 3560 0012 7B68     		ldr	r3, [r7, #4]
 3561 0014 0C4A     		ldr	r2, .L175
 3562 0016 5A60     		str	r2, [r3, #4]	@ float
  74:twoorderfilter.h ****         fcut_ = 500;
 3563              		.loc 18 74 15
 3564 0018 7B68     		ldr	r3, [r7, #4]
 3565 001a 0C4A     		ldr	r2, .L175+4
 3566 001c 9A60     		str	r2, [r3, #8]	@ float
  75:twoorderfilter.h ****         boost_ = 1;
 3567              		.loc 18 75 16
 3568 001e 7B68     		ldr	r3, [r7, #4]
 3569 0020 4FF07E52 		mov	r2, #1065353216
 3570 0024 DA60     		str	r2, [r3, #12]	@ float
  76:twoorderfilter.h ****         T_ = 1.0/Fs_;                           //Sampling period
 3571              		.loc 18 76 18
 3572 0026 7B68     		ldr	r3, [r7, #4]
 3573 0028 93ED007A 		vldr.32	s14, [r3]
 3574              		.loc 18 76 17
 3575 002c F7EE006A 		vmov.f32	s13, #1.0e+0
 3576 0030 C6EE877A 		vdiv.f32	s15, s13, s14
 3577              		.loc 18 76 12
 3578 0034 7B68     		ldr	r3, [r7, #4]
 3579 0036 C3ED047A 		vstr.32	s15, [r3, #16]
  77:twoorderfilter.h ****     }
 3580              		.loc 18 77 5
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 100


 3581 003a 00BF     		nop
 3582 003c 0C37     		adds	r7, r7, #12
 3583              		.cfi_def_cfa_offset 4
 3584 003e BD46     		mov	sp, r7
 3585              		.cfi_def_cfa_register 13
 3586              		@ sp needed
 3587 0040 5DF8047B 		ldr	r7, [sp], #4
 3588              		.cfi_restore 7
 3589              		.cfi_def_cfa_offset 0
 3590 0044 7047     		bx	lr
 3591              	.L176:
 3592 0046 00BF     		.align	2
 3593              	.L175:
 3594 0048 F4FD343F 		.word	1060437492
 3595 004c 0000FA43 		.word	1140457472
 3596              		.cfi_endproc
 3597              	.LFE4691:
 3599              		.section	.text._ZN21clasSecondOrderFilter6UpdateEv,"axG",%progbits,_ZN21clasSecondOrderFilter6Upda
 3600              		.align	1
 3601              		.weak	_ZN21clasSecondOrderFilter6UpdateEv
 3602              		.syntax unified
 3603              		.thumb
 3604              		.thumb_func
 3605              		.fpu fpv5-d16
 3607              	_ZN21clasSecondOrderFilter6UpdateEv:
 3608              	.LFB4692:
  78:twoorderfilter.h **** 
  79:twoorderfilter.h ****     // //Bell curve filter derived in MATLAB. Converts the ananlogue transfer function coefficients
  80:twoorderfilter.h ****     // void mBellCurveFilter(){
  81:twoorderfilter.h ****     //     float Wo = 2*pi_*fcut_;                       //Calculate the angular cut-off freq_uency
  82:twoorderfilter.h ****     //     float T = 1.0/Fs_;                           //Sampling period
  83:twoorderfilter.h ****     //     float Wop = 2.0 * Fs_ * tan(Wo*T/2.0);       //Denormalised prewarp formula for continuo
  84:twoorderfilter.h ****     //     float Gain = pow(10, (boost_/20));           //Gain calculation from boost_
  85:twoorderfilter.h ****     //     float k = 3*((Gain - 1) / (Gain +1));       //Gain adjustment 
  86:twoorderfilter.h **** 
  87:twoorderfilter.h ****     //     float flWopPowTwo = pow(Wop, 2);
  88:twoorderfilter.h **** 
  89:twoorderfilter.h ****     //     //Analogue transfer function 
  90:twoorderfilter.h ****     //     stAanCoeff_.num[0] = 1;
  91:twoorderfilter.h ****     //     stAanCoeff_.num[1] = (3+k)*(Wop/Q_);
  92:twoorderfilter.h ****     //     stAanCoeff_.num[2] = flWopPowTwo;
  93:twoorderfilter.h **** 
  94:twoorderfilter.h ****     //     stAanCoeff_.den[0] = 1;
  95:twoorderfilter.h ****     //     stAanCoeff_.den[1] = (3-k)*(Wop/Q_);
  96:twoorderfilter.h ****     //     stAanCoeff_.den[2] = flWopPowTwo;
  97:twoorderfilter.h **** 
  98:twoorderfilter.h ****     //     stDigCoeff_ = mBilinear(stAanCoeff_, Fs_);      //Convert in mBilinear function. (BZT)
  99:twoorderfilter.h ****     // };
 100:twoorderfilter.h **** 
 101:twoorderfilter.h ****     void Update(){
 3609              		.loc 18 101 10
 3610              		.cfi_startproc
 3611              		@ args = 0, pretend = 0, frame = 48
 3612              		@ frame_needed = 1, uses_anonymous_args = 0
 3613 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3614              		.cfi_def_cfa_offset 20
 3615              		.cfi_offset 4, -20
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 101


 3616              		.cfi_offset 5, -16
 3617              		.cfi_offset 6, -12
 3618              		.cfi_offset 7, -8
 3619              		.cfi_offset 14, -4
 3620 0002 2DED028B 		vpush.64	{d8}
 3621              		.cfi_def_cfa_offset 28
 3622              		.cfi_offset 80, -28
 3623              		.cfi_offset 81, -24
 3624 0006 91B0     		sub	sp, sp, #68
 3625              		.cfi_def_cfa_offset 96
 3626 0008 04AF     		add	r7, sp, #16
 3627              		.cfi_def_cfa 7, 80
 3628 000a F861     		str	r0, [r7, #28]
 102:twoorderfilter.h ****         float Wo = 2*pi_*fcut_;                       //Calculate the angular cut-off freq_uency
 3629              		.loc 18 102 22
 3630 000c FB69     		ldr	r3, [r7, #28]
 3631 000e D3ED057A 		vldr.32	s15, [r3, #20]
 3632              		.loc 18 102 21
 3633 0012 37EEA77A 		vadd.f32	s14, s15, s15
 3634              		.loc 18 102 26
 3635 0016 FB69     		ldr	r3, [r7, #28]
 3636 0018 D3ED027A 		vldr.32	s15, [r3, #8]
 3637              		.loc 18 102 15
 3638 001c 67EE277A 		vmul.f32	s15, s14, s15
 3639 0020 C7ED0B7A 		vstr.32	s15, [r7, #44]
 103:twoorderfilter.h ****         float Wop = 2.0 * Fs_ * tan(Wo*T_/2.0);       //Denormalised prewarp formula for continuous
 3640              		.loc 18 103 27
 3641 0024 FB69     		ldr	r3, [r7, #28]
 3642 0026 D3ED007A 		vldr.32	s15, [r3]
 3643 002a B7EEE77A 		vcvt.f64.f32	d7, s15
 3644              		.loc 18 103 25
 3645 002e 37EE078B 		vadd.f64	d8, d7, d7
 3646              		.loc 18 103 40
 3647 0032 FB69     		ldr	r3, [r7, #28]
 3648 0034 93ED047A 		vldr.32	s14, [r3, #16]
 3649              		.loc 18 103 39
 3650 0038 D7ED0B7A 		vldr.32	s15, [r7, #44]
 3651 003c 67EE277A 		vmul.f32	s15, s14, s15
 3652 0040 B7EEE77A 		vcvt.f64.f32	d7, s15
 3653              		.loc 18 103 36
 3654 0044 B0EE005B 		vmov.f64	d5, #2.0e+0
 3655 0048 87EE056B 		vdiv.f64	d6, d7, d5
 3656 004c B0EE460B 		vmov.f64	d0, d6
 3657 0050 FFF7FEFF 		bl	tan
 3658 0054 B0EE407B 		vmov.f64	d7, d0
 3659              		.loc 18 103 31
 3660 0058 28EE077B 		vmul.f64	d7, d8, d7
 3661              		.loc 18 103 15
 3662 005c F7EEC77B 		vcvt.f32.f64	s15, d7
 3663 0060 C7ED0A7A 		vstr.32	s15, [r7, #40]
 104:twoorderfilter.h ****         float flWopPowTwo = pow(Wop, 2);            //Optimisation. 
 3664              		.loc 18 104 32
 3665 0064 0220     		movs	r0, #2
 3666 0066 97ED0A0A 		vldr.32	s0, [r7, #40]
 3667 006a FFF7FEFF 		bl	_ZSt3powIfiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6
 3668 006e B0EE407B 		vmov.f64	d7, d0
 3669              		.loc 18 104 39
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 102


 3670 0072 F7EEC77B 		vcvt.f32.f64	s15, d7
 3671 0076 C7ED097A 		vstr.32	s15, [r7, #36]
 105:twoorderfilter.h ****         //Analogue transfer function 
 106:twoorderfilter.h ****         stAanCoeff_.num[0] = 0;
 3672              		.loc 18 106 28
 3673 007a FB69     		ldr	r3, [r7, #28]
 3674 007c 4FF00002 		mov	r2, #0
 3675 0080 1A64     		str	r2, [r3, #64]	@ float
 107:twoorderfilter.h ****         stAanCoeff_.num[1] = 0;
 3676              		.loc 18 107 28
 3677 0082 FB69     		ldr	r3, [r7, #28]
 3678 0084 4FF00002 		mov	r2, #0
 3679 0088 5A64     		str	r2, [r3, #68]	@ float
 108:twoorderfilter.h ****         stAanCoeff_.num[2] = flWopPowTwo;
 3680              		.loc 18 108 28
 3681 008a FB69     		ldr	r3, [r7, #28]
 3682 008c 7A6A     		ldr	r2, [r7, #36]	@ float
 3683 008e 9A64     		str	r2, [r3, #72]	@ float
 109:twoorderfilter.h ****         stAanCoeff_.den[0] = 1;
 3684              		.loc 18 109 28
 3685 0090 FB69     		ldr	r3, [r7, #28]
 3686 0092 4FF07E52 		mov	r2, #1065353216
 3687 0096 5A63     		str	r2, [r3, #52]	@ float
 110:twoorderfilter.h ****         stAanCoeff_.den[1] = (Wop/Q_);
 3688              		.loc 18 110 35
 3689 0098 FB69     		ldr	r3, [r7, #28]
 3690 009a 93ED017A 		vldr.32	s14, [r3, #4]
 3691              		.loc 18 110 34
 3692 009e D7ED0A6A 		vldr.32	s13, [r7, #40]
 3693 00a2 C6EE877A 		vdiv.f32	s15, s13, s14
 3694              		.loc 18 110 28
 3695 00a6 FB69     		ldr	r3, [r7, #28]
 3696 00a8 C3ED0E7A 		vstr.32	s15, [r3, #56]
 111:twoorderfilter.h ****         stAanCoeff_.den[2] = flWopPowTwo;
 3697              		.loc 18 111 28
 3698 00ac FB69     		ldr	r3, [r7, #28]
 3699 00ae 7A6A     		ldr	r2, [r7, #36]	@ float
 3700 00b0 DA63     		str	r2, [r3, #60]	@ float
 112:twoorderfilter.h **** 
 113:twoorderfilter.h ****         stDigCoeff_ = mBilinear(stAanCoeff_, Fs_);      //Convert in mBilinear function. (BZT)
 3701              		.loc 18 113 49
 3702 00b2 FB69     		ldr	r3, [r7, #28]
 3703 00b4 D3ED007A 		vldr.32	s15, [r3]
 3704 00b8 FE69     		ldr	r6, [r7, #28]
 3705 00ba BC46     		mov	ip, r7
 3706 00bc FC69     		ldr	r4, [r7, #28]
 3707 00be 6D46     		mov	r5, sp
 3708 00c0 04F13C03 		add	r3, r4, #60
 3709 00c4 0FCB     		ldm	r3, {r0, r1, r2, r3}
 3710 00c6 85E80F00 		stm	r5, {r0, r1, r2, r3}
 3711 00ca 04F13403 		add	r3, r4, #52
 3712 00ce 0CCB     		ldm	r3, {r2, r3}
 3713 00d0 B0EE670A 		vmov.f32	s0, s15
 3714 00d4 F969     		ldr	r1, [r7, #28]
 3715 00d6 6046     		mov	r0, ip
 3716 00d8 FFF7FEFF 		bl	_ZN21clasSecondOrderFilter9mBilinearE12COEFFICIENTSf
 3717 00dc 06F14C04 		add	r4, r6, #76
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 103


 3718 00e0 3D46     		mov	r5, r7
 3719 00e2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3720 00e4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3721 00e6 95E80300 		ldm	r5, {r0, r1}
 3722 00ea 84E80300 		stm	r4, {r0, r1}
 114:twoorderfilter.h ****     };
 3723              		.loc 18 114 5
 3724 00ee 00BF     		nop
 3725 00f0 3437     		adds	r7, r7, #52
 3726              		.cfi_def_cfa_offset 28
 3727 00f2 BD46     		mov	sp, r7
 3728              		.cfi_def_cfa_register 13
 3729              		@ sp needed
 3730 00f4 BDEC028B 		vldm	sp!, {d8}
 3731              		.cfi_restore 80
 3732              		.cfi_restore 81
 3733              		.cfi_def_cfa_offset 20
 3734 00f8 F0BD     		pop	{r4, r5, r6, r7, pc}
 3735              		.cfi_endproc
 3736              	.LFE4692:
 3738              		.section	.text._ZN21clasSecondOrderFilter7ProcessEf,"axG",%progbits,_ZN21clasSecondOrderFilter7Pro
 3739              		.align	1
 3740              		.weak	_ZN21clasSecondOrderFilter7ProcessEf
 3741              		.syntax unified
 3742              		.thumb
 3743              		.thumb_func
 3744              		.fpu fpv5-d16
 3746              	_ZN21clasSecondOrderFilter7ProcessEf:
 3747              	.LFB4693:
 115:twoorderfilter.h ****         
 116:twoorderfilter.h ****     //Difference eq_uation function. Processes the sample using the filters coefficients. 
 117:twoorderfilter.h ****     float Process(float input){
 3748              		.loc 18 117 11
 3749              		.cfi_startproc
 3750              		@ args = 0, pretend = 0, frame = 16
 3751              		@ frame_needed = 1, uses_anonymous_args = 0
 3752              		@ link register save eliminated.
 3753 0000 80B4     		push	{r7}
 3754              		.cfi_def_cfa_offset 4
 3755              		.cfi_offset 7, -4
 3756 0002 85B0     		sub	sp, sp, #20
 3757              		.cfi_def_cfa_offset 24
 3758 0004 00AF     		add	r7, sp, #0
 3759              		.cfi_def_cfa_register 7
 3760 0006 7860     		str	r0, [r7, #4]
 3761 0008 87ED000A 		vstr.32	s0, [r7]
 118:twoorderfilter.h ****         //Insert the input into the first element. 
 119:twoorderfilter.h ****         aflX_[0] = input;
 3762              		.loc 18 119 18
 3763 000c 7B68     		ldr	r3, [r7, #4]
 3764 000e 3A68     		ldr	r2, [r7]	@ float
 3765 0010 9A61     		str	r2, [r3, #24]	@ float
 120:twoorderfilter.h ****         //Difference eq_uation updating array of float Y. 
 121:twoorderfilter.h ****         aflY_[0] = stDigCoeff_.num[0] * aflX_[0] + stDigCoeff_.num[1] * aflX_[1] + 
 3766              		.loc 18 121 37
 3767 0012 7B68     		ldr	r3, [r7, #4]
 3768 0014 93ED167A 		vldr.32	s14, [r3, #88]
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 104


 3769              		.loc 18 121 48
 3770 0018 7B68     		ldr	r3, [r7, #4]
 3771 001a D3ED067A 		vldr.32	s15, [r3, #24]
 3772              		.loc 18 121 39
 3773 001e 27EE277A 		vmul.f32	s14, s14, s15
 3774              		.loc 18 121 69
 3775 0022 7B68     		ldr	r3, [r7, #4]
 3776 0024 D3ED176A 		vldr.32	s13, [r3, #92]
 3777              		.loc 18 121 80
 3778 0028 7B68     		ldr	r3, [r7, #4]
 3779 002a D3ED077A 		vldr.32	s15, [r3, #28]
 3780              		.loc 18 121 71
 3781 002e 66EEA77A 		vmul.f32	s15, s13, s15
 3782              		.loc 18 121 50
 3783 0032 37EE277A 		vadd.f32	s14, s14, s15
 122:twoorderfilter.h ****             stDigCoeff_.num[2] * aflX_[2] - stDigCoeff_.den[1] * aflY_[1] - stDigCoeff_.den[2] * af
 3784              		.loc 18 122 30
 3785 0036 7B68     		ldr	r3, [r7, #4]
 3786 0038 D3ED186A 		vldr.32	s13, [r3, #96]
 3787              		.loc 18 122 41
 3788 003c 7B68     		ldr	r3, [r7, #4]
 3789 003e D3ED087A 		vldr.32	s15, [r3, #32]
 3790              		.loc 18 122 32
 3791 0042 66EEA77A 		vmul.f32	s15, s13, s15
 121:twoorderfilter.h ****             stDigCoeff_.num[2] * aflX_[2] - stDigCoeff_.den[1] * aflY_[1] - stDigCoeff_.den[2] * af
 3792              		.loc 18 121 82
 3793 0046 37EE277A 		vadd.f32	s14, s14, s15
 3794              		.loc 18 122 62
 3795 004a 7B68     		ldr	r3, [r7, #4]
 3796 004c D3ED146A 		vldr.32	s13, [r3, #80]
 3797              		.loc 18 122 73
 3798 0050 7B68     		ldr	r3, [r7, #4]
 3799 0052 D3ED0A7A 		vldr.32	s15, [r3, #40]
 3800              		.loc 18 122 64
 3801 0056 66EEA77A 		vmul.f32	s15, s13, s15
 3802              		.loc 18 122 43
 3803 005a 37EE677A 		vsub.f32	s14, s14, s15
 3804              		.loc 18 122 94
 3805 005e 7B68     		ldr	r3, [r7, #4]
 3806 0060 D3ED156A 		vldr.32	s13, [r3, #84]
 3807              		.loc 18 122 105
 3808 0064 7B68     		ldr	r3, [r7, #4]
 3809 0066 D3ED0B7A 		vldr.32	s15, [r3, #44]
 3810              		.loc 18 122 96
 3811 006a 66EEA77A 		vmul.f32	s15, s13, s15
 3812              		.loc 18 122 75
 3813 006e 77EE677A 		vsub.f32	s15, s14, s15
 121:twoorderfilter.h ****             stDigCoeff_.num[2] * aflX_[2] - stDigCoeff_.den[1] * aflY_[1] - stDigCoeff_.den[2] * af
 3814              		.loc 18 121 18
 3815 0072 7B68     		ldr	r3, [r7, #4]
 3816 0074 C3ED097A 		vstr.32	s15, [r3, #36]
 123:twoorderfilter.h ****         //Store the output for return.
 124:twoorderfilter.h ****         float temp = aflY_[0];
 3817              		.loc 18 124 15
 3818 0078 7B68     		ldr	r3, [r7, #4]
 3819 007a 5B6A     		ldr	r3, [r3, #36]	@ float
 3820 007c BB60     		str	r3, [r7, #8]	@ float
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 105


 3821              	.LBB16:
 125:twoorderfilter.h ****         //Move the recorded values across by 1 time delay
 126:twoorderfilter.h ****         for(int n = 2; n >=1; n--){ //Make sure to move y(n-1) into y(n-2) first
 3822              		.loc 18 126 17
 3823 007e 0223     		movs	r3, #2
 3824 0080 FB60     		str	r3, [r7, #12]
 3825              	.L180:
 3826              		.loc 18 126 26 discriminator 3
 3827 0082 FB68     		ldr	r3, [r7, #12]
 3828 0084 002B     		cmp	r3, #0
 3829 0086 1FDD     		ble	.L179
 127:twoorderfilter.h ****             aflX_[n] = aflX_[n-1];
 3830              		.loc 18 127 31 discriminator 2
 3831 0088 FB68     		ldr	r3, [r7, #12]
 3832 008a 013B     		subs	r3, r3, #1
 3833              		.loc 18 127 33 discriminator 2
 3834 008c 7A68     		ldr	r2, [r7, #4]
 3835 008e 0633     		adds	r3, r3, #6
 3836 0090 9B00     		lsls	r3, r3, #2
 3837 0092 1344     		add	r3, r3, r2
 3838 0094 1A68     		ldr	r2, [r3]	@ float
 3839              		.loc 18 127 22 discriminator 2
 3840 0096 7968     		ldr	r1, [r7, #4]
 3841 0098 FB68     		ldr	r3, [r7, #12]
 3842 009a 0633     		adds	r3, r3, #6
 3843 009c 9B00     		lsls	r3, r3, #2
 3844 009e 0B44     		add	r3, r3, r1
 3845 00a0 1A60     		str	r2, [r3]	@ float
 128:twoorderfilter.h ****             aflY_[n] = aflY_[n-1];
 3846              		.loc 18 128 31 discriminator 2
 3847 00a2 FB68     		ldr	r3, [r7, #12]
 3848 00a4 013B     		subs	r3, r3, #1
 3849              		.loc 18 128 33 discriminator 2
 3850 00a6 7A68     		ldr	r2, [r7, #4]
 3851 00a8 0833     		adds	r3, r3, #8
 3852 00aa 9B00     		lsls	r3, r3, #2
 3853 00ac 1344     		add	r3, r3, r2
 3854 00ae 0433     		adds	r3, r3, #4
 3855 00b0 1A68     		ldr	r2, [r3]	@ float
 3856              		.loc 18 128 22 discriminator 2
 3857 00b2 7968     		ldr	r1, [r7, #4]
 3858 00b4 FB68     		ldr	r3, [r7, #12]
 3859 00b6 0833     		adds	r3, r3, #8
 3860 00b8 9B00     		lsls	r3, r3, #2
 3861 00ba 0B44     		add	r3, r3, r1
 3862 00bc 0433     		adds	r3, r3, #4
 3863 00be 1A60     		str	r2, [r3]	@ float
 126:twoorderfilter.h ****             aflX_[n] = aflX_[n-1];
 3864              		.loc 18 126 9 discriminator 2
 3865 00c0 FB68     		ldr	r3, [r7, #12]
 3866 00c2 013B     		subs	r3, r3, #1
 3867 00c4 FB60     		str	r3, [r7, #12]
 3868 00c6 DCE7     		b	.L180
 3869              	.L179:
 3870              	.LBE16:
 129:twoorderfilter.h ****         }
 130:twoorderfilter.h ****         return temp;
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 106


 3871              		.loc 18 130 16
 3872 00c8 BB68     		ldr	r3, [r7, #8]	@ float
 3873 00ca 07EE903A 		vmov	s15, r3
 131:twoorderfilter.h ****     };
 3874              		.loc 18 131 5
 3875 00ce B0EE670A 		vmov.f32	s0, s15
 3876 00d2 1437     		adds	r7, r7, #20
 3877              		.cfi_def_cfa_offset 4
 3878 00d4 BD46     		mov	sp, r7
 3879              		.cfi_def_cfa_register 13
 3880              		@ sp needed
 3881 00d6 5DF8047B 		ldr	r7, [sp], #4
 3882              		.cfi_restore 7
 3883              		.cfi_def_cfa_offset 0
 3884 00da 7047     		bx	lr
 3885              		.cfi_endproc
 3886              	.LFE4693:
 3888              		.section	.text._ZN21clasSecondOrderFilter17setFreqNormalisedEf,"axG",%progbits,_ZN21clasSecondOrde
 3889              		.align	1
 3890              		.weak	_ZN21clasSecondOrderFilter17setFreqNormalisedEf
 3891              		.syntax unified
 3892              		.thumb
 3893              		.thumb_func
 3894              		.fpu fpv5-d16
 3896              	_ZN21clasSecondOrderFilter17setFreqNormalisedEf:
 3897              	.LFB4695:
 132:twoorderfilter.h ****     
 133:twoorderfilter.h ****     //Get/Set methods for the class attributes. 
 134:twoorderfilter.h ****     float getFcut_(){
 135:twoorderfilter.h ****         return fcut_;
 136:twoorderfilter.h ****     };
 137:twoorderfilter.h **** 
 138:twoorderfilter.h ****     
 139:twoorderfilter.h ****     void setFreqNormalised(float normFreq) {
 3898              		.loc 18 139 10
 3899              		.cfi_startproc
 3900              		@ args = 0, pretend = 0, frame = 8
 3901              		@ frame_needed = 1, uses_anonymous_args = 0
 3902              		@ link register save eliminated.
 3903 0000 80B4     		push	{r7}
 3904              		.cfi_def_cfa_offset 4
 3905              		.cfi_offset 7, -4
 3906 0002 83B0     		sub	sp, sp, #12
 3907              		.cfi_def_cfa_offset 16
 3908 0004 00AF     		add	r7, sp, #0
 3909              		.cfi_def_cfa_register 7
 3910 0006 7860     		str	r0, [r7, #4]
 3911 0008 87ED000A 		vstr.32	s0, [r7]
 140:twoorderfilter.h **** 
 141:twoorderfilter.h ****         // Clamp normalized frequency just below Nyquist
 142:twoorderfilter.h ****         // normFreq = normFreq < 0.497f ? normFreq : 0.497f; //Carrying out conditioning before ent
 143:twoorderfilter.h **** 
 144:twoorderfilter.h ****         //Un-normalise. 
 145:twoorderfilter.h ****         fcut_ = normFreq * MAX_FREQ;
 3912              		.loc 18 145 28
 3913 000c 7B68     		ldr	r3, [r7, #4]
 3914 000e 1B6B     		ldr	r3, [r3, #48]
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 107


 3915              		.loc 18 145 26
 3916 0010 07EE903A 		vmov	s15, r3	@ int
 3917 0014 B8EEE77A 		vcvt.f32.s32	s14, s15
 3918 0018 D7ED007A 		vldr.32	s15, [r7]
 3919 001c 67EE277A 		vmul.f32	s15, s14, s15
 3920              		.loc 18 145 15
 3921 0020 7B68     		ldr	r3, [r7, #4]
 3922 0022 C3ED027A 		vstr.32	s15, [r3, #8]
 146:twoorderfilter.h ****     };
 3923              		.loc 18 146 5
 3924 0026 00BF     		nop
 3925 0028 0C37     		adds	r7, r7, #12
 3926              		.cfi_def_cfa_offset 4
 3927 002a BD46     		mov	sp, r7
 3928              		.cfi_def_cfa_register 13
 3929              		@ sp needed
 3930 002c 5DF8047B 		ldr	r7, [sp], #4
 3931              		.cfi_restore 7
 3932              		.cfi_def_cfa_offset 0
 3933 0030 7047     		bx	lr
 3934              		.cfi_endproc
 3935              	.LFE4695:
 3937              		.section	.text._ZN21clasSecondOrderFilter7setFreqEf,"axG",%progbits,_ZN21clasSecondOrderFilter7set
 3938              		.align	1
 3939              		.weak	_ZN21clasSecondOrderFilter7setFreqEf
 3940              		.syntax unified
 3941              		.thumb
 3942              		.thumb_func
 3943              		.fpu fpv5-d16
 3945              	_ZN21clasSecondOrderFilter7setFreqEf:
 3946              	.LFB4696:
 147:twoorderfilter.h **** 
 148:twoorderfilter.h ****     void setFreq(float frequency){
 3947              		.loc 18 148 10
 3948              		.cfi_startproc
 3949              		@ args = 0, pretend = 0, frame = 8
 3950              		@ frame_needed = 1, uses_anonymous_args = 0
 3951 0000 80B5     		push	{r7, lr}
 3952              		.cfi_def_cfa_offset 8
 3953              		.cfi_offset 7, -8
 3954              		.cfi_offset 14, -4
 3955 0002 82B0     		sub	sp, sp, #8
 3956              		.cfi_def_cfa_offset 16
 3957 0004 00AF     		add	r7, sp, #0
 3958              		.cfi_def_cfa_register 7
 3959 0006 7860     		str	r0, [r7, #4]
 3960 0008 87ED000A 		vstr.32	s0, [r7]
 149:twoorderfilter.h ****         fcut_ = frequency;
 3961              		.loc 18 149 15
 3962 000c 7B68     		ldr	r3, [r7, #4]
 3963 000e 3A68     		ldr	r2, [r7]	@ float
 3964 0010 9A60     		str	r2, [r3, #8]	@ float
 150:twoorderfilter.h ****         Update();
 3965              		.loc 18 150 15
 3966 0012 7868     		ldr	r0, [r7, #4]
 3967 0014 FFF7FEFF 		bl	_ZN21clasSecondOrderFilter6UpdateEv
 151:twoorderfilter.h ****     }
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 108


 3968              		.loc 18 151 5
 3969 0018 00BF     		nop
 3970 001a 0837     		adds	r7, r7, #8
 3971              		.cfi_def_cfa_offset 8
 3972 001c BD46     		mov	sp, r7
 3973              		.cfi_def_cfa_register 13
 3974              		@ sp needed
 3975 001e 80BD     		pop	{r7, pc}
 3976              		.cfi_endproc
 3977              	.LFE4696:
 3979              		.section	.text._ZN21clasSecondOrderFilter4setQEf,"axG",%progbits,_ZN21clasSecondOrderFilter4setQEf
 3980              		.align	1
 3981              		.weak	_ZN21clasSecondOrderFilter4setQEf
 3982              		.syntax unified
 3983              		.thumb
 3984              		.thumb_func
 3985              		.fpu fpv5-d16
 3987              	_ZN21clasSecondOrderFilter4setQEf:
 3988              	.LFB4698:
 152:twoorderfilter.h ****     
 153:twoorderfilter.h **** 
 154:twoorderfilter.h ****     float getQ(){
 155:twoorderfilter.h ****         return Q_;
 156:twoorderfilter.h ****     };
 157:twoorderfilter.h **** 
 158:twoorderfilter.h ****     // void setQ(float input){
 159:twoorderfilter.h ****     //     Q_ = input * 10;
 160:twoorderfilter.h ****     //     // Q_ = 0.707003023042342;
 161:twoorderfilter.h ****     // };
 162:twoorderfilter.h **** 
 163:twoorderfilter.h ****     void setQ(float input){
 3989              		.loc 18 163 10
 3990              		.cfi_startproc
 3991              		@ args = 0, pretend = 0, frame = 8
 3992              		@ frame_needed = 1, uses_anonymous_args = 0
 3993 0000 80B5     		push	{r7, lr}
 3994              		.cfi_def_cfa_offset 8
 3995              		.cfi_offset 7, -8
 3996              		.cfi_offset 14, -4
 3997 0002 82B0     		sub	sp, sp, #8
 3998              		.cfi_def_cfa_offset 16
 3999 0004 00AF     		add	r7, sp, #0
 4000              		.cfi_def_cfa_register 7
 4001 0006 7860     		str	r0, [r7, #4]
 4002 0008 87ED000A 		vstr.32	s0, [r7]
 164:twoorderfilter.h ****         // Clamp input to [0.0, 1.0]
 165:twoorderfilter.h ****         if(input < 0.0f) input = 0.0f;
 4003              		.loc 18 165 9
 4004 000c D7ED007A 		vldr.32	s15, [r7]
 4005 0010 F5EEC07A 		vcmpe.f32	s15, #0
 4006 0014 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4007 0018 02D5     		bpl	.L185
 4008              		.loc 18 165 32 discriminator 1
 4009 001a 4FF00003 		mov	r3, #0
 4010 001e 3B60     		str	r3, [r7]	@ float
 4011              	.L185:
 166:twoorderfilter.h ****         if(input > 1.0f) input = 1.0f;
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 109


 4012              		.loc 18 166 9
 4013 0020 D7ED007A 		vldr.32	s15, [r7]
 4014 0024 B7EE007A 		vmov.f32	s14, #1.0e+0
 4015 0028 F4EEC77A 		vcmpe.f32	s15, s14
 4016 002c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4017 0030 02DD     		ble	.L187
 4018              		.loc 18 166 32 discriminator 1
 4019 0032 4FF07E53 		mov	r3, #1065353216
 4020 0036 3B60     		str	r3, [r7]	@ float
 4021              	.L187:
 167:twoorderfilter.h ****     
 168:twoorderfilter.h ****         // Map to useful Q range: 0.5 to 10 (or tweak as needed)
 169:twoorderfilter.h ****         Q_ = 0.5f + input * 9.5f;
 4022              		.loc 18 169 27
 4023 0038 D7ED007A 		vldr.32	s15, [r7]
 4024 003c B2EE037A 		vmov.f32	s14, #9.5e+0
 4025 0040 67EE877A 		vmul.f32	s15, s15, s14
 4026              		.loc 18 169 19
 4027 0044 B6EE007A 		vmov.f32	s14, #5.0e-1
 4028 0048 77EE877A 		vadd.f32	s15, s15, s14
 4029              		.loc 18 169 12
 4030 004c 7B68     		ldr	r3, [r7, #4]
 4031 004e C3ED017A 		vstr.32	s15, [r3, #4]
 170:twoorderfilter.h ****         Update();
 4032              		.loc 18 170 15
 4033 0052 7868     		ldr	r0, [r7, #4]
 4034 0054 FFF7FEFF 		bl	_ZN21clasSecondOrderFilter6UpdateEv
 171:twoorderfilter.h ****     };
 4035              		.loc 18 171 5
 4036 0058 00BF     		nop
 4037 005a 0837     		adds	r7, r7, #8
 4038              		.cfi_def_cfa_offset 8
 4039 005c BD46     		mov	sp, r7
 4040              		.cfi_def_cfa_register 13
 4041              		@ sp needed
 4042 005e 80BD     		pop	{r7, pc}
 4043              		.cfi_endproc
 4044              	.LFE4698:
 4046              		.section	.text._ZN5daisy11clasEncoderC2Ev,"axG",%progbits,_ZN5daisy11clasEncoderC5Ev,comdat
 4047              		.align	1
 4048              		.weak	_ZN5daisy11clasEncoderC2Ev
 4049              		.syntax unified
 4050              		.thumb
 4051              		.thumb_func
 4052              		.fpu fpv5-d16
 4054              	_ZN5daisy11clasEncoderC2Ev:
 4055              	.LFB4700:
 4056              		.file 19 "encodercontrol.h"
   1:encodercontrol.h **** #pragma once
   2:encodercontrol.h **** #ifndef ENCODER_H
   3:encodercontrol.h **** #define ENCODER_H
   4:encodercontrol.h **** #include "daisy_core.h"
   5:encodercontrol.h **** #include "per/gpio.h"
   6:encodercontrol.h **** #include "hid/switch.h"
   7:encodercontrol.h **** 
   8:encodercontrol.h **** namespace daisy
   9:encodercontrol.h **** {
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 110


  10:encodercontrol.h **** /** 
  11:encodercontrol.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:encodercontrol.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:encodercontrol.h ****     @author Stephen Hensley
  14:encodercontrol.h ****     @date December 2019
  15:encodercontrol.h ****     @ingroup controls
  16:encodercontrol.h **** */
  17:encodercontrol.h **** class clasEncoder
  18:encodercontrol.h **** {
  19:encodercontrol.h ****   public:
  20:encodercontrol.h ****   clasEncoder() {}
 4057              		.loc 19 20 3
 4058              		.cfi_startproc
 4059              		@ args = 0, pretend = 0, frame = 8
 4060              		@ frame_needed = 1, uses_anonymous_args = 0
 4061 0000 80B5     		push	{r7, lr}
 4062              		.cfi_def_cfa_offset 8
 4063              		.cfi_offset 7, -8
 4064              		.cfi_offset 14, -4
 4065 0002 82B0     		sub	sp, sp, #8
 4066              		.cfi_def_cfa_offset 16
 4067 0004 00AF     		add	r7, sp, #0
 4068              		.cfi_def_cfa_register 7
 4069 0006 7860     		str	r0, [r7, #4]
 4070              	.LBB17:
 4071              		.loc 19 20 17
 4072 0008 7B68     		ldr	r3, [r7, #4]
 4073 000a 0833     		adds	r3, r3, #8
 4074 000c 1846     		mov	r0, r3
 4075 000e FFF7FEFF 		bl	_ZN5daisy6SwitchC1Ev
 4076              	.LBE17:
 4077              		.loc 19 20 18
 4078 0012 7B68     		ldr	r3, [r7, #4]
 4079 0014 1846     		mov	r0, r3
 4080 0016 0837     		adds	r7, r7, #8
 4081              		.cfi_def_cfa_offset 8
 4082 0018 BD46     		mov	sp, r7
 4083              		.cfi_def_cfa_register 13
 4084              		@ sp needed
 4085 001a 80BD     		pop	{r7, pc}
 4086              		.cfi_endproc
 4087              	.LFE4700:
 4089              		.weak	_ZN5daisy11clasEncoderC1Ev
 4090              		.thumb_set _ZN5daisy11clasEncoderC1Ev,_ZN5daisy11clasEncoderC2Ev
 4091              		.section	.text._ZN5daisy11clasEncoderD2Ev,"axG",%progbits,_ZN5daisy11clasEncoderD5Ev,comdat
 4092              		.align	1
 4093              		.weak	_ZN5daisy11clasEncoderD2Ev
 4094              		.syntax unified
 4095              		.thumb
 4096              		.thumb_func
 4097              		.fpu fpv5-d16
 4099              	_ZN5daisy11clasEncoderD2Ev:
 4100              	.LFB4703:
  21:encodercontrol.h ****     ~clasEncoder() {}
 4101              		.loc 19 21 5
 4102              		.cfi_startproc
 4103              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 111


 4104              		@ frame_needed = 1, uses_anonymous_args = 0
 4105 0000 80B5     		push	{r7, lr}
 4106              		.cfi_def_cfa_offset 8
 4107              		.cfi_offset 7, -8
 4108              		.cfi_offset 14, -4
 4109 0002 82B0     		sub	sp, sp, #8
 4110              		.cfi_def_cfa_offset 16
 4111 0004 00AF     		add	r7, sp, #0
 4112              		.cfi_def_cfa_register 7
 4113 0006 7860     		str	r0, [r7, #4]
 4114              	.LBB18:
 4115              		.loc 19 21 20
 4116 0008 7B68     		ldr	r3, [r7, #4]
 4117 000a 0833     		adds	r3, r3, #8
 4118 000c 1846     		mov	r0, r3
 4119 000e FFF7FEFF 		bl	_ZN5daisy6SwitchD1Ev
 4120              	.LBE18:
 4121              		.loc 19 21 21
 4122 0012 7B68     		ldr	r3, [r7, #4]
 4123 0014 1846     		mov	r0, r3
 4124 0016 0837     		adds	r7, r7, #8
 4125              		.cfi_def_cfa_offset 8
 4126 0018 BD46     		mov	sp, r7
 4127              		.cfi_def_cfa_register 13
 4128              		@ sp needed
 4129 001a 80BD     		pop	{r7, pc}
 4130              		.cfi_endproc
 4131              	.LFE4703:
 4133              		.weak	_ZN5daisy11clasEncoderD1Ev
 4134              		.thumb_set _ZN5daisy11clasEncoderD1Ev,_ZN5daisy11clasEncoderD2Ev
 4135              		.section	.text._ZNK5daisy11clasEncoder9IncrementEv,"axG",%progbits,_ZNK5daisy11clasEncoder9Increme
 4136              		.align	1
 4137              		.weak	_ZNK5daisy11clasEncoder9IncrementEv
 4138              		.syntax unified
 4139              		.thumb
 4140              		.thumb_func
 4141              		.fpu fpv5-d16
 4143              	_ZNK5daisy11clasEncoder9IncrementEv:
 4144              	.LFB4705:
  22:encodercontrol.h **** 
  23:encodercontrol.h ****     /** Initializes the encoder with the specified hardware pins.
  24:encodercontrol.h ****      * Update rate is to be deprecated in a future release
  25:encodercontrol.h ****      */
  26:encodercontrol.h ****     void Init(dsy_gpio_pin a,
  27:encodercontrol.h ****               dsy_gpio_pin b,
  28:encodercontrol.h ****               dsy_gpio_pin click,
  29:encodercontrol.h ****               float        update_rate = 0.f);
  30:encodercontrol.h ****     /** Called at update_rate to debounce and handle timing for the switch.
  31:encodercontrol.h ****      * In order for events not to be missed, its important that the Edge/Pressed checks be made at 
  32:encodercontrol.h ****      */
  33:encodercontrol.h ****     void Debounce();
  34:encodercontrol.h **** 
  35:encodercontrol.h ****     /** Returns +1 if the encoder was turned clockwise, -1 if it was turned counter-clockwise, or 0
  36:encodercontrol.h ****     inline int32_t Increment() const { return updated_ ? inc_ : 0; }
 4145              		.loc 19 36 20
 4146              		.cfi_startproc
 4147              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 112


 4148              		@ frame_needed = 1, uses_anonymous_args = 0
 4149              		@ link register save eliminated.
 4150 0000 80B4     		push	{r7}
 4151              		.cfi_def_cfa_offset 4
 4152              		.cfi_offset 7, -4
 4153 0002 83B0     		sub	sp, sp, #12
 4154              		.cfi_def_cfa_offset 16
 4155 0004 00AF     		add	r7, sp, #0
 4156              		.cfi_def_cfa_register 7
 4157 0006 7860     		str	r0, [r7, #4]
 4158              		.loc 19 36 47
 4159 0008 7B68     		ldr	r3, [r7, #4]
 4160 000a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4161              		.loc 19 36 56
 4162 000c 002B     		cmp	r3, #0
 4163 000e 02D0     		beq	.L196
 4164              		.loc 19 36 56 is_stmt 0 discriminator 1
 4165 0010 7B68     		ldr	r3, [r7, #4]
 4166 0012 5B6A     		ldr	r3, [r3, #36]
 4167              		.loc 19 36 65 is_stmt 1 discriminator 1
 4168 0014 00E0     		b	.L198
 4169              	.L196:
 4170              		.loc 19 36 56 discriminator 2
 4171 0016 0023     		movs	r3, #0
 4172              	.L198:
 4173              		.loc 19 36 68 discriminator 5
 4174 0018 1846     		mov	r0, r3
 4175 001a 0C37     		adds	r7, r7, #12
 4176              		.cfi_def_cfa_offset 4
 4177 001c BD46     		mov	sp, r7
 4178              		.cfi_def_cfa_register 13
 4179              		@ sp needed
 4180 001e 5DF8047B 		ldr	r7, [sp], #4
 4181              		.cfi_restore 7
 4182              		.cfi_def_cfa_offset 0
 4183 0022 7047     		bx	lr
 4184              		.cfi_endproc
 4185              	.LFE4705:
 4187              		.section	.text._ZNK5daisy11clasEncoder10RisingEdgeEv,"axG",%progbits,_ZNK5daisy11clasEncoder10Risi
 4188              		.align	1
 4189              		.weak	_ZNK5daisy11clasEncoder10RisingEdgeEv
 4190              		.syntax unified
 4191              		.thumb
 4192              		.thumb_func
 4193              		.fpu fpv5-d16
 4195              	_ZNK5daisy11clasEncoder10RisingEdgeEv:
 4196              	.LFB4706:
  37:encodercontrol.h **** 
  38:encodercontrol.h ****     /** Returns true if the encoder was just pressed. */
  39:encodercontrol.h ****     inline bool RisingEdge() const { return sw_.RisingEdge(); }
 4197              		.loc 19 39 17
 4198              		.cfi_startproc
 4199              		@ args = 0, pretend = 0, frame = 8
 4200              		@ frame_needed = 1, uses_anonymous_args = 0
 4201 0000 80B5     		push	{r7, lr}
 4202              		.cfi_def_cfa_offset 8
 4203              		.cfi_offset 7, -8
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 113


 4204              		.cfi_offset 14, -4
 4205 0002 82B0     		sub	sp, sp, #8
 4206              		.cfi_def_cfa_offset 16
 4207 0004 00AF     		add	r7, sp, #0
 4208              		.cfi_def_cfa_register 7
 4209 0006 7860     		str	r0, [r7, #4]
 4210              		.loc 19 39 59
 4211 0008 7B68     		ldr	r3, [r7, #4]
 4212 000a 0833     		adds	r3, r3, #8
 4213 000c 1846     		mov	r0, r3
 4214 000e FFF7FEFF 		bl	_ZNK5daisy6Switch10RisingEdgeEv
 4215 0012 0346     		mov	r3, r0
 4216              		.loc 19 39 63
 4217 0014 1846     		mov	r0, r3
 4218 0016 0837     		adds	r7, r7, #8
 4219              		.cfi_def_cfa_offset 8
 4220 0018 BD46     		mov	sp, r7
 4221              		.cfi_def_cfa_register 13
 4222              		@ sp needed
 4223 001a 80BD     		pop	{r7, pc}
 4224              		.cfi_endproc
 4225              	.LFE4706:
 4227              		.section	.text._ZN14clasOscillatorC2Ev,"axG",%progbits,_ZN14clasOscillatorC5Ev,comdat
 4228              		.align	1
 4229              		.weak	_ZN14clasOscillatorC2Ev
 4230              		.syntax unified
 4231              		.thumb
 4232              		.thumb_func
 4233              		.fpu fpv5-d16
 4235              	_ZN14clasOscillatorC2Ev:
 4236              	.LFB4712:
 4237              		.file 20 "oscillator.h"
   1:oscillator.h  **** #pragma once
   2:oscillator.h  **** #ifndef OSC_H
   3:oscillator.h  **** #define OSC_H
   4:oscillator.h  **** 
   5:oscillator.h  **** #include <stdint.h>
   6:oscillator.h  **** #include "math.h"
   7:oscillator.h  **** 
   8:oscillator.h  **** enum OSC_TYPE{
   9:oscillator.h  ****   OSC_NORMAL,
  10:oscillator.h  ****   OSC_LFO_SLOW,
  11:oscillator.h  ****   OSC_LFO_FAST
  12:oscillator.h  **** };
  13:oscillator.h  **** 
  14:oscillator.h  **** class clasOscillator
  15:oscillator.h  **** {
  16:oscillator.h  ****   private:
  17:oscillator.h  ****     #define PI_F 3.1415927410125732421875f
  18:oscillator.h  ****     float flSamplingRate_;
  19:oscillator.h  ****     float flSamplingRateRecip_;
  20:oscillator.h  ****     float flFreq_;
  21:oscillator.h  ****     float flPhase_;
  22:oscillator.h  ****     float flPhaseInc_;
  23:oscillator.h  ****     float flAmplitude_;
  24:oscillator.h  ****     float flPulseWidth_;
  25:oscillator.h  ****     uint8_t uiWaveform_;
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 114


  26:oscillator.h  ****     uint8_t uiRatio_;
  27:oscillator.h  ****     OSC_TYPE OSCILLATOR_TYPE_;
  28:oscillator.h  ****     float flDepth_;
  29:oscillator.h  ****     float flMaxDepth_;
  30:oscillator.h  ****     bool xTromoloMode_;
  31:oscillator.h  ****     bool xVibratoMode_;
  32:oscillator.h  ****     
  33:oscillator.h  **** 
  34:oscillator.h  **** 
  35:oscillator.h  ****     //Calculates the phase increment based from Sampling Frequency. 
  36:oscillator.h  ****     float fxCalculatePhaseInc(float frequency);
  37:oscillator.h  **** 
  38:oscillator.h  ****   public:
  39:oscillator.h  **** 
  40:oscillator.h  **** 
  41:oscillator.h  **** 
  42:oscillator.h  ****     enum DRONE_WAVE{
  43:oscillator.h  ****         WAVE_SIN,
  44:oscillator.h  ****         WAVE_TRI,
  45:oscillator.h  ****         WAVE_SAW,
  46:oscillator.h  ****         WAVE_SQUARE,
  47:oscillator.h  ****         // WAVE_EXP_D,
  48:oscillator.h  ****         // WAVE_GAUSSIAN,
  49:oscillator.h  ****         // WAVE_SUPERSAW,
  50:oscillator.h  ****         // WAVE_PARABOLA,
  51:oscillator.h  ****         // WAVE_TANH,
  52:oscillator.h  ****         // WAVE_PWM
  53:oscillator.h  ****     } DRONE_WAVEFORM;
  54:oscillator.h  **** 
  55:oscillator.h  **** 
  56:oscillator.h  ****     clasOscillator(){
 4238              		.loc 20 56 5
 4239              		.cfi_startproc
 4240              		@ args = 0, pretend = 0, frame = 8
 4241              		@ frame_needed = 1, uses_anonymous_args = 0
 4242              		@ link register save eliminated.
 4243 0000 80B4     		push	{r7}
 4244              		.cfi_def_cfa_offset 4
 4245              		.cfi_offset 7, -4
 4246 0002 83B0     		sub	sp, sp, #12
 4247              		.cfi_def_cfa_offset 16
 4248 0004 00AF     		add	r7, sp, #0
 4249              		.cfi_def_cfa_register 7
 4250 0006 7860     		str	r0, [r7, #4]
  57:oscillator.h  ****     }
 4251              		.loc 20 57 5
 4252 0008 7B68     		ldr	r3, [r7, #4]
 4253 000a 1846     		mov	r0, r3
 4254 000c 0C37     		adds	r7, r7, #12
 4255              		.cfi_def_cfa_offset 4
 4256 000e BD46     		mov	sp, r7
 4257              		.cfi_def_cfa_register 13
 4258              		@ sp needed
 4259 0010 5DF8047B 		ldr	r7, [sp], #4
 4260              		.cfi_restore 7
 4261              		.cfi_def_cfa_offset 0
 4262 0014 7047     		bx	lr
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 115


 4263              		.cfi_endproc
 4264              	.LFE4712:
 4266              		.weak	_ZN14clasOscillatorC1Ev
 4267              		.thumb_set _ZN14clasOscillatorC1Ev,_ZN14clasOscillatorC2Ev
 4268              		.section	.text._ZN14clasOscillatorD2Ev,"axG",%progbits,_ZN14clasOscillatorD5Ev,comdat
 4269              		.align	1
 4270              		.weak	_ZN14clasOscillatorD2Ev
 4271              		.syntax unified
 4272              		.thumb
 4273              		.thumb_func
 4274              		.fpu fpv5-d16
 4276              	_ZN14clasOscillatorD2Ev:
 4277              	.LFB4715:
  58:oscillator.h  ****     ~clasOscillator(){}
 4278              		.loc 20 58 5
 4279              		.cfi_startproc
 4280              		@ args = 0, pretend = 0, frame = 8
 4281              		@ frame_needed = 1, uses_anonymous_args = 0
 4282              		@ link register save eliminated.
 4283 0000 80B4     		push	{r7}
 4284              		.cfi_def_cfa_offset 4
 4285              		.cfi_offset 7, -4
 4286 0002 83B0     		sub	sp, sp, #12
 4287              		.cfi_def_cfa_offset 16
 4288 0004 00AF     		add	r7, sp, #0
 4289              		.cfi_def_cfa_register 7
 4290 0006 7860     		str	r0, [r7, #4]
 4291              		.loc 20 58 23
 4292 0008 7B68     		ldr	r3, [r7, #4]
 4293 000a 1846     		mov	r0, r3
 4294 000c 0C37     		adds	r7, r7, #12
 4295              		.cfi_def_cfa_offset 4
 4296 000e BD46     		mov	sp, r7
 4297              		.cfi_def_cfa_register 13
 4298              		@ sp needed
 4299 0010 5DF8047B 		ldr	r7, [sp], #4
 4300              		.cfi_restore 7
 4301              		.cfi_def_cfa_offset 0
 4302 0014 7047     		bx	lr
 4303              		.cfi_endproc
 4304              	.LFE4715:
 4306              		.weak	_ZN14clasOscillatorD1Ev
 4307              		.thumb_set _ZN14clasOscillatorD1Ev,_ZN14clasOscillatorD2Ev
 4308              		.global	aobjSingleOscillator
 4309              		.section	.bss.aobjSingleOscillator,"aw",%nobits
 4310              		.align	2
 4313              	aobjSingleOscillator:
 4314 0000 00000000 		.space	176
 4314      00000000 
 4314      00000000 
 4314      00000000 
 4314      00000000 
 4315              		.global	objParent_
 4316              		.section	.bss.objParent_,"aw",%nobits
 4317              		.align	2
 4320              	objParent_:
 4321 0000 00000000 		.space	4
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 116


 4322              		.global	objChild_
 4323              		.section	.bss.objChild_,"aw",%nobits
 4324              		.align	2
 4327              	objChild_:
 4328 0000 00000000 		.space	4
 4329              		.global	ptrSingleOscillator_
 4330              		.section	.bss.ptrSingleOscillator_,"aw",%nobits
 4331              		.align	2
 4334              	ptrSingleOscillator_:
 4335 0000 00000000 		.space	4
 4336              		.global	objEncoderA
 4337              		.section	.bss.objEncoderA,"aw",%nobits
 4338              		.align	2
 4341              	objEncoderA:
 4342 0000 00000000 		.space	40
 4342      00000000 
 4342      00000000 
 4342      00000000 
 4342      00000000 
 4343              		.global	objEncoderB
 4344              		.section	.bss.objEncoderB,"aw",%nobits
 4345              		.align	2
 4348              	objEncoderB:
 4349 0000 00000000 		.space	40
 4349      00000000 
 4349      00000000 
 4349      00000000 
 4349      00000000 
 4350              		.global	objEncoderC
 4351              		.section	.bss.objEncoderC,"aw",%nobits
 4352              		.align	2
 4355              	objEncoderC:
 4356 0000 00000000 		.space	40
 4356      00000000 
 4356      00000000 
 4356      00000000 
 4356      00000000 
 4357              		.global	objEncoderD
 4358              		.section	.bss.objEncoderD,"aw",%nobits
 4359              		.align	2
 4362              	objEncoderD:
 4363 0000 00000000 		.space	40
 4363      00000000 
 4363      00000000 
 4363      00000000 
 4363      00000000 
 4364              		.global	Btn1
 4365              		.section	.bss.Btn1,"aw",%nobits
 4366              		.align	2
 4369              	Btn1:
 4370 0000 00000000 		.space	16
 4370      00000000 
 4370      00000000 
 4370      00000000 
 4371              		.global	Btn2
 4372              		.section	.bss.Btn2,"aw",%nobits
 4373              		.align	2
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 117


 4376              	Btn2:
 4377 0000 00000000 		.space	16
 4377      00000000 
 4377      00000000 
 4377      00000000 
 4378              		.global	PT1_Effect3
 4379              		.section	.bss.PT1_Effect3,"aw",%nobits
 4380              		.align	2
 4383              	PT1_Effect3:
 4384 0000 00000000 		.space	18
 4384      00000000 
 4384      00000000 
 4384      00000000 
 4384      0000
 4385              		.global	PT2_Effect1
 4386              		.section	.bss.PT2_Effect1,"aw",%nobits
 4387              		.align	2
 4390              	PT2_Effect1:
 4391 0000 00000000 		.space	18
 4391      00000000 
 4391      00000000 
 4391      00000000 
 4391      0000
 4392              		.global	PT3_Filter1
 4393              		.section	.bss.PT3_Filter1,"aw",%nobits
 4394              		.align	2
 4397              	PT3_Filter1:
 4398 0000 00000000 		.space	18
 4398      00000000 
 4398      00000000 
 4398      00000000 
 4398      0000
 4399              		.global	PT4_Filter2
 4400              		.section	.bss.PT4_Filter2,"aw",%nobits
 4401              		.align	2
 4404              	PT4_Filter2:
 4405 0000 00000000 		.space	18
 4405      00000000 
 4405      00000000 
 4405      00000000 
 4405      0000
 4406              		.global	PT5_OSC_A_Amp
 4407              		.section	.bss.PT5_OSC_A_Amp,"aw",%nobits
 4408              		.align	2
 4411              	PT5_OSC_A_Amp:
 4412 0000 00000000 		.space	18
 4412      00000000 
 4412      00000000 
 4412      00000000 
 4412      0000
 4413              		.global	PT6_OSC_B_Amp
 4414              		.section	.bss.PT6_OSC_B_Amp,"aw",%nobits
 4415              		.align	2
 4418              	PT6_OSC_B_Amp:
 4419 0000 00000000 		.space	18
 4419      00000000 
 4419      00000000 
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 118


 4419      00000000 
 4419      0000
 4420              		.global	PT7_OSC_C_Amp
 4421              		.section	.bss.PT7_OSC_C_Amp,"aw",%nobits
 4422              		.align	2
 4425              	PT7_OSC_C_Amp:
 4426 0000 00000000 		.space	18
 4426      00000000 
 4426      00000000 
 4426      00000000 
 4426      0000
 4427              		.global	PT8_OSC_D_Amp
 4428              		.section	.bss.PT8_OSC_D_Amp,"aw",%nobits
 4429              		.align	2
 4432              	PT8_OSC_D_Amp:
 4433 0000 00000000 		.space	18
 4433      00000000 
 4433      00000000 
 4433      00000000 
 4433      0000
 4434              		.global	PT9_RealImag
 4435              		.section	.bss.PT9_RealImag,"aw",%nobits
 4436              		.align	2
 4439              	PT9_RealImag:
 4440 0000 00000000 		.space	18
 4440      00000000 
 4440      00000000 
 4440      00000000 
 4440      0000
 4441              		.global	PT10_Effect4
 4442              		.section	.bss.PT10_Effect4,"aw",%nobits
 4443              		.align	2
 4446              	PT10_Effect4:
 4447 0000 00000000 		.space	18
 4447      00000000 
 4447      00000000 
 4447      00000000 
 4447      0000
 4448              		.global	objADSR
 4449              		.section	.bss.objADSR,"aw",%nobits
 4450              		.align	2
 4453              	objADSR:
 4454 0000 00000000 		.space	60
 4454      00000000 
 4454      00000000 
 4454      00000000 
 4454      00000000 
 4455              		.global	objEncTimerMultipler
 4456              		.section	.bss.objEncTimerMultipler,"aw",%nobits
 4457              		.align	2
 4460              	objEncTimerMultipler:
 4461 0000 00000000 		.space	4
 4462              		.global	objResetTimer
 4463              		.section	.bss.objResetTimer,"aw",%nobits
 4464              		.align	2
 4467              	objResetTimer:
 4468 0000 00000000 		.space	4
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 119


 4469              		.global	objResetMenuTimer
 4470              		.section	.bss.objResetMenuTimer,"aw",%nobits
 4471              		.align	2
 4474              	objResetMenuTimer:
 4475 0000 00000000 		.space	4
 4476              		.section	.bss._ZL15g_astruLfoSlots,"aw",%nobits
 4477              		.align	2
 4480              	_ZL15g_astruLfoSlots:
 4481 0000 00000000 		.space	40
 4481      00000000 
 4481      00000000 
 4481      00000000 
 4481      00000000 
 4482              		.global	g_iLFOElement
 4483              		.section	.bss.g_iLFOElement,"aw",%nobits
 4484              		.align	2
 4487              	g_iLFOElement:
 4488 0000 00000000 		.space	4
 4489              		.section	.rodata._ZL8MAX_FREQ,"a"
 4490              		.align	2
 4493              	_ZL8MAX_FREQ:
 4494 0000 70170000 		.word	6000
 4495              		.section	.rodata._ZL8MIN_FREQ,"a"
 4496              		.align	2
 4499              	_ZL8MIN_FREQ:
 4500 0000 0B000000 		.word	11
 4501              		.section	.rodata._ZL6PERIOD,"a"
 4502              		.align	2
 4505              	_ZL6PERIOD:
 4506 0000 204E0000 		.word	20000
 4507              		.global	iEncoderPos_
 4508              		.section	.bss.iEncoderPos_,"aw",%nobits
 4509              		.align	2
 4512              	iEncoderPos_:
 4513 0000 00000000 		.space	4
 4514              		.global	uiLastTime_
 4515              		.section	.bss.uiLastTime_,"aw",%nobits
 4516              		.align	2
 4519              	uiLastTime_:
 4520 0000 00000000 		.space	16
 4520      00000000 
 4520      00000000 
 4520      00000000 
 4521              		.global	flSpeedFactor_
 4522              		.section	.data.flSpeedFactor_,"aw"
 4523              		.align	2
 4526              	flSpeedFactor_:
 4527 0000 0000803F 		.word	1065353216
 4528 0004 0000803F 		.word	1065353216
 4529 0008 0000803F 		.word	1065353216
 4530 000c 0000803F 		.word	1065353216
 4531              		.section	.rodata._ZL12SPEED_SCALE_,"a"
 4532              		.align	2
 4535              	_ZL12SPEED_SCALE_:
 4536 0000 00000040 		.word	1073741824
 4537              		.section	.rodata._ZL8MAX_INC_,"a"
 4538              		.align	2
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 120


 4541              	_ZL8MAX_INC_:
 4542 0000 0000A041 		.word	1101004800
 4543              		.global	WAVEFORM
 4544              		.section	.bss.WAVEFORM,"aw",%nobits
 4547              	WAVEFORM:
 4548 0000 00       		.space	1
 4549              		.global	uiLastUpdate
 4550              		.section	.bss.uiLastUpdate,"aw",%nobits
 4551              		.align	2
 4554              	uiLastUpdate:
 4555 0000 00000000 		.space	4
 4556              		.global	uiTouchKeyPressed
 4557              		.section	.bss.uiTouchKeyPressed,"aw",%nobits
 4560              	uiTouchKeyPressed:
 4561 0000 00       		.space	1
 4562              		.global	xGate
 4563              		.section	.bss.xGate,"aw",%nobits
 4566              	xGate:
 4567 0000 00       		.space	1
 4568              		.global	aflFreqTable
 4569              		.section	.bss.aflFreqTable,"aw",%nobits
 4570              		.align	2
 4573              	aflFreqTable:
 4574 0000 00000000 		.space	48
 4574      00000000 
 4574      00000000 
 4574      00000000 
 4574      00000000 
 4575              		.global	iUserInput_
 4576              		.section	.bss.iUserInput_,"aw",%nobits
 4577              		.align	2
 4580              	iUserInput_:
 4581 0000 00000000 		.space	4
 4582              		.global	xNormalMode
 4583              		.section	.data.xNormalMode,"aw"
 4586              	xNormalMode:
 4587 0000 01       		.byte	1
 4588              		.global	flLFOFastSignal
 4589              		.section	.bss.flLFOFastSignal,"aw",%nobits
 4590              		.align	2
 4593              	flLFOFastSignal:
 4594 0000 00000000 		.space	4
 4595              		.global	flLFOSlowSignal
 4596              		.section	.bss.flLFOSlowSignal,"aw",%nobits
 4597              		.align	2
 4600              	flLFOSlowSignal:
 4601 0000 00000000 		.space	4
 4602              		.global	xPrintOnce
 4603              		.section	.bss.xPrintOnce,"aw",%nobits
 4606              	xPrintOnce:
 4607 0000 00       		.space	1
 4608              		.global	eMenuState
 4609              		.section	.bss.eMenuState,"aw",%nobits
 4610              		.align	2
 4613              	eMenuState:
 4614 0000 00000000 		.space	4
 4615              		.global	eWhileState
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 121


 4616              		.section	.bss.eWhileState,"aw",%nobits
 4617              		.align	2
 4620              	eWhileState:
 4621 0000 00000000 		.space	4
 4622              		.global	iPrevUserInput
 4623              		.section	.data.iPrevUserInput,"aw"
 4624              		.align	2
 4627              	iPrevUserInput:
 4628 0000 FFFFFFFF 		.word	-1
 4629              		.global	eMain
 4630              		.section	.bss.eMain,"aw",%nobits
 4631              		.align	2
 4634              	eMain:
 4635 0000 00000000 		.space	4
 4636              		.global	eSub
 4637              		.section	.bss.eSub,"aw",%nobits
 4638              		.align	2
 4641              	eSub:
 4642 0000 00000000 		.space	4
 4643              		.global	eMode
 4644              		.section	.bss.eMode,"aw",%nobits
 4645              		.align	2
 4648              	eMode:
 4649 0000 00000000 		.space	4
 4650              		.global	eResetMainMenuState
 4651              		.section	.bss.eResetMainMenuState,"aw",%nobits
 4652              		.align	2
 4655              	eResetMainMenuState:
 4656 0000 00000000 		.space	4
 4657              		.section	.text._Z18InitLFOAssignmentsv,"ax",%progbits
 4658              		.align	1
 4659              		.global	_Z18InitLFOAssignmentsv
 4660              		.syntax unified
 4661              		.thumb
 4662              		.thumb_func
 4663              		.fpu fpv5-d16
 4665              	_Z18InitLFOAssignmentsv:
 4666              	.LFB4717:
 4667              		.file 21 "control.h"
   1:control.h     **** #pragma once 
   2:control.h     **** #ifndef CONTROL_H
   3:control.h     **** #define CONTROL_H
   4:control.h     **** 
   5:control.h     **** #include "encodercontrol.h"
   6:control.h     **** #include "oscillator.h"
   7:control.h     **** #include "leadvoice.h"
   8:control.h     **** #include "daisysp.h"
   9:control.h     **** #include "daisy_seed.h"
  10:control.h     **** #include "math.h"
  11:control.h     **** #include "adsr.h"
  12:control.h     **** #include "eulerssynthesis.h"
  13:control.h     **** #include "twoorderfilter.h"
  14:control.h     **** 
  15:control.h     **** using namespace daisysp;
  16:control.h     **** using namespace daisy;
  17:control.h     **** using namespace seed;
  18:control.h     **** 
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 122


  19:control.h     **** //INSTANTIATION/////////////////////////////////////////
  20:control.h     **** extern DaisySeed hw;
  21:control.h     **** extern clasEulersOscillator<16> objLeadVoice;
  22:control.h     **** extern clasSecondOrderFilter objLPFLeadVoice;
  23:control.h     **** 
  24:control.h     **** clasOscillator aobjSingleOscillator[4];
  25:control.h     **** 
  26:control.h     **** 
  27:control.h     **** // clasOscillator objRingMod;
  28:control.h     **** // clasOscillator objCarrierA;
  29:control.h     **** // clasOscillator objCarrierB;
  30:control.h     **** // clasOscillator objCarrierC;
  31:control.h     **** 
  32:control.h     **** 
  33:control.h     **** clasOscillator* objParent_;
  34:control.h     **** clasOscillator* objChild_;
  35:control.h     **** 
  36:control.h     **** clasOscillator* ptrSingleOscillator_ = nullptr;
  37:control.h     **** 
  38:control.h     **** extern clasOscillator objLFOSlow;
  39:control.h     **** extern clasOscillator objLFOFast;
  40:control.h     **** 
  41:control.h     **** clasEncoder objEncoderA;
  42:control.h     **** clasEncoder objEncoderB;
  43:control.h     **** clasEncoder objEncoderC;
  44:control.h     **** clasEncoder objEncoderD;
  45:control.h     **** 
  46:control.h     **** 
  47:control.h     **** Switch Btn1;
  48:control.h     **** Switch Btn2;
  49:control.h     **** 
  50:control.h     **** AdcChannelConfig PT1_Effect3;
  51:control.h     **** AdcChannelConfig PT2_Effect1;
  52:control.h     **** AdcChannelConfig PT3_Filter1;
  53:control.h     **** AdcChannelConfig PT4_Filter2;
  54:control.h     **** AdcChannelConfig PT5_OSC_A_Amp;
  55:control.h     **** AdcChannelConfig PT6_OSC_B_Amp;
  56:control.h     **** AdcChannelConfig PT7_OSC_C_Amp;
  57:control.h     **** AdcChannelConfig PT8_OSC_D_Amp;
  58:control.h     **** AdcChannelConfig PT9_RealImag;
  59:control.h     **** AdcChannelConfig PT10_Effect4;
  60:control.h     **** 
  61:control.h     **** clasADSR objADSR;
  62:control.h     **** 
  63:control.h     **** TimerHandle objEncTimerMultipler;
  64:control.h     **** TimerHandle objResetTimer;
  65:control.h     **** TimerHandle objResetMenuTimer;
  66:control.h     **** 
  67:control.h     **** 
  68:control.h     **** 
  69:control.h     **** //LFO MADNESS//////////////////////////////////////////////////////////
  70:control.h     **** enum class VoiceSelection{
  71:control.h     ****     None, 
  72:control.h     ****     Drone,
  73:control.h     ****     Single,
  74:control.h     ****     Lead
  75:control.h     **** };
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 123


  76:control.h     **** 
  77:control.h     **** 
  78:control.h     **** // Holds the info for one LFO assignment:
  79:control.h     **** struct LFOAssignment
  80:control.h     **** {
  81:control.h     ****     clasOscillator* ptrLFO;         //pointer to the LFO object (objLFOSlow or objLFOFast)
  82:control.h     ****     clasOscillator* ptrSingleOscSelectLFO_; //Single oscillator pointer. 
  83:control.h     ****     VoiceSelection  whichVoice;     //drone, single, or lead
  84:control.h     ****     int iOscNumber;
  85:control.h     ****     bool            xTremolo;       //which mode
  86:control.h     ****     bool            xVibrato;
  87:control.h     ****     
  88:control.h     **** };
  89:control.h     **** 
  90:control.h     **** // We have two LFOs -> two assignment slots
  91:control.h     **** static LFOAssignment g_astruLfoSlots[2];
  92:control.h     **** int g_iLFOElement = 0;  //Which LFO element 
  93:control.h     **** 
  94:control.h     **** 
  95:control.h     **** 
  96:control.h     **** //LFO MADNESS//////////////////////////////////////////////////////////
  97:control.h     **** 
  98:control.h     **** //Enumerator for the touch keyboard menu. 
  99:control.h     **** enum TOUCH_MODE {
 100:control.h     ****     T_NORMAL = 0, //This needs to be 0!
 101:control.h     ****     T_FAST_LFO = 1,
 102:control.h     ****     T_ADSR = 2,
 103:control.h     ****     T_SLOW_LFO = 3,
 104:control.h     ****     T_D_AMP = 4,
 105:control.h     ****     T_RATIO = 5,
 106:control.h     ****     T_MATCH = 7,
 107:control.h     ****     T_D_SHAPE = 9,
 108:control.h     ****     T_L_SHAPE = 11,
 109:control.h     ****     
 110:control.h     ****     
 111:control.h     **** };
 112:control.h     **** 
 113:control.h     **** enum MENU_STATE {
 114:control.h     ****     M_MAIN = 0,
 115:control.h     ****     M_SUB = 1,
 116:control.h     ****     M_MODE = 2
 117:control.h     **** };
 118:control.h     **** 
 119:control.h     **** enum LFO_MODE {
 120:control.h     ****     LFO_IDLE = 0,
 121:control.h     ****     LFO_TROMOLO = 1,
 122:control.h     ****     LFO_VIBRATO = 3,
 123:control.h     ****     LFO_DRONE = 6,
 124:control.h     ****     LFO_SINGLE = 8,
 125:control.h     ****     LFO_LEAD = 10
 126:control.h     **** };
 127:control.h     **** 
 128:control.h     **** enum WAVE_TYPE{
 129:control.h     ****     WAVE_SIN,
 130:control.h     ****     WAVE_TRI,
 131:control.h     ****     WAVE_SAW,
 132:control.h     ****     WAVE_SQUARE,
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 124


 133:control.h     ****     WAVE_EXP_D,
 134:control.h     ****     WAVE_GAUSSIAN,
 135:control.h     ****     WAVE_SUPERSAW,
 136:control.h     ****     WAVE_PARABOLA,
 137:control.h     ****     WAVE_TANH,
 138:control.h     ****     WAVE_PWM
 139:control.h     **** };
 140:control.h     **** 
 141:control.h     **** 
 142:control.h     **** //VARIABLES//////////////////////////////////////////
 143:control.h     **** 
 144:control.h     **** const int MAX_FREQ = 6000;
 145:control.h     **** const int MIN_FREQ = 11;
 146:control.h     **** const int PERIOD = 20000; 
 147:control.h     **** 
 148:control.h     **** volatile int iEncoderPos_ = 0;
 149:control.h     **** volatile uint32_t uiLastTime_[4] = {0,0,0,0};
 150:control.h     **** volatile float flSpeedFactor_[4] = {1.0f, 1.0f, 1.0f, 1.0f}; 
 151:control.h     **** const float SPEED_SCALE_ = 2.0f;
 152:control.h     **** const float MAX_INC_ = 20;
 153:control.h     **** 
 154:control.h     **** enum WAVE_TYPE WAVEFORM; // Correct definition
 155:control.h     **** uint32_t uiLastUpdate;
 156:control.h     **** uint8_t uiTouchKeyPressed;
 157:control.h     **** bool xGate; //Signal to start the ADSR. 
 158:control.h     **** float aflFreqTable[12]; //Array for the frequencies to stored in.
 159:control.h     **** int iUserInput_ = T_NORMAL; 
 160:control.h     **** bool xNormalMode = true;
 161:control.h     **** float flLFOFastSignal;
 162:control.h     **** float flLFOSlowSignal;
 163:control.h     **** bool xPrintOnce = false;
 164:control.h     **** int eMenuState = M_MAIN;
 165:control.h     **** int eWhileState = M_MAIN;
 166:control.h     **** int iPrevUserInput = -1;
 167:control.h     **** int eMain = T_NORMAL;
 168:control.h     **** int eSub = LFO_IDLE;
 169:control.h     **** int eMode = LFO_IDLE;
 170:control.h     **** 
 171:control.h     **** int eResetMainMenuState = T_NORMAL;
 172:control.h     **** 
 173:control.h     **** 
 174:control.h     **** //FUNCTIONS//////////////////////////////////////////////
 175:control.h     **** 
 176:control.h     **** void InitLFOAssignments()
 177:control.h     **** {
 4668              		.loc 21 177 1
 4669              		.cfi_startproc
 4670              		@ args = 0, pretend = 0, frame = 0
 4671              		@ frame_needed = 1, uses_anonymous_args = 0
 4672              		@ link register save eliminated.
 4673 0000 80B4     		push	{r7}
 4674              		.cfi_def_cfa_offset 4
 4675              		.cfi_offset 7, -4
 4676 0002 00AF     		add	r7, sp, #0
 4677              		.cfi_def_cfa_register 7
 178:control.h     ****     g_astruLfoSlots[0] = {nullptr, nullptr, VoiceSelection::None, -1, false, false};
 4678              		.loc 21 178 24
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 125


 4679 0004 164B     		ldr	r3, .L206
 4680 0006 0022     		movs	r2, #0
 4681 0008 1A60     		str	r2, [r3]
 4682 000a 154B     		ldr	r3, .L206
 4683 000c 0022     		movs	r2, #0
 4684 000e 5A60     		str	r2, [r3, #4]
 4685 0010 134B     		ldr	r3, .L206
 4686 0012 0022     		movs	r2, #0
 4687 0014 9A60     		str	r2, [r3, #8]
 4688 0016 124B     		ldr	r3, .L206
 4689 0018 4FF0FF32 		mov	r2, #-1
 4690 001c DA60     		str	r2, [r3, #12]
 4691 001e 104B     		ldr	r3, .L206
 4692 0020 0022     		movs	r2, #0
 4693 0022 1A74     		strb	r2, [r3, #16]
 4694 0024 0E4B     		ldr	r3, .L206
 4695 0026 0022     		movs	r2, #0
 4696 0028 5A74     		strb	r2, [r3, #17]
 179:control.h     ****     g_astruLfoSlots[1] = {nullptr, nullptr, VoiceSelection::None, -1, false, false};
 4697              		.loc 21 179 24
 4698 002a 0D4B     		ldr	r3, .L206
 4699 002c 0022     		movs	r2, #0
 4700 002e 5A61     		str	r2, [r3, #20]
 4701 0030 0B4B     		ldr	r3, .L206
 4702 0032 0022     		movs	r2, #0
 4703 0034 9A61     		str	r2, [r3, #24]
 4704 0036 0A4B     		ldr	r3, .L206
 4705 0038 0022     		movs	r2, #0
 4706 003a DA61     		str	r2, [r3, #28]
 4707 003c 084B     		ldr	r3, .L206
 4708 003e 4FF0FF32 		mov	r2, #-1
 4709 0042 1A62     		str	r2, [r3, #32]
 4710 0044 064B     		ldr	r3, .L206
 4711 0046 0022     		movs	r2, #0
 4712 0048 83F82420 		strb	r2, [r3, #36]
 4713 004c 044B     		ldr	r3, .L206
 4714 004e 0022     		movs	r2, #0
 4715 0050 83F82520 		strb	r2, [r3, #37]
 180:control.h     **** }
 4716              		.loc 21 180 1
 4717 0054 00BF     		nop
 4718 0056 BD46     		mov	sp, r7
 4719              		.cfi_def_cfa_register 13
 4720              		@ sp needed
 4721 0058 5DF8047B 		ldr	r7, [sp], #4
 4722              		.cfi_restore 7
 4723              		.cfi_def_cfa_offset 0
 4724 005c 7047     		bx	lr
 4725              	.L207:
 4726 005e 00BF     		.align	2
 4727              	.L206:
 4728 0060 00000000 		.word	_ZL15g_astruLfoSlots
 4729              		.cfi_endproc
 4730              	.LFE4717:
 4732              		.section	.text._Z14fxEncoderSetupv,"ax",%progbits
 4733              		.align	1
 4734              		.global	_Z14fxEncoderSetupv
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 126


 4735              		.syntax unified
 4736              		.thumb
 4737              		.thumb_func
 4738              		.fpu fpv5-d16
 4740              	_Z14fxEncoderSetupv:
 4741              	.LFB4718:
 181:control.h     **** 
 182:control.h     **** 
 183:control.h     **** void fxEncoderSetup(){
 4742              		.loc 21 183 22
 4743              		.cfi_startproc
 4744              		@ args = 0, pretend = 0, frame = 48
 4745              		@ frame_needed = 1, uses_anonymous_args = 0
 4746 0000 80B5     		push	{r7, lr}
 4747              		.cfi_def_cfa_offset 8
 4748              		.cfi_offset 7, -8
 4749              		.cfi_offset 14, -4
 4750 0002 8CB0     		sub	sp, sp, #48
 4751              		.cfi_def_cfa_offset 56
 4752 0004 00AF     		add	r7, sp, #0
 4753              		.cfi_def_cfa_register 7
 184:control.h     ****     objEncoderA.Init(D0, D1, D25, 1000); //RingMod
 4754              		.loc 21 184 21
 4755 0006 3048     		ldr	r0, .L209
 4756 0008 FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 4757 000c 0346     		mov	r3, r0	@ movhi
 4758 000e 3B80     		strh	r3, [r7]	@ movhi
 4759 0010 2E48     		ldr	r0, .L209+4
 4760 0012 FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 4761 0016 0346     		mov	r3, r0	@ movhi
 4762 0018 BB80     		strh	r3, [r7, #4]	@ movhi
 4763 001a 2D48     		ldr	r0, .L209+8
 4764 001c FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 4765 0020 0346     		mov	r3, r0	@ movhi
 4766 0022 3B81     		strh	r3, [r7, #8]	@ movhi
 4767 0024 9FED2B0A 		vldr.32	s0, .L209+12
 4768 0028 BB68     		ldr	r3, [r7, #8]
 4769 002a 7A68     		ldr	r2, [r7, #4]
 4770 002c 3968     		ldr	r1, [r7]
 4771 002e 2A48     		ldr	r0, .L209+16
 4772 0030 FFF7FEFF 		bl	_ZN5daisy11clasEncoder4InitE12dsy_gpio_pinS1_S1_f
 185:control.h     ****     objEncoderB.Init(D2, D3, D26, 1000); //CarrierA
 4773              		.loc 21 185 21
 4774 0034 2948     		ldr	r0, .L209+20
 4775 0036 FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 4776 003a 0346     		mov	r3, r0	@ movhi
 4777 003c BB81     		strh	r3, [r7, #12]	@ movhi
 4778 003e 2848     		ldr	r0, .L209+24
 4779 0040 FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 4780 0044 0346     		mov	r3, r0	@ movhi
 4781 0046 3B82     		strh	r3, [r7, #16]	@ movhi
 4782 0048 2648     		ldr	r0, .L209+28
 4783 004a FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 4784 004e 0346     		mov	r3, r0	@ movhi
 4785 0050 BB82     		strh	r3, [r7, #20]	@ movhi
 4786 0052 9FED200A 		vldr.32	s0, .L209+12
 4787 0056 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 127


 4788 0058 3A69     		ldr	r2, [r7, #16]
 4789 005a F968     		ldr	r1, [r7, #12]
 4790 005c 2248     		ldr	r0, .L209+32
 4791 005e FFF7FEFF 		bl	_ZN5daisy11clasEncoder4InitE12dsy_gpio_pinS1_S1_f
 186:control.h     ****     objEncoderC.Init(D4, D5, D27, 1000); //CarrierB
 4792              		.loc 21 186 21
 4793 0062 2248     		ldr	r0, .L209+36
 4794 0064 FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 4795 0068 0346     		mov	r3, r0	@ movhi
 4796 006a 3B83     		strh	r3, [r7, #24]	@ movhi
 4797 006c 2048     		ldr	r0, .L209+40
 4798 006e FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 4799 0072 0346     		mov	r3, r0	@ movhi
 4800 0074 BB83     		strh	r3, [r7, #28]	@ movhi
 4801 0076 1F48     		ldr	r0, .L209+44
 4802 0078 FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 4803 007c 0346     		mov	r3, r0	@ movhi
 4804 007e 3B84     		strh	r3, [r7, #32]	@ movhi
 4805 0080 9FED140A 		vldr.32	s0, .L209+12
 4806 0084 3B6A     		ldr	r3, [r7, #32]
 4807 0086 FA69     		ldr	r2, [r7, #28]
 4808 0088 B969     		ldr	r1, [r7, #24]
 4809 008a 1B48     		ldr	r0, .L209+48
 4810 008c FFF7FEFF 		bl	_ZN5daisy11clasEncoder4InitE12dsy_gpio_pinS1_S1_f
 187:control.h     ****     objEncoderD.Init(D6, D7, D28, 1000); //CarrierC
 4811              		.loc 21 187 21
 4812 0090 1A48     		ldr	r0, .L209+52
 4813 0092 FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 4814 0096 0346     		mov	r3, r0	@ movhi
 4815 0098 BB84     		strh	r3, [r7, #36]	@ movhi
 4816 009a 1948     		ldr	r0, .L209+56
 4817 009c FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 4818 00a0 0346     		mov	r3, r0	@ movhi
 4819 00a2 3B85     		strh	r3, [r7, #40]	@ movhi
 4820 00a4 1748     		ldr	r0, .L209+60
 4821 00a6 FFF7FEFF 		bl	_ZNK5daisy3Pincv12dsy_gpio_pinEv
 4822 00aa 0346     		mov	r3, r0	@ movhi
 4823 00ac BB85     		strh	r3, [r7, #44]	@ movhi
 4824 00ae 9FED090A 		vldr.32	s0, .L209+12
 4825 00b2 FB6A     		ldr	r3, [r7, #44]
 4826 00b4 BA6A     		ldr	r2, [r7, #40]
 4827 00b6 796A     		ldr	r1, [r7, #36]
 4828 00b8 1348     		ldr	r0, .L209+64
 4829 00ba FFF7FEFF 		bl	_ZN5daisy11clasEncoder4InitE12dsy_gpio_pinS1_S1_f
 188:control.h     **** }
 4830              		.loc 21 188 1
 4831 00be 00BF     		nop
 4832 00c0 3037     		adds	r7, r7, #48
 4833              		.cfi_def_cfa_offset 8
 4834 00c2 BD46     		mov	sp, r7
 4835              		.cfi_def_cfa_register 13
 4836              		@ sp needed
 4837 00c4 80BD     		pop	{r7, pc}
 4838              	.L210:
 4839 00c6 00BF     		.align	2
 4840              	.L209:
 4841 00c8 00000000 		.word	_ZN5daisy4seedL2D0E
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 128


 4842 00cc 00000000 		.word	_ZN5daisy4seedL2D1E
 4843 00d0 00000000 		.word	_ZN5daisy4seedL3D25E
 4844 00d4 00007A44 		.word	1148846080
 4845 00d8 00000000 		.word	objEncoderA
 4846 00dc 00000000 		.word	_ZN5daisy4seedL2D2E
 4847 00e0 00000000 		.word	_ZN5daisy4seedL2D3E
 4848 00e4 00000000 		.word	_ZN5daisy4seedL3D26E
 4849 00e8 00000000 		.word	objEncoderB
 4850 00ec 00000000 		.word	_ZN5daisy4seedL2D4E
 4851 00f0 00000000 		.word	_ZN5daisy4seedL2D5E
 4852 00f4 00000000 		.word	_ZN5daisy4seedL3D27E
 4853 00f8 00000000 		.word	objEncoderC
 4854 00fc 00000000 		.word	_ZN5daisy4seedL2D6E
 4855 0100 00000000 		.word	_ZN5daisy4seedL2D7E
 4856 0104 00000000 		.word	_ZN5daisy4seedL3D28E
 4857 0108 00000000 		.word	objEncoderD
 4858              		.cfi_endproc
 4859              	.LFE4718:
 4861              		.section	.text._Z18fxEncoderTimerInitv,"ax",%progbits
 4862              		.align	1
 4863              		.global	_Z18fxEncoderTimerInitv
 4864              		.syntax unified
 4865              		.thumb
 4866              		.thumb_func
 4867              		.fpu fpv5-d16
 4869              	_Z18fxEncoderTimerInitv:
 4870              	.LFB4719:
 189:control.h     **** 
 190:control.h     **** 
 191:control.h     **** 
 192:control.h     **** void fxEncoderTimerInit(){
 4871              		.loc 21 192 26
 4872              		.cfi_startproc
 4873              		@ args = 0, pretend = 0, frame = 16
 4874              		@ frame_needed = 1, uses_anonymous_args = 0
 4875 0000 80B5     		push	{r7, lr}
 4876              		.cfi_def_cfa_offset 8
 4877              		.cfi_offset 7, -8
 4878              		.cfi_offset 14, -4
 4879 0002 84B0     		sub	sp, sp, #16
 4880              		.cfi_def_cfa_offset 24
 4881 0004 00AF     		add	r7, sp, #0
 4882              		.cfi_def_cfa_register 7
 193:control.h     ****     TimerHandle::Config FreqMultiplerTimerConfig;
 4883              		.loc 21 193 25
 4884 0006 3B46     		mov	r3, r7
 4885 0008 1846     		mov	r0, r3
 4886 000a FFF7FEFF 		bl	_ZN5daisy11TimerHandle6ConfigC1Ev
 194:control.h     ****     FreqMultiplerTimerConfig.dir = TimerHandle::Config::CounterDir::UP;
 4887              		.loc 21 194 34
 4888 000e 0023     		movs	r3, #0
 4889 0010 7B60     		str	r3, [r7, #4]
 195:control.h     ****     FreqMultiplerTimerConfig.enable_irq = true;
 4890              		.loc 21 195 41
 4891 0012 0123     		movs	r3, #1
 4892 0014 3B73     		strb	r3, [r7, #12]
 196:control.h     ****     FreqMultiplerTimerConfig.period = 9999;
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 129


 4893              		.loc 21 196 37
 4894 0016 42F20F73 		movw	r3, #9999
 4895 001a BB60     		str	r3, [r7, #8]
 197:control.h     ****     FreqMultiplerTimerConfig.periph = TimerHandle::Config::Peripheral::TIM_5;
 4896              		.loc 21 197 37
 4897 001c 0323     		movs	r3, #3
 4898 001e 3B60     		str	r3, [r7]
 198:control.h     ****     objEncTimerMultipler.Init(FreqMultiplerTimerConfig);
 4899              		.loc 21 198 30
 4900 0020 3B46     		mov	r3, r7
 4901 0022 1946     		mov	r1, r3
 4902 0024 0648     		ldr	r0, .L212
 4903 0026 FFF7FEFF 		bl	_ZN5daisy11TimerHandle4InitERKNS0_6ConfigE
 199:control.h     ****     objEncTimerMultipler.SetPrescaler(200000);//Sets rate in which the timer ticks, 1khz.
 4904              		.loc 21 199 38
 4905 002a 0649     		ldr	r1, .L212+4
 4906 002c 0448     		ldr	r0, .L212
 4907 002e FFF7FEFF 		bl	_ZN5daisy11TimerHandle12SetPrescalerEm
 200:control.h     ****     // objEncTimerMultipler.SetCallback(fxTimerCB, nullptr);
 201:control.h     ****     objEncTimerMultipler.Start();
 4908              		.loc 21 201 31
 4909 0032 0348     		ldr	r0, .L212
 4910 0034 FFF7FEFF 		bl	_ZN5daisy11TimerHandle5StartEv
 202:control.h     **** }
 4911              		.loc 21 202 1
 4912 0038 00BF     		nop
 4913 003a 1037     		adds	r7, r7, #16
 4914              		.cfi_def_cfa_offset 8
 4915 003c BD46     		mov	sp, r7
 4916              		.cfi_def_cfa_register 13
 4917              		@ sp needed
 4918 003e 80BD     		pop	{r7, pc}
 4919              	.L213:
 4920              		.align	2
 4921              	.L212:
 4922 0040 00000000 		.word	objEncTimerMultipler
 4923 0044 400D0300 		.word	200000
 4924              		.cfi_endproc
 4925              	.LFE4719:
 4927              		.section	.text._Z13fxControlInitv,"ax",%progbits
 4928              		.align	1
 4929              		.global	_Z13fxControlInitv
 4930              		.syntax unified
 4931              		.thumb
 4932              		.thumb_func
 4933              		.fpu fpv5-d16
 4935              	_Z13fxControlInitv:
 4936              	.LFB4720:
 203:control.h     **** 
 204:control.h     **** 
 205:control.h     **** 
 206:control.h     **** void fxControlInit(){
 4937              		.loc 21 206 21
 4938              		.cfi_startproc
 4939              		@ args = 0, pretend = 0, frame = 0
 4940              		@ frame_needed = 1, uses_anonymous_args = 0
 4941 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 130


 4942              		.cfi_def_cfa_offset 8
 4943              		.cfi_offset 7, -8
 4944              		.cfi_offset 14, -4
 4945 0002 00AF     		add	r7, sp, #0
 4946              		.cfi_def_cfa_register 7
 207:control.h     ****     uiLastUpdate = System::GetNow();
 4947              		.loc 21 207 34
 4948 0004 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 4949 0008 0346     		mov	r3, r0
 4950              		.loc 21 207 18
 4951 000a 034A     		ldr	r2, .L215
 4952 000c 1360     		str	r3, [r2]
 208:control.h     ****     fxEncoderSetup();
 4953              		.loc 21 208 19
 4954 000e FFF7FEFF 		bl	_Z14fxEncoderSetupv
 209:control.h     **** }
 4955              		.loc 21 209 1
 4956 0012 00BF     		nop
 4957 0014 80BD     		pop	{r7, pc}
 4958              	.L216:
 4959 0016 00BF     		.align	2
 4960              	.L215:
 4961 0018 00000000 		.word	uiLastUpdate
 4962              		.cfi_endproc
 4963              	.LFE4720:
 4965              		.section	.text._Z17fxDroneVoiceSetupf,"ax",%progbits
 4966              		.align	1
 4967              		.global	_Z17fxDroneVoiceSetupf
 4968              		.syntax unified
 4969              		.thumb
 4970              		.thumb_func
 4971              		.fpu fpv5-d16
 4973              	_Z17fxDroneVoiceSetupf:
 4974              	.LFB4721:
 210:control.h     **** 
 211:control.h     **** 
 212:control.h     **** //DroneVoiceOscillatorSetup
 213:control.h     **** void fxDroneVoiceSetup(float flSample_rate){
 4975              		.loc 21 213 44
 4976              		.cfi_startproc
 4977              		@ args = 0, pretend = 0, frame = 8
 4978              		@ frame_needed = 1, uses_anonymous_args = 0
 4979 0000 80B5     		push	{r7, lr}
 4980              		.cfi_def_cfa_offset 8
 4981              		.cfi_offset 7, -8
 4982              		.cfi_offset 14, -4
 4983 0002 82B0     		sub	sp, sp, #8
 4984              		.cfi_def_cfa_offset 16
 4985 0004 00AF     		add	r7, sp, #0
 4986              		.cfi_def_cfa_register 7
 4987 0006 87ED010A 		vstr.32	s0, [r7, #4]
 214:control.h     ****     aobjSingleOscillator[0].Init(flSample_rate, OSC_NORMAL);
 4988              		.loc 21 214 33
 4989 000a 0021     		movs	r1, #0
 4990 000c 97ED010A 		vldr.32	s0, [r7, #4]
 4991 0010 1E48     		ldr	r0, .L218
 4992 0012 FFF7FEFF 		bl	_ZN14clasOscillator4InitEf8OSC_TYPE
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 131


 215:control.h     ****     aobjSingleOscillator[0].SetFreq(100);
 4993              		.loc 21 215 36
 4994 0016 9FED1E0A 		vldr.32	s0, .L218+4
 4995 001a 1C48     		ldr	r0, .L218
 4996 001c FFF7FEFF 		bl	_ZN14clasOscillator7SetFreqEf
 216:control.h     ****     aobjSingleOscillator[0].SetWaveform(WAVE_SIN);
 4997              		.loc 21 216 40
 4998 0020 0021     		movs	r1, #0
 4999 0022 1A48     		ldr	r0, .L218
 5000 0024 FFF7FEFF 		bl	_ZN14clasOscillator11SetWaveformEh
 217:control.h     **** 
 218:control.h     ****     aobjSingleOscillator[1].Init(flSample_rate, OSC_NORMAL);
 5001              		.loc 21 218 33
 5002 0028 0021     		movs	r1, #0
 5003 002a 97ED010A 		vldr.32	s0, [r7, #4]
 5004 002e 1948     		ldr	r0, .L218+8
 5005 0030 FFF7FEFF 		bl	_ZN14clasOscillator4InitEf8OSC_TYPE
 219:control.h     ****     aobjSingleOscillator[1].SetFreq(100);
 5006              		.loc 21 219 36
 5007 0034 9FED160A 		vldr.32	s0, .L218+4
 5008 0038 1648     		ldr	r0, .L218+8
 5009 003a FFF7FEFF 		bl	_ZN14clasOscillator7SetFreqEf
 220:control.h     ****     aobjSingleOscillator[1].SetWaveform(WAVE_TRI);
 5010              		.loc 21 220 40
 5011 003e 0121     		movs	r1, #1
 5012 0040 1448     		ldr	r0, .L218+8
 5013 0042 FFF7FEFF 		bl	_ZN14clasOscillator11SetWaveformEh
 221:control.h     **** 
 222:control.h     ****     aobjSingleOscillator[2].Init(flSample_rate, OSC_NORMAL);
 5014              		.loc 21 222 33
 5015 0046 0021     		movs	r1, #0
 5016 0048 97ED010A 		vldr.32	s0, [r7, #4]
 5017 004c 1248     		ldr	r0, .L218+12
 5018 004e FFF7FEFF 		bl	_ZN14clasOscillator4InitEf8OSC_TYPE
 223:control.h     ****     aobjSingleOscillator[2].SetFreq(100);    
 5019              		.loc 21 223 36
 5020 0052 9FED0F0A 		vldr.32	s0, .L218+4
 5021 0056 1048     		ldr	r0, .L218+12
 5022 0058 FFF7FEFF 		bl	_ZN14clasOscillator7SetFreqEf
 224:control.h     ****     aobjSingleOscillator[2].SetWaveform(WAVE_SAW);
 5023              		.loc 21 224 40
 5024 005c 0221     		movs	r1, #2
 5025 005e 0E48     		ldr	r0, .L218+12
 5026 0060 FFF7FEFF 		bl	_ZN14clasOscillator11SetWaveformEh
 225:control.h     ****     
 226:control.h     ****     aobjSingleOscillator[3].Init(flSample_rate, OSC_NORMAL);
 5027              		.loc 21 226 33
 5028 0064 0021     		movs	r1, #0
 5029 0066 97ED010A 		vldr.32	s0, [r7, #4]
 5030 006a 0C48     		ldr	r0, .L218+16
 5031 006c FFF7FEFF 		bl	_ZN14clasOscillator4InitEf8OSC_TYPE
 227:control.h     ****     aobjSingleOscillator[3].SetFreq(100);
 5032              		.loc 21 227 36
 5033 0070 9FED070A 		vldr.32	s0, .L218+4
 5034 0074 0948     		ldr	r0, .L218+16
 5035 0076 FFF7FEFF 		bl	_ZN14clasOscillator7SetFreqEf
 228:control.h     ****     aobjSingleOscillator[3].SetWaveform(WAVE_SQUARE);
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 132


 5036              		.loc 21 228 40
 5037 007a 0321     		movs	r1, #3
 5038 007c 0748     		ldr	r0, .L218+16
 5039 007e FFF7FEFF 		bl	_ZN14clasOscillator11SetWaveformEh
 229:control.h     **** 
 230:control.h     **** }
 5040              		.loc 21 230 1
 5041 0082 00BF     		nop
 5042 0084 0837     		adds	r7, r7, #8
 5043              		.cfi_def_cfa_offset 8
 5044 0086 BD46     		mov	sp, r7
 5045              		.cfi_def_cfa_register 13
 5046              		@ sp needed
 5047 0088 80BD     		pop	{r7, pc}
 5048              	.L219:
 5049 008a 00BF     		.align	2
 5050              	.L218:
 5051 008c 00000000 		.word	aobjSingleOscillator
 5052 0090 0000C842 		.word	1120403456
 5053 0094 2C000000 		.word	aobjSingleOscillator+44
 5054 0098 58000000 		.word	aobjSingleOscillator+88
 5055 009c 84000000 		.word	aobjSingleOscillator+132
 5056              		.cfi_endproc
 5057              	.LFE4721:
 5059              		.section	.text._Z24fxEncoderSpeedMultiplieri,"ax",%progbits
 5060              		.align	1
 5061              		.global	_Z24fxEncoderSpeedMultiplieri
 5062              		.syntax unified
 5063              		.thumb
 5064              		.thumb_func
 5065              		.fpu fpv5-d16
 5067              	_Z24fxEncoderSpeedMultiplieri:
 5068              	.LFB4722:
 231:control.h     **** 
 232:control.h     **** 
 233:control.h     **** 
 234:control.h     **** float fxEncoderSpeedMultiplier(int iEncoderID){
 5069              		.loc 21 234 47
 5070              		.cfi_startproc
 5071              		@ args = 0, pretend = 0, frame = 24
 5072              		@ frame_needed = 1, uses_anonymous_args = 0
 5073 0000 80B5     		push	{r7, lr}
 5074              		.cfi_def_cfa_offset 8
 5075              		.cfi_offset 7, -8
 5076              		.cfi_offset 14, -4
 5077 0002 86B0     		sub	sp, sp, #24
 5078              		.cfi_def_cfa_offset 32
 5079 0004 00AF     		add	r7, sp, #0
 5080              		.cfi_def_cfa_register 7
 5081 0006 7860     		str	r0, [r7, #4]
 235:control.h     ****     uint32_t uiCurrentTime = objEncTimerMultipler.GetTick(); //Get the current tick of the system
 5082              		.loc 21 235 58
 5083 0008 2748     		ldr	r0, .L223
 5084 000a FFF7FEFF 		bl	_ZN5daisy11TimerHandle7GetTickEv
 5085 000e 7861     		str	r0, [r7, #20]
 236:control.h     ****     uint32_t uiDeltaTime_ = (uiCurrentTime - uiLastTime_[iEncoderID]) & 0xFFFFFFFF; //Make positive
 5086              		.loc 21 236 68
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 133


 5087 0010 264A     		ldr	r2, .L223+4
 5088 0012 7B68     		ldr	r3, [r7, #4]
 5089 0014 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5090              		.loc 21 236 73
 5091 0018 7A69     		ldr	r2, [r7, #20]
 5092 001a D31A     		subs	r3, r2, r3
 5093 001c 3B61     		str	r3, [r7, #16]
 237:control.h     ****     uiLastTime_[iEncoderID] = uiCurrentTime;  //Update lasttime 
 5094              		.loc 21 237 29
 5095 001e 2349     		ldr	r1, .L223+4
 5096 0020 7B68     		ldr	r3, [r7, #4]
 5097 0022 7A69     		ldr	r2, [r7, #20]
 5098 0024 41F82320 		str	r2, [r1, r3, lsl #2]
 5099              	.LBB19:
 238:control.h     ****     //Compute the speed factor based on increments within time. 
 239:control.h     ****     if(uiDeltaTime_ > 0){
 5100              		.loc 21 239 5
 5101 0028 3B69     		ldr	r3, [r7, #16]
 5102 002a 002B     		cmp	r3, #0
 5103 002c 30D0     		beq	.L221
 5104              	.LBB20:
 240:control.h     ****         float flSpeed = 10000.0f / uiDeltaTime_; 
 5105              		.loc 21 240 34
 5106 002e 3B69     		ldr	r3, [r7, #16]
 5107 0030 07EE903A 		vmov	s15, r3	@ int
 5108 0034 B8EE677A 		vcvt.f32.u32	s14, s15
 5109              		.loc 21 240 15
 5110 0038 DFED1D6A 		vldr.32	s13, .L223+8
 5111 003c C6EE877A 		vdiv.f32	s15, s13, s14
 5112 0040 C7ED037A 		vstr.32	s15, [r7, #12]
 241:control.h     ****         flSpeedFactor_[iEncoderID] = 1.0f + (flSpeed * SPEED_SCALE_);
 5113              		.loc 21 241 54
 5114 0044 D7ED037A 		vldr.32	s15, [r7, #12]
 5115 0048 77EEA77A 		vadd.f32	s15, s15, s15
 5116              		.loc 21 241 43
 5117 004c B7EE007A 		vmov.f32	s14, #1.0e+0
 5118 0050 77EE877A 		vadd.f32	s15, s15, s14
 5119              		.loc 21 241 36
 5120 0054 174A     		ldr	r2, .L223+12
 5121 0056 7B68     		ldr	r3, [r7, #4]
 5122 0058 9B00     		lsls	r3, r3, #2
 5123 005a 1344     		add	r3, r3, r2
 5124 005c C3ED007A 		vstr.32	s15, [r3]
 242:control.h     ****         if(flSpeedFactor_[iEncoderID] > MAX_INC_ ) { flSpeedFactor_[iEncoderID] = MAX_INC_; }
 5125              		.loc 21 242 37
 5126 0060 144A     		ldr	r2, .L223+12
 5127 0062 7B68     		ldr	r3, [r7, #4]
 5128 0064 9B00     		lsls	r3, r3, #2
 5129 0066 1344     		add	r3, r3, r2
 5130 0068 D3ED007A 		vldr.32	s15, [r3]
 5131              		.loc 21 242 39
 5132 006c B3EE047A 		vmov.f32	s14, #2.0e+1
 5133 0070 F4EEC77A 		vcmpe.f32	s15, s14
 5134 0074 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5135 0078 CCBF     		ite	gt
 5136 007a 0123     		movgt	r3, #1
 5137 007c 0023     		movle	r3, #0
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 134


 5138 007e DBB2     		uxtb	r3, r3
 5139              		.loc 21 242 9
 5140 0080 002B     		cmp	r3, #0
 5141 0082 05D0     		beq	.L221
 5142              		.loc 21 242 81 discriminator 1
 5143 0084 0B4A     		ldr	r2, .L223+12
 5144 0086 7B68     		ldr	r3, [r7, #4]
 5145 0088 9B00     		lsls	r3, r3, #2
 5146 008a 1344     		add	r3, r3, r2
 5147 008c 0A4A     		ldr	r2, .L223+16
 5148 008e 1A60     		str	r2, [r3]	@ float
 5149              	.L221:
 5150              	.LBE20:
 5151              	.LBE19:
 243:control.h     ****     }
 244:control.h     ****     return flSpeedFactor_[iEncoderID];
 5152              		.loc 21 244 37
 5153 0090 084A     		ldr	r2, .L223+12
 5154 0092 7B68     		ldr	r3, [r7, #4]
 5155 0094 9B00     		lsls	r3, r3, #2
 5156 0096 1344     		add	r3, r3, r2
 5157 0098 1B68     		ldr	r3, [r3]	@ float
 5158 009a 07EE903A 		vmov	s15, r3
 245:control.h     **** }
 5159              		.loc 21 245 1
 5160 009e B0EE670A 		vmov.f32	s0, s15
 5161 00a2 1837     		adds	r7, r7, #24
 5162              		.cfi_def_cfa_offset 8
 5163 00a4 BD46     		mov	sp, r7
 5164              		.cfi_def_cfa_register 13
 5165              		@ sp needed
 5166 00a6 80BD     		pop	{r7, pc}
 5167              	.L224:
 5168              		.align	2
 5169              	.L223:
 5170 00a8 00000000 		.word	objEncTimerMultipler
 5171 00ac 00000000 		.word	uiLastTime_
 5172 00b0 00401C46 		.word	1176256512
 5173 00b4 00000000 		.word	flSpeedFactor_
 5174 00b8 0000A041 		.word	1101004800
 5175              		.cfi_endproc
 5176              	.LFE4722:
 5178              		.section	.text._Z14fxFrequencyIncR14clasOscillatorRN5daisy11clasEncoderEi,"ax",%progbits
 5179              		.align	1
 5180              		.global	_Z14fxFrequencyIncR14clasOscillatorRN5daisy11clasEncoderEi
 5181              		.syntax unified
 5182              		.thumb
 5183              		.thumb_func
 5184              		.fpu fpv5-d16
 5186              	_Z14fxFrequencyIncR14clasOscillatorRN5daisy11clasEncoderEi:
 5187              	.LFB4723:
 246:control.h     **** 
 247:control.h     **** 
 248:control.h     **** //Encoder Frequency Increment
 249:control.h     **** void fxFrequencyInc(clasOscillator& osc, clasEncoder& enc, int iEncoderID){
 5188              		.loc 21 249 75
 5189              		.cfi_startproc
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 135


 5190              		@ args = 0, pretend = 0, frame = 32
 5191              		@ frame_needed = 1, uses_anonymous_args = 0
 5192 0000 80B5     		push	{r7, lr}
 5193              		.cfi_def_cfa_offset 8
 5194              		.cfi_offset 7, -8
 5195              		.cfi_offset 14, -4
 5196 0002 88B0     		sub	sp, sp, #32
 5197              		.cfi_def_cfa_offset 40
 5198 0004 00AF     		add	r7, sp, #0
 5199              		.cfi_def_cfa_register 7
 5200 0006 F860     		str	r0, [r7, #12]
 5201 0008 B960     		str	r1, [r7, #8]
 5202 000a 7A60     		str	r2, [r7, #4]
 250:control.h     ****     float flCurrentFreq = osc.GetFreq();
 5203              		.loc 21 250 38
 5204 000c F868     		ldr	r0, [r7, #12]
 5205 000e FFF7FEFF 		bl	_ZN14clasOscillator7GetFreqEv
 5206 0012 87ED070A 		vstr.32	s0, [r7, #28]
 251:control.h     ****     int iDirection = enc.Increment();
 5207              		.loc 21 251 35
 5208 0016 B868     		ldr	r0, [r7, #8]
 5209 0018 FFF7FEFF 		bl	_ZNK5daisy11clasEncoder9IncrementEv
 5210 001c B861     		str	r0, [r7, #24]
 5211              	.LBB21:
 252:control.h     ****     if (iDirection != 0) {
 5212              		.loc 21 252 5
 5213 001e BB69     		ldr	r3, [r7, #24]
 5214 0020 002B     		cmp	r3, #0
 5215 0022 18D0     		beq	.L227
 5216              	.LBB22:
 253:control.h     ****         float flSpeedScale = fxEncoderSpeedMultiplier(iEncoderID);
 5217              		.loc 21 253 54
 5218 0024 7868     		ldr	r0, [r7, #4]
 5219 0026 FFF7FEFF 		bl	_Z24fxEncoderSpeedMultiplieri
 5220 002a 87ED050A 		vstr.32	s0, [r7, #20]
 254:control.h     ****         flCurrentFreq += (flSpeedScale * iDirection);
 5221              		.loc 21 254 40
 5222 002e BB69     		ldr	r3, [r7, #24]
 5223 0030 07EE903A 		vmov	s15, r3	@ int
 5224 0034 B8EEE77A 		vcvt.f32.s32	s14, s15
 5225 0038 D7ED057A 		vldr.32	s15, [r7, #20]
 5226 003c 67EE277A 		vmul.f32	s15, s14, s15
 5227              		.loc 21 254 23
 5228 0040 97ED077A 		vldr.32	s14, [r7, #28]
 5229 0044 77EE277A 		vadd.f32	s15, s14, s15
 5230 0048 C7ED077A 		vstr.32	s15, [r7, #28]
 255:control.h     ****         osc.SetFreq(flCurrentFreq);
 5231              		.loc 21 255 20
 5232 004c 97ED070A 		vldr.32	s0, [r7, #28]
 5233 0050 F868     		ldr	r0, [r7, #12]
 5234 0052 FFF7FEFF 		bl	_ZN14clasOscillator7SetFreqEf
 5235              	.L227:
 5236              	.LBE22:
 5237              	.LBE21:
 256:control.h     ****     }
 257:control.h     **** }
 5238              		.loc 21 257 1
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 136


 5239 0056 00BF     		nop
 5240 0058 2037     		adds	r7, r7, #32
 5241              		.cfi_def_cfa_offset 8
 5242 005a BD46     		mov	sp, r7
 5243              		.cfi_def_cfa_register 13
 5244              		@ sp needed
 5245 005c 80BD     		pop	{r7, pc}
 5246              		.cfi_endproc
 5247              	.LFE4723:
 5249              		.section	.text._Z19fxFrequencyMicroIncR14clasOscillatorRN5daisy11clasEncoderEi,"ax",%progbits
 5250              		.align	1
 5251              		.global	_Z19fxFrequencyMicroIncR14clasOscillatorRN5daisy11clasEncoderEi
 5252              		.syntax unified
 5253              		.thumb
 5254              		.thumb_func
 5255              		.fpu fpv5-d16
 5257              	_Z19fxFrequencyMicroIncR14clasOscillatorRN5daisy11clasEncoderEi:
 5258              	.LFB4724:
 258:control.h     **** 
 259:control.h     **** 
 260:control.h     **** //Encoder Frequency Micro Increment 0.1 steps
 261:control.h     **** void fxFrequencyMicroInc(clasOscillator& osc, clasEncoder& enc, int iEncoderID){
 5259              		.loc 21 261 80
 5260              		.cfi_startproc
 5261              		@ args = 0, pretend = 0, frame = 32
 5262              		@ frame_needed = 1, uses_anonymous_args = 0
 5263 0000 80B5     		push	{r7, lr}
 5264              		.cfi_def_cfa_offset 8
 5265              		.cfi_offset 7, -8
 5266              		.cfi_offset 14, -4
 5267 0002 88B0     		sub	sp, sp, #32
 5268              		.cfi_def_cfa_offset 40
 5269 0004 00AF     		add	r7, sp, #0
 5270              		.cfi_def_cfa_register 7
 5271 0006 F860     		str	r0, [r7, #12]
 5272 0008 B960     		str	r1, [r7, #8]
 5273 000a 7A60     		str	r2, [r7, #4]
 262:control.h     ****     float flCurrentFreq = osc.GetFreq();
 5274              		.loc 21 262 38
 5275 000c F868     		ldr	r0, [r7, #12]
 5276 000e FFF7FEFF 		bl	_ZN14clasOscillator7GetFreqEv
 5277 0012 87ED070A 		vstr.32	s0, [r7, #28]
 263:control.h     ****     int iDirection = enc.Increment();
 5278              		.loc 21 263 35
 5279 0016 B868     		ldr	r0, [r7, #8]
 5280 0018 FFF7FEFF 		bl	_ZNK5daisy11clasEncoder9IncrementEv
 5281 001c B861     		str	r0, [r7, #24]
 5282              	.LBB23:
 264:control.h     ****     if (iDirection != 0) {
 5283              		.loc 21 264 5
 5284 001e BB69     		ldr	r3, [r7, #24]
 5285 0020 002B     		cmp	r3, #0
 5286 0022 22D0     		beq	.L230
 5287              	.LBB24:
 265:control.h     ****         float flSpeedScale = fxEncoderSpeedMultiplier(iEncoderID);
 5288              		.loc 21 265 54
 5289 0024 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 137


 5290 0026 FFF7FEFF 		bl	_Z24fxEncoderSpeedMultiplieri
 5291 002a 87ED050A 		vstr.32	s0, [r7, #20]
 266:control.h     ****         flCurrentFreq += ( (flSpeedScale * 0.1) * iDirection );
 5292              		.loc 21 266 23
 5293 002e D7ED077A 		vldr.32	s15, [r7, #28]
 5294 0032 B7EEE76A 		vcvt.f64.f32	d6, s15
 5295              		.loc 21 266 29
 5296 0036 D7ED057A 		vldr.32	s15, [r7, #20]
 5297 003a B7EEE77A 		vcvt.f64.f32	d7, s15
 5298              		.loc 21 266 42
 5299 003e 9FED0E5B 		vldr.64	d5, .L231
 5300 0042 27EE055B 		vmul.f64	d5, d7, d5
 5301              		.loc 21 266 49
 5302 0046 BB69     		ldr	r3, [r7, #24]
 5303 0048 07EE903A 		vmov	s15, r3	@ int
 5304 004c B8EEE77B 		vcvt.f64.s32	d7, s15
 5305 0050 25EE077B 		vmul.f64	d7, d5, d7
 5306              		.loc 21 266 23
 5307 0054 36EE077B 		vadd.f64	d7, d6, d7
 5308 0058 F7EEC77B 		vcvt.f32.f64	s15, d7
 5309 005c C7ED077A 		vstr.32	s15, [r7, #28]
 267:control.h     ****         osc.SetFreq(flCurrentFreq);
 5310              		.loc 21 267 20
 5311 0060 97ED070A 		vldr.32	s0, [r7, #28]
 5312 0064 F868     		ldr	r0, [r7, #12]
 5313 0066 FFF7FEFF 		bl	_ZN14clasOscillator7SetFreqEf
 5314              	.L230:
 5315              	.LBE24:
 5316              	.LBE23:
 268:control.h     ****     }
 269:control.h     **** }
 5317              		.loc 21 269 1
 5318 006a 00BF     		nop
 5319 006c 2037     		adds	r7, r7, #32
 5320              		.cfi_def_cfa_offset 8
 5321 006e BD46     		mov	sp, r7
 5322              		.cfi_def_cfa_register 13
 5323              		@ sp needed
 5324 0070 80BD     		pop	{r7, pc}
 5325              	.L232:
 5326 0072 00BFAFF3 		.align	3
 5326      0080
 5327              	.L231:
 5328 0078 9A999999 		.word	-1717986918
 5329 007c 9999B93F 		.word	1069128089
 5330              		.cfi_endproc
 5331              	.LFE4724:
 5333              		.section	.text._Z11resetParentv,"ax",%progbits
 5334              		.align	1
 5335              		.global	_Z11resetParentv
 5336              		.syntax unified
 5337              		.thumb
 5338              		.thumb_func
 5339              		.fpu fpv5-d16
 5341              	_Z11resetParentv:
 5342              	.LFB4725:
 270:control.h     **** 
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 138


 271:control.h     **** 
 272:control.h     **** //Reset Parent Oscillator
 273:control.h     **** void resetParent(){
 5343              		.loc 21 273 19
 5344              		.cfi_startproc
 5345              		@ args = 0, pretend = 0, frame = 0
 5346              		@ frame_needed = 1, uses_anonymous_args = 0
 5347              		@ link register save eliminated.
 5348 0000 80B4     		push	{r7}
 5349              		.cfi_def_cfa_offset 4
 5350              		.cfi_offset 7, -4
 5351 0002 00AF     		add	r7, sp, #0
 5352              		.cfi_def_cfa_register 7
 274:control.h     ****     objParent_ = nullptr;
 5353              		.loc 21 274 16
 5354 0004 034B     		ldr	r3, .L234
 5355 0006 0022     		movs	r2, #0
 5356 0008 1A60     		str	r2, [r3]
 275:control.h     **** }
 5357              		.loc 21 275 1
 5358 000a 00BF     		nop
 5359 000c BD46     		mov	sp, r7
 5360              		.cfi_def_cfa_register 13
 5361              		@ sp needed
 5362 000e 5DF8047B 		ldr	r7, [sp], #4
 5363              		.cfi_restore 7
 5364              		.cfi_def_cfa_offset 0
 5365 0012 7047     		bx	lr
 5366              	.L235:
 5367              		.align	2
 5368              	.L234:
 5369 0014 00000000 		.word	objParent_
 5370              		.cfi_endproc
 5371              	.LFE4725:
 5373              		.section	.text._Z10resetChildv,"ax",%progbits
 5374              		.align	1
 5375              		.global	_Z10resetChildv
 5376              		.syntax unified
 5377              		.thumb
 5378              		.thumb_func
 5379              		.fpu fpv5-d16
 5381              	_Z10resetChildv:
 5382              	.LFB4726:
 276:control.h     **** 
 277:control.h     **** 
 278:control.h     **** //Reset Child Oscillator
 279:control.h     **** void resetChild(){
 5383              		.loc 21 279 18
 5384              		.cfi_startproc
 5385              		@ args = 0, pretend = 0, frame = 0
 5386              		@ frame_needed = 1, uses_anonymous_args = 0
 5387              		@ link register save eliminated.
 5388 0000 80B4     		push	{r7}
 5389              		.cfi_def_cfa_offset 4
 5390              		.cfi_offset 7, -4
 5391 0002 00AF     		add	r7, sp, #0
 5392              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 139


 280:control.h     ****     objChild_ = nullptr;
 5393              		.loc 21 280 15
 5394 0004 034B     		ldr	r3, .L237
 5395 0006 0022     		movs	r2, #0
 5396 0008 1A60     		str	r2, [r3]
 281:control.h     **** }
 5397              		.loc 21 281 1
 5398 000a 00BF     		nop
 5399 000c BD46     		mov	sp, r7
 5400              		.cfi_def_cfa_register 13
 5401              		@ sp needed
 5402 000e 5DF8047B 		ldr	r7, [sp], #4
 5403              		.cfi_restore 7
 5404              		.cfi_def_cfa_offset 0
 5405 0012 7047     		bx	lr
 5406              	.L238:
 5407              		.align	2
 5408              	.L237:
 5409 0014 00000000 		.word	objChild_
 5410              		.cfi_endproc
 5411              	.LFE4726:
 5413              		.section	.text._Z9setParentP14clasOscillator,"ax",%progbits
 5414              		.align	1
 5415              		.global	_Z9setParentP14clasOscillator
 5416              		.syntax unified
 5417              		.thumb
 5418              		.thumb_func
 5419              		.fpu fpv5-d16
 5421              	_Z9setParentP14clasOscillator:
 5422              	.LFB4727:
 282:control.h     **** 
 283:control.h     **** 
 284:control.h     **** //Set Parent Oscillator
 285:control.h     **** void setParent(clasOscillator* osc){
 5423              		.loc 21 285 36
 5424              		.cfi_startproc
 5425              		@ args = 0, pretend = 0, frame = 8
 5426              		@ frame_needed = 1, uses_anonymous_args = 0
 5427 0000 80B5     		push	{r7, lr}
 5428              		.cfi_def_cfa_offset 8
 5429              		.cfi_offset 7, -8
 5430              		.cfi_offset 14, -4
 5431 0002 82B0     		sub	sp, sp, #8
 5432              		.cfi_def_cfa_offset 16
 5433 0004 00AF     		add	r7, sp, #0
 5434              		.cfi_def_cfa_register 7
 5435 0006 7860     		str	r0, [r7, #4]
 286:control.h     ****     objParent_ = osc;
 5436              		.loc 21 286 16
 5437 0008 044A     		ldr	r2, .L240
 5438 000a 7B68     		ldr	r3, [r7, #4]
 5439 000c 1360     		str	r3, [r2]
 287:control.h     ****     // hw.PrintLine("Parent Set");
 288:control.h     ****     objResetTimer.Start();
 5440              		.loc 21 288 24
 5441 000e 0448     		ldr	r0, .L240+4
 5442 0010 FFF7FEFF 		bl	_ZN5daisy11TimerHandle5StartEv
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 140


 289:control.h     **** }
 5443              		.loc 21 289 1
 5444 0014 00BF     		nop
 5445 0016 0837     		adds	r7, r7, #8
 5446              		.cfi_def_cfa_offset 8
 5447 0018 BD46     		mov	sp, r7
 5448              		.cfi_def_cfa_register 13
 5449              		@ sp needed
 5450 001a 80BD     		pop	{r7, pc}
 5451              	.L241:
 5452              		.align	2
 5453              	.L240:
 5454 001c 00000000 		.word	objParent_
 5455 0020 00000000 		.word	objResetTimer
 5456              		.cfi_endproc
 5457              	.LFE4727:
 5459              		.section	.text._Z8setChildP14clasOscillator,"ax",%progbits
 5460              		.align	1
 5461              		.global	_Z8setChildP14clasOscillator
 5462              		.syntax unified
 5463              		.thumb
 5464              		.thumb_func
 5465              		.fpu fpv5-d16
 5467              	_Z8setChildP14clasOscillator:
 5468              	.LFB4728:
 290:control.h     **** 
 291:control.h     **** 
 292:control.h     **** //Set Child Oscillator
 293:control.h     **** void setChild(clasOscillator* osc){
 5469              		.loc 21 293 35
 5470              		.cfi_startproc
 5471              		@ args = 0, pretend = 0, frame = 8
 5472              		@ frame_needed = 1, uses_anonymous_args = 0
 5473 0000 90B5     		push	{r4, r7, lr}
 5474              		.cfi_def_cfa_offset 12
 5475              		.cfi_offset 4, -12
 5476              		.cfi_offset 7, -8
 5477              		.cfi_offset 14, -4
 5478 0002 83B0     		sub	sp, sp, #12
 5479              		.cfi_def_cfa_offset 24
 5480 0004 00AF     		add	r7, sp, #0
 5481              		.cfi_def_cfa_register 7
 5482 0006 7860     		str	r0, [r7, #4]
 294:control.h     ****     objChild_ = osc;
 5483              		.loc 21 294 15
 5484 0008 0A4A     		ldr	r2, .L243
 5485 000a 7B68     		ldr	r3, [r7, #4]
 5486 000c 1360     		str	r3, [r2]
 295:control.h     ****     objChild_->SetFreq(objParent_->GetFreq());
 5487              		.loc 21 295 23
 5488 000e 094B     		ldr	r3, .L243
 5489 0010 1C68     		ldr	r4, [r3]
 5490 0012 094B     		ldr	r3, .L243+4
 5491 0014 1B68     		ldr	r3, [r3]
 5492 0016 1846     		mov	r0, r3
 5493 0018 FFF7FEFF 		bl	_ZN14clasOscillator7GetFreqEv
 5494 001c F0EE407A 		vmov.f32	s15, s0
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 141


 5495 0020 B0EE670A 		vmov.f32	s0, s15
 5496 0024 2046     		mov	r0, r4
 5497 0026 FFF7FEFF 		bl	_ZN14clasOscillator7SetFreqEf
 296:control.h     ****     // hw.PrintLine("Child Set");
 297:control.h     **** }
 5498              		.loc 21 297 1
 5499 002a 00BF     		nop
 5500 002c 0C37     		adds	r7, r7, #12
 5501              		.cfi_def_cfa_offset 12
 5502 002e BD46     		mov	sp, r7
 5503              		.cfi_def_cfa_register 13
 5504              		@ sp needed
 5505 0030 90BD     		pop	{r4, r7, pc}
 5506              	.L244:
 5507 0032 00BF     		.align	2
 5508              	.L243:
 5509 0034 00000000 		.word	objChild_
 5510 0038 00000000 		.word	objParent_
 5511              		.cfi_endproc
 5512              	.LFE4728:
 5514              		.section	.text._Z9getParentv,"ax",%progbits
 5515              		.align	1
 5516              		.global	_Z9getParentv
 5517              		.syntax unified
 5518              		.thumb
 5519              		.thumb_func
 5520              		.fpu fpv5-d16
 5522              	_Z9getParentv:
 5523              	.LFB4729:
 298:control.h     **** 
 299:control.h     **** 
 300:control.h     **** //Get Parent Oscillator
 301:control.h     **** clasOscillator* getParent(){
 5524              		.loc 21 301 28
 5525              		.cfi_startproc
 5526              		@ args = 0, pretend = 0, frame = 0
 5527              		@ frame_needed = 1, uses_anonymous_args = 0
 5528              		@ link register save eliminated.
 5529 0000 80B4     		push	{r7}
 5530              		.cfi_def_cfa_offset 4
 5531              		.cfi_offset 7, -4
 5532 0002 00AF     		add	r7, sp, #0
 5533              		.cfi_def_cfa_register 7
 302:control.h     ****     return objParent_;
 5534              		.loc 21 302 12
 5535 0004 034B     		ldr	r3, .L247
 5536 0006 1B68     		ldr	r3, [r3]
 303:control.h     **** }
 5537              		.loc 21 303 1
 5538 0008 1846     		mov	r0, r3
 5539 000a BD46     		mov	sp, r7
 5540              		.cfi_def_cfa_register 13
 5541              		@ sp needed
 5542 000c 5DF8047B 		ldr	r7, [sp], #4
 5543              		.cfi_restore 7
 5544              		.cfi_def_cfa_offset 0
 5545 0010 7047     		bx	lr
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 142


 5546              	.L248:
 5547 0012 00BF     		.align	2
 5548              	.L247:
 5549 0014 00000000 		.word	objParent_
 5550              		.cfi_endproc
 5551              	.LFE4729:
 5553              		.section	.text._Z8getChildv,"ax",%progbits
 5554              		.align	1
 5555              		.global	_Z8getChildv
 5556              		.syntax unified
 5557              		.thumb
 5558              		.thumb_func
 5559              		.fpu fpv5-d16
 5561              	_Z8getChildv:
 5562              	.LFB4730:
 304:control.h     **** 
 305:control.h     **** 
 306:control.h     **** //Get Child Oscillator
 307:control.h     **** clasOscillator* getChild(){
 5563              		.loc 21 307 27
 5564              		.cfi_startproc
 5565              		@ args = 0, pretend = 0, frame = 0
 5566              		@ frame_needed = 1, uses_anonymous_args = 0
 5567              		@ link register save eliminated.
 5568 0000 80B4     		push	{r7}
 5569              		.cfi_def_cfa_offset 4
 5570              		.cfi_offset 7, -4
 5571 0002 00AF     		add	r7, sp, #0
 5572              		.cfi_def_cfa_register 7
 308:control.h     ****     return objChild_;
 5573              		.loc 21 308 12
 5574 0004 034B     		ldr	r3, .L251
 5575 0006 1B68     		ldr	r3, [r3]
 309:control.h     **** }
 5576              		.loc 21 309 1
 5577 0008 1846     		mov	r0, r3
 5578 000a BD46     		mov	sp, r7
 5579              		.cfi_def_cfa_register 13
 5580              		@ sp needed
 5581 000c 5DF8047B 		ldr	r7, [sp], #4
 5582              		.cfi_restore 7
 5583              		.cfi_def_cfa_offset 0
 5584 0010 7047     		bx	lr
 5585              	.L252:
 5586 0012 00BF     		.align	2
 5587              	.L251:
 5588 0014 00000000 		.word	objChild_
 5589              		.cfi_endproc
 5590              	.LFE4730:
 5592              		.section	.rodata
 5593              		.align	2
 5594              	.LC0:
 5595 0000 52657365 		.ascii	"Reset\000"
 5595      7400
 5596              		.section	.text._Z20fxResetTimerCallBackPv,"ax",%progbits
 5597              		.align	1
 5598              		.global	_Z20fxResetTimerCallBackPv
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 143


 5599              		.syntax unified
 5600              		.thumb
 5601              		.thumb_func
 5602              		.fpu fpv5-d16
 5604              	_Z20fxResetTimerCallBackPv:
 5605              	.LFB4731:
 310:control.h     **** 
 311:control.h     **** 
 312:control.h     **** //Callback function for the resetting of the parent child system. 
 313:control.h     **** void fxResetTimerCallBack(void* data){
 5606              		.loc 21 313 38
 5607              		.cfi_startproc
 5608              		@ args = 0, pretend = 0, frame = 8
 5609              		@ frame_needed = 1, uses_anonymous_args = 0
 5610 0000 80B5     		push	{r7, lr}
 5611              		.cfi_def_cfa_offset 8
 5612              		.cfi_offset 7, -8
 5613              		.cfi_offset 14, -4
 5614 0002 82B0     		sub	sp, sp, #8
 5615              		.cfi_def_cfa_offset 16
 5616 0004 00AF     		add	r7, sp, #0
 5617              		.cfi_def_cfa_register 7
 5618 0006 7860     		str	r0, [r7, #4]
 314:control.h     ****     hw.PrintLine("Reset");
 5619              		.loc 21 314 17
 5620 0008 0648     		ldr	r0, .L254
 5621 000a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 315:control.h     ****     resetParent();
 5622              		.loc 21 315 16
 5623 000e FFF7FEFF 		bl	_Z11resetParentv
 316:control.h     ****     resetChild();
 5624              		.loc 21 316 15
 5625 0012 FFF7FEFF 		bl	_Z10resetChildv
 317:control.h     ****     objResetTimer.Stop();
 5626              		.loc 21 317 23
 5627 0016 0448     		ldr	r0, .L254+4
 5628 0018 FFF7FEFF 		bl	_ZN5daisy11TimerHandle4StopEv
 318:control.h     **** }
 5629              		.loc 21 318 1
 5630 001c 00BF     		nop
 5631 001e 0837     		adds	r7, r7, #8
 5632              		.cfi_def_cfa_offset 8
 5633 0020 BD46     		mov	sp, r7
 5634              		.cfi_def_cfa_register 13
 5635              		@ sp needed
 5636 0022 80BD     		pop	{r7, pc}
 5637              	.L255:
 5638              		.align	2
 5639              	.L254:
 5640 0024 00000000 		.word	.LC0
 5641 0028 00000000 		.word	objResetTimer
 5642              		.cfi_endproc
 5643              	.LFE4731:
 5645              		.section	.rodata
 5646 0006 0000     		.align	2
 5647              	.LC1:
 5648 0008 4D656E75 		.ascii	"Menu Reset\000"
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 144


 5648      20526573 
 5648      657400
 5649              		.section	.text._Z24fxResetMenuTimerCallBackPv,"ax",%progbits
 5650              		.align	1
 5651              		.global	_Z24fxResetMenuTimerCallBackPv
 5652              		.syntax unified
 5653              		.thumb
 5654              		.thumb_func
 5655              		.fpu fpv5-d16
 5657              	_Z24fxResetMenuTimerCallBackPv:
 5658              	.LFB4732:
 319:control.h     **** 
 320:control.h     **** 
 321:control.h     **** //Callback function for the resetting of the parent child system. 
 322:control.h     **** void fxResetMenuTimerCallBack(void* data){
 5659              		.loc 21 322 42
 5660              		.cfi_startproc
 5661              		@ args = 0, pretend = 0, frame = 8
 5662              		@ frame_needed = 1, uses_anonymous_args = 0
 5663 0000 80B5     		push	{r7, lr}
 5664              		.cfi_def_cfa_offset 8
 5665              		.cfi_offset 7, -8
 5666              		.cfi_offset 14, -4
 5667 0002 82B0     		sub	sp, sp, #8
 5668              		.cfi_def_cfa_offset 16
 5669 0004 00AF     		add	r7, sp, #0
 5670              		.cfi_def_cfa_register 7
 5671 0006 7860     		str	r0, [r7, #4]
 323:control.h     ****     hw.PrintLine("Menu Reset");
 5672              		.loc 21 323 17
 5673 0008 0B48     		ldr	r0, .L257
 5674 000a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 324:control.h     ****     eMenuState = M_MAIN;
 5675              		.loc 21 324 16
 5676 000e 0B4B     		ldr	r3, .L257+4
 5677 0010 0022     		movs	r2, #0
 5678 0012 1A60     		str	r2, [r3]
 325:control.h     ****     eMain = eResetMainMenuState;
 5679              		.loc 21 325 11
 5680 0014 0A4B     		ldr	r3, .L257+8
 5681 0016 1B68     		ldr	r3, [r3]
 5682 0018 0A4A     		ldr	r2, .L257+12
 5683 001a 1360     		str	r3, [r2]
 326:control.h     ****     eSub = LFO_IDLE;
 5684              		.loc 21 326 10
 5685 001c 0A4B     		ldr	r3, .L257+16
 5686 001e 0022     		movs	r2, #0
 5687 0020 1A60     		str	r2, [r3]
 327:control.h     ****     eMode = LFO_IDLE;
 5688              		.loc 21 327 11
 5689 0022 0A4B     		ldr	r3, .L257+20
 5690 0024 0022     		movs	r2, #0
 5691 0026 1A60     		str	r2, [r3]
 328:control.h     ****     objResetTimer.Stop();
 5692              		.loc 21 328 23
 5693 0028 0948     		ldr	r0, .L257+24
 5694 002a FFF7FEFF 		bl	_ZN5daisy11TimerHandle4StopEv
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 145


 329:control.h     **** }
 5695              		.loc 21 329 1
 5696 002e 00BF     		nop
 5697 0030 0837     		adds	r7, r7, #8
 5698              		.cfi_def_cfa_offset 8
 5699 0032 BD46     		mov	sp, r7
 5700              		.cfi_def_cfa_register 13
 5701              		@ sp needed
 5702 0034 80BD     		pop	{r7, pc}
 5703              	.L258:
 5704 0036 00BF     		.align	2
 5705              	.L257:
 5706 0038 08000000 		.word	.LC1
 5707 003c 00000000 		.word	eMenuState
 5708 0040 00000000 		.word	eResetMainMenuState
 5709 0044 00000000 		.word	eMain
 5710 0048 00000000 		.word	eSub
 5711 004c 00000000 		.word	eMode
 5712 0050 00000000 		.word	objResetTimer
 5713              		.cfi_endproc
 5714              	.LFE4732:
 5716              		.section	.text._Z16fxResetTimerInitv,"ax",%progbits
 5717              		.align	1
 5718              		.global	_Z16fxResetTimerInitv
 5719              		.syntax unified
 5720              		.thumb
 5721              		.thumb_func
 5722              		.fpu fpv5-d16
 5724              	_Z16fxResetTimerInitv:
 5725              	.LFB4733:
 330:control.h     **** 
 331:control.h     **** 
 332:control.h     **** //Reset Timer Init
 333:control.h     **** void fxResetTimerInit(){
 5726              		.loc 21 333 24
 5727              		.cfi_startproc
 5728              		@ args = 0, pretend = 0, frame = 16
 5729              		@ frame_needed = 1, uses_anonymous_args = 0
 5730 0000 80B5     		push	{r7, lr}
 5731              		.cfi_def_cfa_offset 8
 5732              		.cfi_offset 7, -8
 5733              		.cfi_offset 14, -4
 5734 0002 84B0     		sub	sp, sp, #16
 5735              		.cfi_def_cfa_offset 24
 5736 0004 00AF     		add	r7, sp, #0
 5737              		.cfi_def_cfa_register 7
 334:control.h     ****     TimerHandle::Config ResetTimerConfig;
 5738              		.loc 21 334 25
 5739 0006 3B46     		mov	r3, r7
 5740 0008 1846     		mov	r0, r3
 5741 000a FFF7FEFF 		bl	_ZN5daisy11TimerHandle6ConfigC1Ev
 335:control.h     ****     ResetTimerConfig.dir = TimerHandle::Config::CounterDir::UP;
 5742              		.loc 21 335 26
 5743 000e 0023     		movs	r3, #0
 5744 0010 7B60     		str	r3, [r7, #4]
 336:control.h     ****     ResetTimerConfig.enable_irq = true;
 5745              		.loc 21 336 33
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 146


 5746 0012 0123     		movs	r3, #1
 5747 0014 3B73     		strb	r3, [r7, #12]
 337:control.h     ****     ResetTimerConfig.period = PERIOD;
 5748              		.loc 21 337 29
 5749 0016 44F62063 		movw	r3, #20000
 5750 001a BB60     		str	r3, [r7, #8]
 338:control.h     ****     ResetTimerConfig.periph = TimerHandle::Config::Peripheral::TIM_4;
 5751              		.loc 21 338 29
 5752 001c 0223     		movs	r3, #2
 5753 001e 3B60     		str	r3, [r7]
 339:control.h     ****     objResetTimer.Init(ResetTimerConfig);
 5754              		.loc 21 339 23
 5755 0020 3B46     		mov	r3, r7
 5756 0022 1946     		mov	r1, r3
 5757 0024 0948     		ldr	r0, .L260
 5758 0026 FFF7FEFF 		bl	_ZN5daisy11TimerHandle4InitERKNS0_6ConfigE
 340:control.h     ****     objResetTimer.SetPrescaler(39999); //Sets the rate in which the timer ticks, 5khz. 
 5759              		.loc 21 340 31
 5760 002a 49F63F41 		movw	r1, #39999
 5761 002e 0748     		ldr	r0, .L260
 5762 0030 FFF7FEFF 		bl	_ZN5daisy11TimerHandle12SetPrescalerEm
 341:control.h     ****     objResetTimer.SetCallback(fxResetTimerCallBack);
 5763              		.loc 21 341 30
 5764 0034 0022     		movs	r2, #0
 5765 0036 0649     		ldr	r1, .L260+4
 5766 0038 0448     		ldr	r0, .L260
 5767 003a FFF7FEFF 		bl	_ZN5daisy11TimerHandle11SetCallbackEPFvPvES1_
 342:control.h     ****     objResetTimer.Start();
 5768              		.loc 21 342 24
 5769 003e 0348     		ldr	r0, .L260
 5770 0040 FFF7FEFF 		bl	_ZN5daisy11TimerHandle5StartEv
 343:control.h     **** }
 5771              		.loc 21 343 1
 5772 0044 00BF     		nop
 5773 0046 1037     		adds	r7, r7, #16
 5774              		.cfi_def_cfa_offset 8
 5775 0048 BD46     		mov	sp, r7
 5776              		.cfi_def_cfa_register 13
 5777              		@ sp needed
 5778 004a 80BD     		pop	{r7, pc}
 5779              	.L261:
 5780              		.align	2
 5781              	.L260:
 5782 004c 00000000 		.word	objResetTimer
 5783 0050 00000000 		.word	_Z20fxResetTimerCallBackPv
 5784              		.cfi_endproc
 5785              	.LFE4733:
 5787              		.section	.text._Z20fxResetMenuTimerInitv,"ax",%progbits
 5788              		.align	1
 5789              		.global	_Z20fxResetMenuTimerInitv
 5790              		.syntax unified
 5791              		.thumb
 5792              		.thumb_func
 5793              		.fpu fpv5-d16
 5795              	_Z20fxResetMenuTimerInitv:
 5796              	.LFB4734:
 344:control.h     **** 
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 147


 345:control.h     **** //Reset Timer Init
 346:control.h     **** void fxResetMenuTimerInit(){
 5797              		.loc 21 346 28
 5798              		.cfi_startproc
 5799              		@ args = 0, pretend = 0, frame = 16
 5800              		@ frame_needed = 1, uses_anonymous_args = 0
 5801 0000 80B5     		push	{r7, lr}
 5802              		.cfi_def_cfa_offset 8
 5803              		.cfi_offset 7, -8
 5804              		.cfi_offset 14, -4
 5805 0002 84B0     		sub	sp, sp, #16
 5806              		.cfi_def_cfa_offset 24
 5807 0004 00AF     		add	r7, sp, #0
 5808              		.cfi_def_cfa_register 7
 347:control.h     ****     TimerHandle::Config ResetTimerConfig;
 5809              		.loc 21 347 25
 5810 0006 3B46     		mov	r3, r7
 5811 0008 1846     		mov	r0, r3
 5812 000a FFF7FEFF 		bl	_ZN5daisy11TimerHandle6ConfigC1Ev
 348:control.h     ****     ResetTimerConfig.dir = TimerHandle::Config::CounterDir::UP;
 5813              		.loc 21 348 26
 5814 000e 0023     		movs	r3, #0
 5815 0010 7B60     		str	r3, [r7, #4]
 349:control.h     ****     ResetTimerConfig.enable_irq = true;
 5816              		.loc 21 349 33
 5817 0012 0123     		movs	r3, #1
 5818 0014 3B73     		strb	r3, [r7, #12]
 350:control.h     ****     ResetTimerConfig.period = 60000; //5 second reset timer. 
 5819              		.loc 21 350 29
 5820 0016 4EF66023 		movw	r3, #60000
 5821 001a BB60     		str	r3, [r7, #8]
 351:control.h     ****     ResetTimerConfig.periph = TimerHandle::Config::Peripheral::TIM_3;
 5822              		.loc 21 351 29
 5823 001c 0123     		movs	r3, #1
 5824 001e 3B60     		str	r3, [r7]
 352:control.h     ****     objResetMenuTimer.Init(ResetTimerConfig);
 5825              		.loc 21 352 27
 5826 0020 3B46     		mov	r3, r7
 5827 0022 1946     		mov	r1, r3
 5828 0024 0948     		ldr	r0, .L263
 5829 0026 FFF7FEFF 		bl	_ZN5daisy11TimerHandle4InitERKNS0_6ConfigE
 353:control.h     ****     objResetMenuTimer.SetPrescaler(39999); //Sets the rate in which the timer ticks, 5khz. 
 5830              		.loc 21 353 35
 5831 002a 49F63F41 		movw	r1, #39999
 5832 002e 0748     		ldr	r0, .L263
 5833 0030 FFF7FEFF 		bl	_ZN5daisy11TimerHandle12SetPrescalerEm
 354:control.h     ****     objResetMenuTimer.SetCallback(fxResetMenuTimerCallBack);
 5834              		.loc 21 354 34
 5835 0034 0022     		movs	r2, #0
 5836 0036 0649     		ldr	r1, .L263+4
 5837 0038 0448     		ldr	r0, .L263
 5838 003a FFF7FEFF 		bl	_ZN5daisy11TimerHandle11SetCallbackEPFvPvES1_
 355:control.h     ****     objResetMenuTimer.Start();
 5839              		.loc 21 355 28
 5840 003e 0348     		ldr	r0, .L263
 5841 0040 FFF7FEFF 		bl	_ZN5daisy11TimerHandle5StartEv
 356:control.h     **** }
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 148


 5842              		.loc 21 356 1
 5843 0044 00BF     		nop
 5844 0046 1037     		adds	r7, r7, #16
 5845              		.cfi_def_cfa_offset 8
 5846 0048 BD46     		mov	sp, r7
 5847              		.cfi_def_cfa_register 13
 5848              		@ sp needed
 5849 004a 80BD     		pop	{r7, pc}
 5850              	.L264:
 5851              		.align	2
 5852              	.L263:
 5853 004c 00000000 		.word	objResetMenuTimer
 5854 0050 00000000 		.word	_Z24fxResetMenuTimerCallBackPv
 5855              		.cfi_endproc
 5856              	.LFE4734:
 5858              		.section	.text._Z16fxFrequencyMatchR14clasOscillatorRN5daisy11clasEncoderE,"ax",%progbits
 5859              		.align	1
 5860              		.global	_Z16fxFrequencyMatchR14clasOscillatorRN5daisy11clasEncoderE
 5861              		.syntax unified
 5862              		.thumb
 5863              		.thumb_func
 5864              		.fpu fpv5-d16
 5866              	_Z16fxFrequencyMatchR14clasOscillatorRN5daisy11clasEncoderE:
 5867              	.LFB4735:
 357:control.h     **** 
 358:control.h     **** 
 359:control.h     **** //Oscillator state machine 
 360:control.h     **** void fxFrequencyMatch(clasOscillator& osc, clasEncoder& enc) {
 5868              		.loc 21 360 62
 5869              		.cfi_startproc
 5870              		@ args = 0, pretend = 0, frame = 16
 5871              		@ frame_needed = 1, uses_anonymous_args = 0
 5872 0000 80B5     		push	{r7, lr}
 5873              		.cfi_def_cfa_offset 8
 5874              		.cfi_offset 7, -8
 5875              		.cfi_offset 14, -4
 5876 0002 84B0     		sub	sp, sp, #16
 5877              		.cfi_def_cfa_offset 24
 5878 0004 00AF     		add	r7, sp, #0
 5879              		.cfi_def_cfa_register 7
 5880 0006 7860     		str	r0, [r7, #4]
 5881 0008 3960     		str	r1, [r7]
 5882              	.LBB25:
 361:control.h     ****     // enc.Debounce();
 362:control.h     ****     if (enc.RisingEdge()){ //Sets signal high outside to ensure detects all rising edges. 
 5883              		.loc 21 362 23
 5884 000a 3868     		ldr	r0, [r7]
 5885 000c FFF7FEFF 		bl	_ZNK5daisy11clasEncoder10RisingEdgeEv
 5886 0010 0346     		mov	r3, r0
 5887              		.loc 21 362 5
 5888 0012 002B     		cmp	r3, #0
 5889 0014 0CD0     		beq	.L268
 5890              	.LBB26:
 363:control.h     ****         // hw.PrintLine("Encoder Pressed");
 364:control.h     ****         clasOscillator* objParent = getParent();
 5891              		.loc 21 364 46
 5892 0016 FFF7FEFF 		bl	_Z9getParentv
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 149


 5893 001a F860     		str	r0, [r7, #12]
 365:control.h     **** 
 366:control.h     ****         if (objParent != nullptr) {
 5894              		.loc 21 366 9
 5895 001c FB68     		ldr	r3, [r7, #12]
 5896 001e 002B     		cmp	r3, #0
 5897 0020 03D0     		beq	.L267
 367:control.h     ****             setChild(&osc);
 5898              		.loc 21 367 21
 5899 0022 7868     		ldr	r0, [r7, #4]
 5900 0024 FFF7FEFF 		bl	_Z8setChildP14clasOscillator
 5901              	.LBE26:
 5902              	.LBE25:
 368:control.h     ****         } else {
 369:control.h     ****             setParent(&osc);
 370:control.h     ****         }
 371:control.h     ****     }
 372:control.h     **** }
 5903              		.loc 21 372 1
 5904 0028 02E0     		b	.L268
 5905              	.L267:
 5906              	.LBB28:
 5907              	.LBB27:
 369:control.h     ****         }
 5908              		.loc 21 369 22
 5909 002a 7868     		ldr	r0, [r7, #4]
 5910 002c FFF7FEFF 		bl	_Z9setParentP14clasOscillator
 5911              	.L268:
 5912              	.LBE27:
 5913              	.LBE28:
 5914              		.loc 21 372 1
 5915 0030 00BF     		nop
 5916 0032 1037     		adds	r7, r7, #16
 5917              		.cfi_def_cfa_offset 8
 5918 0034 BD46     		mov	sp, r7
 5919              		.cfi_def_cfa_register 13
 5920              		@ sp needed
 5921 0036 80BD     		pop	{r7, pc}
 5922              		.cfi_endproc
 5923              	.LFE4735:
 5925              		.section	.rodata
 5926 0013 00       		.align	2
 5927              	.LC2:
 5928 0014 4F736320 		.ascii	"Osc %d Connected to LFO\000"
 5928      25642043 
 5928      6F6E6E65 
 5928      63746564 
 5928      20746F20 
 5929              		.section	.text._Z18fxOscillatorSelectP14clasOscillatorRN5daisy11clasEncoderEi,"ax",%progbits
 5930              		.align	1
 5931              		.global	_Z18fxOscillatorSelectP14clasOscillatorRN5daisy11clasEncoderEi
 5932              		.syntax unified
 5933              		.thumb
 5934              		.thumb_func
 5935              		.fpu fpv5-d16
 5937              	_Z18fxOscillatorSelectP14clasOscillatorRN5daisy11clasEncoderEi:
 5938              	.LFB4736:
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 150


 373:control.h     **** 
 374:control.h     **** 
 375:control.h     **** void fxOscillatorSelect(clasOscillator* osc, clasEncoder& enc, int iEncoderNumber){
 5939              		.loc 21 375 83
 5940              		.cfi_startproc
 5941              		@ args = 0, pretend = 0, frame = 16
 5942              		@ frame_needed = 1, uses_anonymous_args = 0
 5943 0000 80B5     		push	{r7, lr}
 5944              		.cfi_def_cfa_offset 8
 5945              		.cfi_offset 7, -8
 5946              		.cfi_offset 14, -4
 5947 0002 84B0     		sub	sp, sp, #16
 5948              		.cfi_def_cfa_offset 24
 5949 0004 00AF     		add	r7, sp, #0
 5950              		.cfi_def_cfa_register 7
 5951 0006 F860     		str	r0, [r7, #12]
 5952 0008 B960     		str	r1, [r7, #8]
 5953 000a 7A60     		str	r2, [r7, #4]
 376:control.h     **** 
 377:control.h     ****     if (enc.RisingEdge()){ //Sets signal high outside to ensure detects all rising edges. 
 5954              		.loc 21 377 23
 5955 000c B868     		ldr	r0, [r7, #8]
 5956 000e FFF7FEFF 		bl	_ZNK5daisy11clasEncoder10RisingEdgeEv
 5957 0012 0346     		mov	r3, r0
 5958              		.loc 21 377 5
 5959 0014 002B     		cmp	r3, #0
 5960 0016 06D0     		beq	.L271
 378:control.h     ****         ptrSingleOscillator_ = osc;
 5961              		.loc 21 378 30
 5962 0018 054A     		ldr	r2, .L272
 5963 001a FB68     		ldr	r3, [r7, #12]
 5964 001c 1360     		str	r3, [r2]
 379:control.h     ****         hw.PrintLine("Osc %d Connected to LFO", iEncoderNumber);
 5965              		.loc 21 379 21
 5966 001e 7968     		ldr	r1, [r7, #4]
 5967 0020 0448     		ldr	r0, .L272+4
 5968 0022 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJiEEEvPKcDpT_
 5969              	.L271:
 380:control.h     ****     }
 381:control.h     **** 
 382:control.h     **** }
 5970              		.loc 21 382 1
 5971 0026 00BF     		nop
 5972 0028 1037     		adds	r7, r7, #16
 5973              		.cfi_def_cfa_offset 8
 5974 002a BD46     		mov	sp, r7
 5975              		.cfi_def_cfa_register 13
 5976              		@ sp needed
 5977 002c 80BD     		pop	{r7, pc}
 5978              	.L273:
 5979 002e 00BF     		.align	2
 5980              	.L272:
 5981 0030 00000000 		.word	ptrSingleOscillator_
 5982 0034 14000000 		.word	.LC2
 5983              		.cfi_endproc
 5984              	.LFE4736:
 5986              		.section	.text._Z13fxEncoderTestv,"ax",%progbits
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 151


 5987              		.align	1
 5988              		.global	_Z13fxEncoderTestv
 5989              		.syntax unified
 5990              		.thumb
 5991              		.thumb_func
 5992              		.fpu fpv5-d16
 5994              	_Z13fxEncoderTestv:
 5995              	.LFB4737:
 383:control.h     **** 
 384:control.h     **** 
 385:control.h     **** void fxEncoderTest(){
 5996              		.loc 21 385 21
 5997              		.cfi_startproc
 5998              		@ args = 0, pretend = 0, frame = 0
 5999              		@ frame_needed = 1, uses_anonymous_args = 0
 6000 0000 80B5     		push	{r7, lr}
 6001              		.cfi_def_cfa_offset 8
 6002              		.cfi_offset 7, -8
 6003              		.cfi_offset 14, -4
 6004 0002 00AF     		add	r7, sp, #0
 6005              		.cfi_def_cfa_register 7
 386:control.h     ****     objEncoderA.Debounce();
 6006              		.loc 21 386 25
 6007 0004 0C48     		ldr	r0, .L275
 6008 0006 FFF7FEFF 		bl	_ZN5daisy11clasEncoder8DebounceEv
 387:control.h     ****     if (objEncoderA.RisingEdge()){
 6009              		.loc 21 387 31
 6010 000a 0B48     		ldr	r0, .L275
 6011 000c FFF7FEFF 		bl	_ZNK5daisy11clasEncoder10RisingEdgeEv
 388:control.h     ****         // hw.PrintLine("Encoder A Button Pressed");
 389:control.h     ****     }
 390:control.h     **** 
 391:control.h     ****     objEncoderB.Debounce();
 6012              		.loc 21 391 25
 6013 0010 0A48     		ldr	r0, .L275+4
 6014 0012 FFF7FEFF 		bl	_ZN5daisy11clasEncoder8DebounceEv
 392:control.h     ****     if (objEncoderB.RisingEdge()){
 6015              		.loc 21 392 31
 6016 0016 0948     		ldr	r0, .L275+4
 6017 0018 FFF7FEFF 		bl	_ZNK5daisy11clasEncoder10RisingEdgeEv
 393:control.h     ****         // hw.PrintLine("Encoder B Button Pressed");
 394:control.h     ****     }  
 395:control.h     **** 
 396:control.h     ****     objEncoderC.Debounce();
 6018              		.loc 21 396 25
 6019 001c 0848     		ldr	r0, .L275+8
 6020 001e FFF7FEFF 		bl	_ZN5daisy11clasEncoder8DebounceEv
 397:control.h     ****     if (objEncoderC.RisingEdge()){
 6021              		.loc 21 397 31
 6022 0022 0748     		ldr	r0, .L275+8
 6023 0024 FFF7FEFF 		bl	_ZNK5daisy11clasEncoder10RisingEdgeEv
 398:control.h     ****         // hw.PrintLine("Encoder C Button Pressed");
 399:control.h     ****     }    
 400:control.h     **** 
 401:control.h     ****     objEncoderD.Debounce();
 6024              		.loc 21 401 25
 6025 0028 0648     		ldr	r0, .L275+12
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 152


 6026 002a FFF7FEFF 		bl	_ZN5daisy11clasEncoder8DebounceEv
 402:control.h     ****     if (objEncoderD.RisingEdge()){
 6027              		.loc 21 402 31
 6028 002e 0548     		ldr	r0, .L275+12
 6029 0030 FFF7FEFF 		bl	_ZNK5daisy11clasEncoder10RisingEdgeEv
 403:control.h     ****         // hw.PrintLine("Encoder D Button Pressed");
 404:control.h     ****     }
 405:control.h     **** 
 406:control.h     **** }
 6030              		.loc 21 406 1
 6031 0034 00BF     		nop
 6032 0036 80BD     		pop	{r7, pc}
 6033              	.L276:
 6034              		.align	2
 6035              	.L275:
 6036 0038 00000000 		.word	objEncoderA
 6037 003c 00000000 		.word	objEncoderB
 6038 0040 00000000 		.word	objEncoderC
 6039 0044 00000000 		.word	objEncoderD
 6040              		.cfi_endproc
 6041              	.LFE4737:
 6043              		.section	.text._Z22IncOscillatorAmplitudeR14clasOscillatorRN5daisy11clasEncoderE,"ax",%progbits
 6044              		.align	1
 6045              		.global	_Z22IncOscillatorAmplitudeR14clasOscillatorRN5daisy11clasEncoderE
 6046              		.syntax unified
 6047              		.thumb
 6048              		.thumb_func
 6049              		.fpu fpv5-d16
 6051              	_Z22IncOscillatorAmplitudeR14clasOscillatorRN5daisy11clasEncoderE:
 6052              	.LFB4738:
 407:control.h     **** 
 408:control.h     **** 
 409:control.h     **** //Increments the oscillators amplitude
 410:control.h     **** void IncOscillatorAmplitude(clasOscillator& osc, clasEncoder& enc){
 6053              		.loc 21 410 67
 6054              		.cfi_startproc
 6055              		@ args = 0, pretend = 0, frame = 16
 6056              		@ frame_needed = 1, uses_anonymous_args = 0
 6057 0000 80B5     		push	{r7, lr}
 6058              		.cfi_def_cfa_offset 8
 6059              		.cfi_offset 7, -8
 6060              		.cfi_offset 14, -4
 6061 0002 84B0     		sub	sp, sp, #16
 6062              		.cfi_def_cfa_offset 24
 6063 0004 00AF     		add	r7, sp, #0
 6064              		.cfi_def_cfa_register 7
 6065 0006 7860     		str	r0, [r7, #4]
 6066 0008 3960     		str	r1, [r7]
 411:control.h     ****     float flCurrentAmp = osc.GetAmp();
 6067              		.loc 21 411 36
 6068 000a 7868     		ldr	r0, [r7, #4]
 6069 000c FFF7FEFF 		bl	_ZN14clasOscillator6GetAmpEv
 6070 0010 87ED030A 		vstr.32	s0, [r7, #12]
 412:control.h     ****     int iDirection = enc.Increment();
 6071              		.loc 21 412 35
 6072 0014 3868     		ldr	r0, [r7]
 6073 0016 FFF7FEFF 		bl	_ZNK5daisy11clasEncoder9IncrementEv
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 153


 6074 001a B860     		str	r0, [r7, #8]
 413:control.h     ****     if (iDirection != 0) {
 6075              		.loc 21 413 5
 6076 001c BB68     		ldr	r3, [r7, #8]
 6077 001e 002B     		cmp	r3, #0
 6078 0020 17D0     		beq	.L279
 414:control.h     ****         flCurrentAmp += 0.1 * iDirection;
 6079              		.loc 21 414 22
 6080 0022 D7ED037A 		vldr.32	s15, [r7, #12]
 6081 0026 B7EEE76A 		vcvt.f64.f32	d6, s15
 6082              		.loc 21 414 29
 6083 002a BB68     		ldr	r3, [r7, #8]
 6084 002c 07EE903A 		vmov	s15, r3	@ int
 6085 0030 B8EEE77B 		vcvt.f64.s32	d7, s15
 6086 0034 9FED0A5B 		vldr.64	d5, .L280
 6087 0038 27EE057B 		vmul.f64	d7, d7, d5
 6088              		.loc 21 414 22
 6089 003c 36EE077B 		vadd.f64	d7, d6, d7
 6090 0040 F7EEC77B 		vcvt.f32.f64	s15, d7
 6091 0044 C7ED037A 		vstr.32	s15, [r7, #12]
 415:control.h     ****         osc.SetAmp(flCurrentAmp);
 6092              		.loc 21 415 19
 6093 0048 97ED030A 		vldr.32	s0, [r7, #12]
 6094 004c 7868     		ldr	r0, [r7, #4]
 6095 004e FFF7FEFF 		bl	_ZN14clasOscillator6SetAmpEf
 6096              	.L279:
 416:control.h     ****     }
 417:control.h     **** }
 6097              		.loc 21 417 1
 6098 0052 00BF     		nop
 6099 0054 1037     		adds	r7, r7, #16
 6100              		.cfi_def_cfa_offset 8
 6101 0056 BD46     		mov	sp, r7
 6102              		.cfi_def_cfa_register 13
 6103              		@ sp needed
 6104 0058 80BD     		pop	{r7, pc}
 6105              	.L281:
 6106 005a 00BFAFF3 		.align	3
 6106      0080
 6107              	.L280:
 6108 0060 9A999999 		.word	-1717986918
 6109 0064 9999B93F 		.word	1069128089
 6110              		.cfi_endproc
 6111              	.LFE4738:
 6113              		.section	.text._Z18IncOscillatorDepthR14clasOscillatorRN5daisy11clasEncoderE,"ax",%progbits
 6114              		.align	1
 6115              		.global	_Z18IncOscillatorDepthR14clasOscillatorRN5daisy11clasEncoderE
 6116              		.syntax unified
 6117              		.thumb
 6118              		.thumb_func
 6119              		.fpu fpv5-d16
 6121              	_Z18IncOscillatorDepthR14clasOscillatorRN5daisy11clasEncoderE:
 6122              	.LFB4739:
 418:control.h     **** 
 419:control.h     **** 
 420:control.h     **** //Increments the oscillators amplitude
 421:control.h     **** void IncOscillatorDepth(clasOscillator& osc, clasEncoder& enc){
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 154


 6123              		.loc 21 421 63
 6124              		.cfi_startproc
 6125              		@ args = 0, pretend = 0, frame = 16
 6126              		@ frame_needed = 1, uses_anonymous_args = 0
 6127 0000 80B5     		push	{r7, lr}
 6128              		.cfi_def_cfa_offset 8
 6129              		.cfi_offset 7, -8
 6130              		.cfi_offset 14, -4
 6131 0002 84B0     		sub	sp, sp, #16
 6132              		.cfi_def_cfa_offset 24
 6133 0004 00AF     		add	r7, sp, #0
 6134              		.cfi_def_cfa_register 7
 6135 0006 7860     		str	r0, [r7, #4]
 6136 0008 3960     		str	r1, [r7]
 422:control.h     ****     float flCurrent = osc.GetDepth();
 6137              		.loc 21 422 35
 6138 000a 7868     		ldr	r0, [r7, #4]
 6139 000c FFF7FEFF 		bl	_ZN14clasOscillator8GetDepthEv
 6140 0010 87ED030A 		vstr.32	s0, [r7, #12]
 423:control.h     ****     int iDirection = enc.Increment();
 6141              		.loc 21 423 35
 6142 0014 3868     		ldr	r0, [r7]
 6143 0016 FFF7FEFF 		bl	_ZNK5daisy11clasEncoder9IncrementEv
 6144 001a B860     		str	r0, [r7, #8]
 424:control.h     ****     if (iDirection != 0) {
 6145              		.loc 21 424 5
 6146 001c BB68     		ldr	r3, [r7, #8]
 6147 001e 002B     		cmp	r3, #0
 6148 0020 17D0     		beq	.L284
 425:control.h     ****         flCurrent += 0.1 * iDirection;
 6149              		.loc 21 425 19
 6150 0022 D7ED037A 		vldr.32	s15, [r7, #12]
 6151 0026 B7EEE76A 		vcvt.f64.f32	d6, s15
 6152              		.loc 21 425 26
 6153 002a BB68     		ldr	r3, [r7, #8]
 6154 002c 07EE903A 		vmov	s15, r3	@ int
 6155 0030 B8EEE77B 		vcvt.f64.s32	d7, s15
 6156 0034 9FED0A5B 		vldr.64	d5, .L285
 6157 0038 27EE057B 		vmul.f64	d7, d7, d5
 6158              		.loc 21 425 19
 6159 003c 36EE077B 		vadd.f64	d7, d6, d7
 6160 0040 F7EEC77B 		vcvt.f32.f64	s15, d7
 6161 0044 C7ED037A 		vstr.32	s15, [r7, #12]
 426:control.h     ****         osc.SetDepth(flCurrent);
 6162              		.loc 21 426 21
 6163 0048 97ED030A 		vldr.32	s0, [r7, #12]
 6164 004c 7868     		ldr	r0, [r7, #4]
 6165 004e FFF7FEFF 		bl	_ZN14clasOscillator8SetDepthEf
 6166              	.L284:
 427:control.h     ****     }
 428:control.h     **** }
 6167              		.loc 21 428 1
 6168 0052 00BF     		nop
 6169 0054 1037     		adds	r7, r7, #16
 6170              		.cfi_def_cfa_offset 8
 6171 0056 BD46     		mov	sp, r7
 6172              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 155


 6173              		@ sp needed
 6174 0058 80BD     		pop	{r7, pc}
 6175              	.L286:
 6176 005a 00BFAFF3 		.align	3
 6176      0080
 6177              	.L285:
 6178 0060 9A999999 		.word	-1717986918
 6179 0064 9999B93F 		.word	1069128089
 6180              		.cfi_endproc
 6181              	.LFE4739:
 6183              		.section	.text._Z14ChangeWaveformR14clasOscillatorRN5daisy11clasEncoderE,"ax",%progbits
 6184              		.align	1
 6185              		.global	_Z14ChangeWaveformR14clasOscillatorRN5daisy11clasEncoderE
 6186              		.syntax unified
 6187              		.thumb
 6188              		.thumb_func
 6189              		.fpu fpv5-d16
 6191              	_Z14ChangeWaveformR14clasOscillatorRN5daisy11clasEncoderE:
 6192              	.LFB4740:
 429:control.h     **** 
 430:control.h     **** 
 431:control.h     **** //Changes the frequency shape of the oscillator.
 432:control.h     **** void ChangeWaveform(clasOscillator& osc, clasEncoder& enc){
 6193              		.loc 21 432 59
 6194              		.cfi_startproc
 6195              		@ args = 0, pretend = 0, frame = 16
 6196              		@ frame_needed = 1, uses_anonymous_args = 0
 6197 0000 80B5     		push	{r7, lr}
 6198              		.cfi_def_cfa_offset 8
 6199              		.cfi_offset 7, -8
 6200              		.cfi_offset 14, -4
 6201 0002 84B0     		sub	sp, sp, #16
 6202              		.cfi_def_cfa_offset 24
 6203 0004 00AF     		add	r7, sp, #0
 6204              		.cfi_def_cfa_register 7
 6205 0006 7860     		str	r0, [r7, #4]
 6206 0008 3960     		str	r1, [r7]
 433:control.h     ****     uint8_t uiCurrentWaveform = osc.GetWaveform();
 6207              		.loc 21 433 48
 6208 000a 7868     		ldr	r0, [r7, #4]
 6209 000c FFF7FEFF 		bl	_ZN14clasOscillator11GetWaveformEv
 6210 0010 0346     		mov	r3, r0
 6211 0012 FB73     		strb	r3, [r7, #15]
 434:control.h     ****     int iDirection = enc.Increment();
 6212              		.loc 21 434 35
 6213 0014 3868     		ldr	r0, [r7]
 6214 0016 FFF7FEFF 		bl	_ZNK5daisy11clasEncoder9IncrementEv
 6215 001a B860     		str	r0, [r7, #8]
 435:control.h     ****     if (iDirection != 0) {
 6216              		.loc 21 435 5
 6217 001c BB68     		ldr	r3, [r7, #8]
 6218 001e 002B     		cmp	r3, #0
 6219 0020 09D0     		beq	.L289
 436:control.h     ****         uiCurrentWaveform += 1 * iDirection;
 6220              		.loc 21 436 27
 6221 0022 BB68     		ldr	r3, [r7, #8]
 6222 0024 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 156


 6223 0026 FB7B     		ldrb	r3, [r7, #15]
 6224 0028 1344     		add	r3, r3, r2
 6225 002a FB73     		strb	r3, [r7, #15]
 437:control.h     ****         osc.SetWaveform(uiCurrentWaveform);
 6226              		.loc 21 437 24
 6227 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6228 002e 1946     		mov	r1, r3
 6229 0030 7868     		ldr	r0, [r7, #4]
 6230 0032 FFF7FEFF 		bl	_ZN14clasOscillator11SetWaveformEh
 6231              	.L289:
 438:control.h     ****     }
 439:control.h     **** }
 6232              		.loc 21 439 1
 6233 0036 00BF     		nop
 6234 0038 1037     		adds	r7, r7, #16
 6235              		.cfi_def_cfa_offset 8
 6236 003a BD46     		mov	sp, r7
 6237              		.cfi_def_cfa_register 13
 6238              		@ sp needed
 6239 003c 80BD     		pop	{r7, pc}
 6240              		.cfi_endproc
 6241              	.LFE4740:
 6243              		.section	.text._Z19FreqModulationRatioR14clasOscillatorRN5daisy11clasEncoderE,"ax",%progbits
 6244              		.align	1
 6245              		.global	_Z19FreqModulationRatioR14clasOscillatorRN5daisy11clasEncoderE
 6246              		.syntax unified
 6247              		.thumb
 6248              		.thumb_func
 6249              		.fpu fpv5-d16
 6251              	_Z19FreqModulationRatioR14clasOscillatorRN5daisy11clasEncoderE:
 6252              	.LFB4741:
 440:control.h     **** 
 441:control.h     **** 
 442:control.h     **** //Frequency modulation ratio
 443:control.h     **** void FreqModulationRatio(clasOscillator& osc, clasEncoder& enc){
 6253              		.loc 21 443 64
 6254              		.cfi_startproc
 6255              		@ args = 0, pretend = 0, frame = 24
 6256              		@ frame_needed = 1, uses_anonymous_args = 0
 6257 0000 80B5     		push	{r7, lr}
 6258              		.cfi_def_cfa_offset 8
 6259              		.cfi_offset 7, -8
 6260              		.cfi_offset 14, -4
 6261 0002 86B0     		sub	sp, sp, #24
 6262              		.cfi_def_cfa_offset 32
 6263 0004 00AF     		add	r7, sp, #0
 6264              		.cfi_def_cfa_register 7
 6265 0006 F860     		str	r0, [r7, #12]
 6266 0008 B960     		str	r1, [r7, #8]
 444:control.h     ****     float flModulatorRatio = osc.GetRatio();
 6267              		.loc 21 444 42
 6268 000a F868     		ldr	r0, [r7, #12]
 6269 000c FFF7FEFF 		bl	_ZN14clasOscillator8GetRatioEv
 6270 0010 0346     		mov	r3, r0
 6271 0012 07EE903A 		vmov	s15, r3	@ int
 6272              		.loc 21 444 43
 6273 0016 F8EE677A 		vcvt.f32.u32	s15, s15
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 157


 6274 001a C7ED057A 		vstr.32	s15, [r7, #20]
 445:control.h     ****     int iDirection = enc.Increment();
 6275              		.loc 21 445 35
 6276 001e B868     		ldr	r0, [r7, #8]
 6277 0020 FFF7FEFF 		bl	_ZNK5daisy11clasEncoder9IncrementEv
 6278 0024 3861     		str	r0, [r7, #16]
 446:control.h     ****     if (iDirection != 0) {
 6279              		.loc 21 446 5
 6280 0026 3B69     		ldr	r3, [r7, #16]
 6281 0028 002B     		cmp	r3, #0
 6282 002a 16D0     		beq	.L292
 447:control.h     ****         flModulatorRatio += 1 * iDirection;
 6283              		.loc 21 447 26
 6284 002c 3B69     		ldr	r3, [r7, #16]
 6285 002e 07EE903A 		vmov	s15, r3	@ int
 6286 0032 F8EEE77A 		vcvt.f32.s32	s15, s15
 6287 0036 97ED057A 		vldr.32	s14, [r7, #20]
 6288 003a 77EE277A 		vadd.f32	s15, s14, s15
 6289 003e C7ED057A 		vstr.32	s15, [r7, #20]
 448:control.h     ****         osc.SetRatio(flModulatorRatio);
 6290              		.loc 21 448 21
 6291 0042 D7ED057A 		vldr.32	s15, [r7, #20]
 6292 0046 FCEEE77A 		vcvt.u32.f32	s15, s15
 6293 004a C7ED017A 		vstr.32	s15, [r7, #4]	@ int
 6294 004e 3B79     		ldrb	r3, [r7, #4]
 6295 0050 DBB2     		uxtb	r3, r3
 6296 0052 1946     		mov	r1, r3
 6297 0054 F868     		ldr	r0, [r7, #12]
 6298 0056 FFF7FEFF 		bl	_ZN14clasOscillator8SetRatioEh
 6299              	.L292:
 449:control.h     ****     }
 450:control.h     **** }
 6300              		.loc 21 450 1
 6301 005a 00BF     		nop
 6302 005c 1837     		adds	r7, r7, #24
 6303              		.cfi_def_cfa_offset 8
 6304 005e BD46     		mov	sp, r7
 6305              		.cfi_def_cfa_register 13
 6306              		@ sp needed
 6307 0060 80BD     		pop	{r7, pc}
 6308              		.cfi_endproc
 6309              	.LFE4741:
 6311              		.section	.text._Z21FreqModulationCarrierR14clasOscillatorS0_S0_RN5daisy11clasEncoderE,"ax",%progbi
 6312              		.align	1
 6313              		.global	_Z21FreqModulationCarrierR14clasOscillatorS0_S0_RN5daisy11clasEncoderE
 6314              		.syntax unified
 6315              		.thumb
 6316              		.thumb_func
 6317              		.fpu fpv5-d16
 6319              	_Z21FreqModulationCarrierR14clasOscillatorS0_S0_RN5daisy11clasEncoderE:
 6320              	.LFB4742:
 451:control.h     **** 
 452:control.h     **** 
 453:control.h     **** 
 454:control.h     **** void FreqModulationCarrier(clasOscillator& oscA, clasOscillator& oscB, clasOscillator& oscC, clasEn
 6321              		.loc 21 454 111
 6322              		.cfi_startproc
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 158


 6323              		@ args = 0, pretend = 0, frame = 24
 6324              		@ frame_needed = 1, uses_anonymous_args = 0
 6325 0000 80B5     		push	{r7, lr}
 6326              		.cfi_def_cfa_offset 8
 6327              		.cfi_offset 7, -8
 6328              		.cfi_offset 14, -4
 6329 0002 86B0     		sub	sp, sp, #24
 6330              		.cfi_def_cfa_offset 32
 6331 0004 00AF     		add	r7, sp, #0
 6332              		.cfi_def_cfa_register 7
 6333 0006 F860     		str	r0, [r7, #12]
 6334 0008 B960     		str	r1, [r7, #8]
 6335 000a 7A60     		str	r2, [r7, #4]
 6336 000c 3B60     		str	r3, [r7]
 455:control.h     ****     fxFrequencyInc(aobjSingleOscillator[0], enc, 0);
 6337              		.loc 21 455 19
 6338 000e 0022     		movs	r2, #0
 6339 0010 3968     		ldr	r1, [r7]
 6340 0012 0D48     		ldr	r0, .L294
 6341 0014 FFF7FEFF 		bl	_Z14fxFrequencyIncR14clasOscillatorRN5daisy11clasEncoderEi
 456:control.h     ****     float flCarrierFrequency = aobjSingleOscillator[0].GetFreq();
 6342              		.loc 21 456 63
 6343 0018 0B48     		ldr	r0, .L294
 6344 001a FFF7FEFF 		bl	_ZN14clasOscillator7GetFreqEv
 6345 001e 87ED050A 		vstr.32	s0, [r7, #20]
 457:control.h     ****     oscA.SetFreq(flCarrierFrequency);
 6346              		.loc 21 457 17
 6347 0022 97ED050A 		vldr.32	s0, [r7, #20]
 6348 0026 F868     		ldr	r0, [r7, #12]
 6349 0028 FFF7FEFF 		bl	_ZN14clasOscillator7SetFreqEf
 458:control.h     ****     oscB.SetFreq(flCarrierFrequency);
 6350              		.loc 21 458 17
 6351 002c 97ED050A 		vldr.32	s0, [r7, #20]
 6352 0030 B868     		ldr	r0, [r7, #8]
 6353 0032 FFF7FEFF 		bl	_ZN14clasOscillator7SetFreqEf
 459:control.h     ****     oscC.SetFreq(flCarrierFrequency);
 6354              		.loc 21 459 17
 6355 0036 97ED050A 		vldr.32	s0, [r7, #20]
 6356 003a 7868     		ldr	r0, [r7, #4]
 6357 003c FFF7FEFF 		bl	_ZN14clasOscillator7SetFreqEf
 460:control.h     ****     }
 6358              		.loc 21 460 5
 6359 0040 00BF     		nop
 6360 0042 1837     		adds	r7, r7, #24
 6361              		.cfi_def_cfa_offset 8
 6362 0044 BD46     		mov	sp, r7
 6363              		.cfi_def_cfa_register 13
 6364              		@ sp needed
 6365 0046 80BD     		pop	{r7, pc}
 6366              	.L295:
 6367              		.align	2
 6368              	.L294:
 6369 0048 00000000 		.word	aobjSingleOscillator
 6370              		.cfi_endproc
 6371              	.LFE4742:
 6373              		.section	.text._Z14fxMenuDebouncev,"ax",%progbits
 6374              		.align	1
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 159


 6375              		.global	_Z14fxMenuDebouncev
 6376              		.syntax unified
 6377              		.thumb
 6378              		.thumb_func
 6379              		.fpu fpv5-d16
 6381              	_Z14fxMenuDebouncev:
 6382              	.LFB4743:
 461:control.h     **** 
 462:control.h     **** 
 463:control.h     **** //Debounce 
 464:control.h     **** bool fxMenuDebounce(){
 6383              		.loc 21 464 22
 6384              		.cfi_startproc
 6385              		@ args = 0, pretend = 0, frame = 8
 6386              		@ frame_needed = 1, uses_anonymous_args = 0
 6387 0000 80B5     		push	{r7, lr}
 6388              		.cfi_def_cfa_offset 8
 6389              		.cfi_offset 7, -8
 6390              		.cfi_offset 14, -4
 6391 0002 82B0     		sub	sp, sp, #8
 6392              		.cfi_def_cfa_offset 16
 6393 0004 00AF     		add	r7, sp, #0
 6394              		.cfi_def_cfa_register 7
 465:control.h     ****     uint32_t uiNow = System::GetNow();
 6395              		.loc 21 465 36
 6396 0006 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 6397 000a 3860     		str	r0, [r7]
 466:control.h     ****     bool xDebounce = false;
 6398              		.loc 21 466 10
 6399 000c 0023     		movs	r3, #0
 6400 000e FB71     		strb	r3, [r7, #7]
 467:control.h     **** 
 468:control.h     ****     if(uiNow - uiLastUpdate >= 100){
 6401              		.loc 21 468 14
 6402 0010 074B     		ldr	r3, .L299
 6403 0012 1B68     		ldr	r3, [r3]
 6404 0014 3A68     		ldr	r2, [r7]
 6405 0016 D31A     		subs	r3, r2, r3
 6406              		.loc 21 468 5
 6407 0018 632B     		cmp	r3, #99
 6408 001a 04D9     		bls	.L297
 469:control.h     ****         uiLastUpdate = uiNow;
 6409              		.loc 21 469 22
 6410 001c 044A     		ldr	r2, .L299
 6411 001e 3B68     		ldr	r3, [r7]
 6412 0020 1360     		str	r3, [r2]
 470:control.h     ****         xDebounce = true;
 6413              		.loc 21 470 19
 6414 0022 0123     		movs	r3, #1
 6415 0024 FB71     		strb	r3, [r7, #7]
 6416              	.L297:
 471:control.h     ****     }
 472:control.h     ****     return xDebounce;
 6417              		.loc 21 472 12
 6418 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 473:control.h     **** }
 6419              		.loc 21 473 1
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 160


 6420 0028 1846     		mov	r0, r3
 6421 002a 0837     		adds	r7, r7, #8
 6422              		.cfi_def_cfa_offset 8
 6423 002c BD46     		mov	sp, r7
 6424              		.cfi_def_cfa_register 13
 6425              		@ sp needed
 6426 002e 80BD     		pop	{r7, pc}
 6427              	.L300:
 6428              		.align	2
 6429              	.L299:
 6430 0030 00000000 		.word	uiLastUpdate
 6431              		.cfi_endproc
 6432              	.LFE4743:
 6434              		.section	.text._Z19fxUpdateFrequenciesf,"ax",%progbits
 6435              		.align	1
 6436              		.global	_Z19fxUpdateFrequenciesf
 6437              		.syntax unified
 6438              		.thumb
 6439              		.thumb_func
 6440              		.fpu fpv5-d16
 6442              	_Z19fxUpdateFrequenciesf:
 6443              	.LFB4744:
 474:control.h     **** 
 475:control.h     **** 
 476:control.h     **** //Exponential semitone frequency updater.
 477:control.h     **** void fxUpdateFrequencies(float adcInput){
 6444              		.loc 21 477 41
 6445              		.cfi_startproc
 6446              		@ args = 0, pretend = 0, frame = 32
 6447              		@ frame_needed = 1, uses_anonymous_args = 0
 6448 0000 80B5     		push	{r7, lr}
 6449              		.cfi_def_cfa_offset 8
 6450              		.cfi_offset 7, -8
 6451              		.cfi_offset 14, -4
 6452 0002 88B0     		sub	sp, sp, #32
 6453              		.cfi_def_cfa_offset 40
 6454 0004 00AF     		add	r7, sp, #0
 6455              		.cfi_def_cfa_register 7
 6456 0006 87ED010A 		vstr.32	s0, [r7, #4]
 478:control.h     ****     // Interpolate the low note and high note
 479:control.h     ****     float flLowestFreq = 130.0f + adcInput * (520.0f - 130.0f);
 6457              		.loc 21 479 44
 6458 000a D7ED017A 		vldr.32	s15, [r7, #4]
 6459 000e 9FED247A 		vldr.32	s14, .L305
 6460 0012 67EE877A 		vmul.f32	s15, s15, s14
 6461              		.loc 21 479 11
 6462 0016 9FED237A 		vldr.32	s14, .L305+4
 6463 001a 77EE877A 		vadd.f32	s15, s15, s14
 6464 001e C7ED067A 		vstr.32	s15, [r7, #24]
 480:control.h     ****     float flHighestFreq = 250.0f + adcInput * (990.0f - 250.0f);
 6465              		.loc 21 480 45
 6466 0022 D7ED017A 		vldr.32	s15, [r7, #4]
 6467 0026 9FED207A 		vldr.32	s14, .L305+8
 6468 002a 67EE877A 		vmul.f32	s15, s15, s14
 6469              		.loc 21 480 11
 6470 002e 9FED1F7A 		vldr.32	s14, .L305+12
 6471 0032 77EE877A 		vadd.f32	s15, s15, s14
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 161


 6472 0036 C7ED057A 		vstr.32	s15, [r7, #20]
 481:control.h     **** 
 482:control.h     ****     //Calculate the ratio of highest to lowest. 
 483:control.h     ****     float flRatio = flHighestFreq / flLowestFreq;
 6473              		.loc 21 483 11
 6474 003a D7ED056A 		vldr.32	s13, [r7, #20]
 6475 003e 97ED067A 		vldr.32	s14, [r7, #24]
 6476 0042 C6EE877A 		vdiv.f32	s15, s13, s14
 6477 0046 C7ED047A 		vstr.32	s15, [r7, #16]
 6478              	.LBB29:
 484:control.h     **** 
 485:control.h     ****     //Semitone distribution loop
 486:control.h     ****     for (int i=0; i<12; i++){
 6479              		.loc 21 486 14
 6480 004a 0023     		movs	r3, #0
 6481 004c FB61     		str	r3, [r7, #28]
 6482              	.L303:
 6483              		.loc 21 486 20 discriminator 3
 6484 004e FB69     		ldr	r3, [r7, #28]
 6485 0050 0B2B     		cmp	r3, #11
 6486 0052 20DC     		bgt	.L304
 6487              	.LBB30:
 487:control.h     ****         float flFraction = (float)i / 11.0f;
 6488              		.loc 21 487 28 discriminator 2
 6489 0054 FB69     		ldr	r3, [r7, #28]
 6490 0056 07EE903A 		vmov	s15, r3	@ int
 6491 005a B8EEE77A 		vcvt.f32.s32	s14, s15
 6492              		.loc 21 487 15 discriminator 2
 6493 005e F2EE066A 		vmov.f32	s13, #1.1e+1
 6494 0062 C7EE267A 		vdiv.f32	s15, s14, s13
 6495 0066 C7ED037A 		vstr.32	s15, [r7, #12]
 488:control.h     ****         aflFreqTable[i] = flLowestFreq * powf(flRatio, flFraction);
 6496              		.loc 21 488 46 discriminator 2
 6497 006a D7ED030A 		vldr.32	s1, [r7, #12]
 6498 006e 97ED040A 		vldr.32	s0, [r7, #16]
 6499 0072 FFF7FEFF 		bl	powf
 6500 0076 B0EE407A 		vmov.f32	s14, s0
 6501              		.loc 21 488 40 discriminator 2
 6502 007a D7ED067A 		vldr.32	s15, [r7, #24]
 6503 007e 67EE277A 		vmul.f32	s15, s14, s15
 6504              		.loc 21 488 25 discriminator 2
 6505 0082 0B4A     		ldr	r2, .L305+16
 6506 0084 FB69     		ldr	r3, [r7, #28]
 6507 0086 9B00     		lsls	r3, r3, #2
 6508 0088 1344     		add	r3, r3, r2
 6509 008a C3ED007A 		vstr.32	s15, [r3]
 6510              	.LBE30:
 486:control.h     ****         float flFraction = (float)i / 11.0f;
 6511              		.loc 21 486 5 discriminator 2
 6512 008e FB69     		ldr	r3, [r7, #28]
 6513 0090 0133     		adds	r3, r3, #1
 6514 0092 FB61     		str	r3, [r7, #28]
 6515 0094 DBE7     		b	.L303
 6516              	.L304:
 6517              	.LBE29:
 489:control.h     ****     }
 490:control.h     **** }
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 162


 6518              		.loc 21 490 1
 6519 0096 00BF     		nop
 6520 0098 2037     		adds	r7, r7, #32
 6521              		.cfi_def_cfa_offset 8
 6522 009a BD46     		mov	sp, r7
 6523              		.cfi_def_cfa_register 13
 6524              		@ sp needed
 6525 009c 80BD     		pop	{r7, pc}
 6526              	.L306:
 6527 009e 00BF     		.align	2
 6528              	.L305:
 6529 00a0 0000C343 		.word	1136852992
 6530 00a4 00000243 		.word	1124204544
 6531 00a8 00003944 		.word	1144586240
 6532 00ac 00007A43 		.word	1132068864
 6533 00b0 00000000 		.word	aflFreqTable
 6534              		.cfi_endproc
 6535              	.LFE4744:
 6537              		.section	.text._Z14ChangeWaveformR20clasEulersOscillatorILi16EERN5daisy11clasEncoderE,"ax",%progbi
 6538              		.align	1
 6539              		.global	_Z14ChangeWaveformR20clasEulersOscillatorILi16EERN5daisy11clasEncoderE
 6540              		.syntax unified
 6541              		.thumb
 6542              		.thumb_func
 6543              		.fpu fpv5-d16
 6545              	_Z14ChangeWaveformR20clasEulersOscillatorILi16EERN5daisy11clasEncoderE:
 6546              	.LFB4745:
 491:control.h     **** 
 492:control.h     **** 
 493:control.h     **** //Changes the frequency shape of the oscillator.
 494:control.h     **** void ChangeWaveform(clasEulersOscillator<16>& osc, clasEncoder& enc){
 6547              		.loc 21 494 69
 6548              		.cfi_startproc
 6549              		@ args = 0, pretend = 0, frame = 16
 6550              		@ frame_needed = 1, uses_anonymous_args = 0
 6551 0000 80B5     		push	{r7, lr}
 6552              		.cfi_def_cfa_offset 8
 6553              		.cfi_offset 7, -8
 6554              		.cfi_offset 14, -4
 6555 0002 84B0     		sub	sp, sp, #16
 6556              		.cfi_def_cfa_offset 24
 6557 0004 00AF     		add	r7, sp, #0
 6558              		.cfi_def_cfa_register 7
 6559 0006 7860     		str	r0, [r7, #4]
 6560 0008 3960     		str	r1, [r7]
 495:control.h     ****     uint8_t uiCurrentWaveform = osc.GetHarmonicWaveForm();
 6561              		.loc 21 495 56
 6562 000a 7868     		ldr	r0, [r7, #4]
 6563 000c FFF7FEFF 		bl	_ZN20clasEulersOscillatorILi16EE19GetHarmonicWaveFormEv
 6564 0010 0346     		mov	r3, r0
 6565 0012 FB73     		strb	r3, [r7, #15]
 496:control.h     ****     int iDirection = enc.Increment();
 6566              		.loc 21 496 35
 6567 0014 3868     		ldr	r0, [r7]
 6568 0016 FFF7FEFF 		bl	_ZNK5daisy11clasEncoder9IncrementEv
 6569 001a B860     		str	r0, [r7, #8]
 497:control.h     ****     if (iDirection != 0) {
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 163


 6570              		.loc 21 497 5
 6571 001c BB68     		ldr	r3, [r7, #8]
 6572 001e 002B     		cmp	r3, #0
 6573 0020 09D0     		beq	.L309
 498:control.h     ****         uiCurrentWaveform += 1 * iDirection;
 6574              		.loc 21 498 27
 6575 0022 BB68     		ldr	r3, [r7, #8]
 6576 0024 DAB2     		uxtb	r2, r3
 6577 0026 FB7B     		ldrb	r3, [r7, #15]
 6578 0028 1344     		add	r3, r3, r2
 6579 002a FB73     		strb	r3, [r7, #15]
 499:control.h     ****         osc.SetHarmonicWaveForm(uiCurrentWaveform);
 6580              		.loc 21 499 32
 6581 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6582 002e 1946     		mov	r1, r3
 6583 0030 7868     		ldr	r0, [r7, #4]
 6584 0032 FFF7FEFF 		bl	_ZN20clasEulersOscillatorILi16EE19SetHarmonicWaveFormEh
 6585              	.L309:
 500:control.h     ****     }
 501:control.h     **** }
 6586              		.loc 21 501 1
 6587 0036 00BF     		nop
 6588 0038 1037     		adds	r7, r7, #16
 6589              		.cfi_def_cfa_offset 8
 6590 003a BD46     		mov	sp, r7
 6591              		.cfi_def_cfa_register 13
 6592              		@ sp needed
 6593 003c 80BD     		pop	{r7, pc}
 6594              		.cfi_endproc
 6595              	.LFE4745:
 6597              		.section	.text._Z6fxADSRN5daisy11clasEncoderES0_S0_S0_NS_6SwitchE,"ax",%progbits
 6598              		.align	1
 6599              		.global	_Z6fxADSRN5daisy11clasEncoderES0_S0_S0_NS_6SwitchE
 6600              		.syntax unified
 6601              		.thumb
 6602              		.thumb_func
 6603              		.fpu fpv5-d16
 6605              	_Z6fxADSRN5daisy11clasEncoderES0_S0_S0_NS_6SwitchE:
 6606              	.LFB4746:
 502:control.h     **** 
 503:control.h     **** 
 504:control.h     **** //Attack Decay Sustain Release Functionality 
 505:control.h     **** void fxADSR(clasEncoder attack, clasEncoder decay, clasEncoder sustain, clasEncoder release, Switch
 6607              		.loc 21 505 109
 6608              		.cfi_startproc
 6609              		@ args = 4, pretend = 0, frame = 48
 6610              		@ frame_needed = 1, uses_anonymous_args = 0
 6611 0000 80B5     		push	{r7, lr}
 6612              		.cfi_def_cfa_offset 8
 6613              		.cfi_offset 7, -8
 6614              		.cfi_offset 14, -4
 6615 0002 8CB0     		sub	sp, sp, #48
 6616              		.cfi_def_cfa_offset 56
 6617 0004 00AF     		add	r7, sp, #0
 6618              		.cfi_def_cfa_register 7
 6619 0006 F860     		str	r0, [r7, #12]
 6620 0008 B960     		str	r1, [r7, #8]
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 164


 6621 000a 7A60     		str	r2, [r7, #4]
 6622 000c 3B60     		str	r3, [r7]
 6623              	.LBB31:
 506:control.h     ****     //Encoder debounce needs to happen outside of function to allow all other functions using encod
 507:control.h     **** 
 508:control.h     ****     //Check if it is held
 509:control.h     ****     if(adsrBtn.Pressed()){
 6624              		.loc 21 509 23
 6625 000e B86B     		ldr	r0, [r7, #56]
 6626 0010 FFF7FEFF 		bl	_ZNK5daisy6Switch7PressedEv
 6627 0014 0346     		mov	r3, r0
 6628              		.loc 21 509 5
 6629 0016 002B     		cmp	r3, #0
 6630 0018 00F0BC80 		beq	.L319
 6631              	.LBB32:
 510:control.h     **** 
 511:control.h     ****         //Attack Update
 512:control.h     ****         if ( attack.RisingEdge() ){ //Reset to default value. 
 6632              		.loc 21 512 31
 6633 001c F868     		ldr	r0, [r7, #12]
 6634 001e FFF7FEFF 		bl	_ZNK5daisy11clasEncoder10RisingEdgeEv
 6635 0022 0346     		mov	r3, r0
 6636              		.loc 21 512 9
 6637 0024 002B     		cmp	r3, #0
 6638 0026 04D0     		beq	.L312
 513:control.h     ****             objADSR.SetAttackRate(1.f);
 6639              		.loc 21 513 34
 6640 0028 B7EE000A 		vmov.f32	s0, #1.0e+0
 6641 002c 5E48     		ldr	r0, .L320+8
 6642 002e FFF7FEFF 		bl	_ZN8clasADSR13SetAttackRateEf
 6643              	.L312:
 514:control.h     ****         }
 515:control.h     ****         int iDirA = attack.Increment();
 6644              		.loc 21 515 37
 6645 0032 F868     		ldr	r0, [r7, #12]
 6646 0034 FFF7FEFF 		bl	_ZNK5daisy11clasEncoder9IncrementEv
 6647 0038 F862     		str	r0, [r7, #44]
 6648              	.LBB33:
 516:control.h     ****         if (iDirA != 0){
 6649              		.loc 21 516 9
 6650 003a FB6A     		ldr	r3, [r7, #44]
 6651 003c 002B     		cmp	r3, #0
 6652 003e 1CD0     		beq	.L313
 6653              	.LBB34:
 517:control.h     ****             float flAttackTime = objADSR.GetAttackTime();
 6654              		.loc 21 517 55
 6655 0040 5948     		ldr	r0, .L320+8
 6656 0042 FFF7FEFF 		bl	_ZN8clasADSR13GetAttackTimeEv
 6657 0046 87ED0A0A 		vstr.32	s0, [r7, #40]
 518:control.h     ****             flAttackTime += 0.25 * iDirA;
 6658              		.loc 21 518 26
 6659 004a D7ED0A7A 		vldr.32	s15, [r7, #40]
 6660 004e B7EEE76A 		vcvt.f64.f32	d6, s15
 6661              		.loc 21 518 34
 6662 0052 FB6A     		ldr	r3, [r7, #44]
 6663 0054 07EE903A 		vmov	s15, r3	@ int
 6664 0058 B8EEE77B 		vcvt.f64.s32	d7, s15
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 165


 6665 005c B5EE005B 		vmov.f64	d5, #2.5e-1
 6666 0060 27EE057B 		vmul.f64	d7, d7, d5
 6667              		.loc 21 518 26
 6668 0064 36EE077B 		vadd.f64	d7, d6, d7
 6669 0068 F7EEC77B 		vcvt.f32.f64	s15, d7
 6670 006c C7ED0A7A 		vstr.32	s15, [r7, #40]
 519:control.h     ****             objADSR.SetAttackRate(flAttackTime);
 6671              		.loc 21 519 34
 6672 0070 97ED0A0A 		vldr.32	s0, [r7, #40]
 6673 0074 4C48     		ldr	r0, .L320+8
 6674 0076 FFF7FEFF 		bl	_ZN8clasADSR13SetAttackRateEf
 6675              	.L313:
 6676              	.LBE34:
 6677              	.LBE33:
 520:control.h     ****         }
 521:control.h     **** 
 522:control.h     ****         //Decay Update
 523:control.h     ****         if ( decay.RisingEdge() ){ //Reset to default value. 
 6678              		.loc 21 523 30
 6679 007a B868     		ldr	r0, [r7, #8]
 6680 007c FFF7FEFF 		bl	_ZNK5daisy11clasEncoder10RisingEdgeEv
 6681 0080 0346     		mov	r3, r0
 6682              		.loc 21 523 9
 6683 0082 002B     		cmp	r3, #0
 6684 0084 04D0     		beq	.L314
 524:control.h     ****             objADSR.SetDecayRate(1.f);
 6685              		.loc 21 524 33
 6686 0086 B7EE000A 		vmov.f32	s0, #1.0e+0
 6687 008a 4748     		ldr	r0, .L320+8
 6688 008c FFF7FEFF 		bl	_ZN8clasADSR12SetDecayRateEf
 6689              	.L314:
 525:control.h     ****         }
 526:control.h     ****         int iDirB = decay.Increment();
 6690              		.loc 21 526 36
 6691 0090 B868     		ldr	r0, [r7, #8]
 6692 0092 FFF7FEFF 		bl	_ZNK5daisy11clasEncoder9IncrementEv
 6693 0096 7862     		str	r0, [r7, #36]
 6694              	.LBB35:
 527:control.h     ****         if (iDirB != 0){
 6695              		.loc 21 527 9
 6696 0098 7B6A     		ldr	r3, [r7, #36]
 6697 009a 002B     		cmp	r3, #0
 6698 009c 1CD0     		beq	.L315
 6699              	.LBB36:
 528:control.h     ****             float flDecayTime = objADSR.GetDecayTime();
 6700              		.loc 21 528 53
 6701 009e 4248     		ldr	r0, .L320+8
 6702 00a0 FFF7FEFF 		bl	_ZN8clasADSR12GetDecayTimeEv
 6703 00a4 87ED080A 		vstr.32	s0, [r7, #32]
 529:control.h     ****             flDecayTime += 0.25 * iDirB;
 6704              		.loc 21 529 25
 6705 00a8 D7ED087A 		vldr.32	s15, [r7, #32]
 6706 00ac B7EEE76A 		vcvt.f64.f32	d6, s15
 6707              		.loc 21 529 33
 6708 00b0 7B6A     		ldr	r3, [r7, #36]
 6709 00b2 07EE903A 		vmov	s15, r3	@ int
 6710 00b6 B8EEE77B 		vcvt.f64.s32	d7, s15
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 166


 6711 00ba B5EE005B 		vmov.f64	d5, #2.5e-1
 6712 00be 27EE057B 		vmul.f64	d7, d7, d5
 6713              		.loc 21 529 25
 6714 00c2 36EE077B 		vadd.f64	d7, d6, d7
 6715 00c6 F7EEC77B 		vcvt.f32.f64	s15, d7
 6716 00ca C7ED087A 		vstr.32	s15, [r7, #32]
 530:control.h     ****             objADSR.SetDecayRate(flDecayTime);
 6717              		.loc 21 530 33
 6718 00ce 97ED080A 		vldr.32	s0, [r7, #32]
 6719 00d2 3548     		ldr	r0, .L320+8
 6720 00d4 FFF7FEFF 		bl	_ZN8clasADSR12SetDecayRateEf
 6721              	.L315:
 6722              	.LBE36:
 6723              	.LBE35:
 531:control.h     ****         }
 532:control.h     **** 
 533:control.h     ****         //Sustain Update
 534:control.h     ****         if ( sustain.RisingEdge() ){ //Reset to default value. 
 6724              		.loc 21 534 32
 6725 00d8 7868     		ldr	r0, [r7, #4]
 6726 00da FFF7FEFF 		bl	_ZNK5daisy11clasEncoder10RisingEdgeEv
 6727 00de 0346     		mov	r3, r0
 6728              		.loc 21 534 9
 6729 00e0 002B     		cmp	r3, #0
 6730 00e2 04D0     		beq	.L316
 535:control.h     ****             objADSR.SetSustainLevel(0.7f);
 6731              		.loc 21 535 36
 6732 00e4 9FED310A 		vldr.32	s0, .L320+12
 6733 00e8 2F48     		ldr	r0, .L320+8
 6734 00ea FFF7FEFF 		bl	_ZN8clasADSR15SetSustainLevelEf
 6735              	.L316:
 536:control.h     ****         }
 537:control.h     ****         int iDirC = sustain.Increment();
 6736              		.loc 21 537 38
 6737 00ee 7868     		ldr	r0, [r7, #4]
 6738 00f0 FFF7FEFF 		bl	_ZNK5daisy11clasEncoder9IncrementEv
 6739 00f4 F861     		str	r0, [r7, #28]
 6740              	.LBB37:
 538:control.h     ****         if (iDirC != 0){
 6741              		.loc 21 538 9
 6742 00f6 FB69     		ldr	r3, [r7, #28]
 6743 00f8 002B     		cmp	r3, #0
 6744 00fa 1CD0     		beq	.L317
 6745              	.LBB38:
 539:control.h     ****             float flSustainLevel = objADSR.GetSustainLevel();
 6746              		.loc 21 539 59
 6747 00fc 2A48     		ldr	r0, .L320+8
 6748 00fe FFF7FEFF 		bl	_ZN8clasADSR15GetSustainLevelEv
 6749 0102 87ED060A 		vstr.32	s0, [r7, #24]
 540:control.h     ****             flSustainLevel += 0.1 * iDirC;
 6750              		.loc 21 540 28
 6751 0106 D7ED067A 		vldr.32	s15, [r7, #24]
 6752 010a B7EEE76A 		vcvt.f64.f32	d6, s15
 6753              		.loc 21 540 35
 6754 010e FB69     		ldr	r3, [r7, #28]
 6755 0110 07EE903A 		vmov	s15, r3	@ int
 6756 0114 B8EEE77B 		vcvt.f64.s32	d7, s15
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 167


 6757 0118 9FED215B 		vldr.64	d5, .L320
 6758 011c 27EE057B 		vmul.f64	d7, d7, d5
 6759              		.loc 21 540 28
 6760 0120 36EE077B 		vadd.f64	d7, d6, d7
 6761 0124 F7EEC77B 		vcvt.f32.f64	s15, d7
 6762 0128 C7ED067A 		vstr.32	s15, [r7, #24]
 541:control.h     ****             objADSR.SetSustainLevel(flSustainLevel);
 6763              		.loc 21 541 36
 6764 012c 97ED060A 		vldr.32	s0, [r7, #24]
 6765 0130 1D48     		ldr	r0, .L320+8
 6766 0132 FFF7FEFF 		bl	_ZN8clasADSR15SetSustainLevelEf
 6767              	.L317:
 6768              	.LBE38:
 6769              	.LBE37:
 542:control.h     ****         }  
 543:control.h     **** 
 544:control.h     ****         //Release Update
 545:control.h     ****         if ( release.RisingEdge() ){ //Reset to default value. 
 6770              		.loc 21 545 32
 6771 0136 3868     		ldr	r0, [r7]
 6772 0138 FFF7FEFF 		bl	_ZNK5daisy11clasEncoder10RisingEdgeEv
 6773 013c 0346     		mov	r3, r0
 6774              		.loc 21 545 9
 6775 013e 002B     		cmp	r3, #0
 6776 0140 04D0     		beq	.L318
 546:control.h     ****             objADSR.SetReleaseRate(1.f);
 6777              		.loc 21 546 35
 6778 0142 B7EE000A 		vmov.f32	s0, #1.0e+0
 6779 0146 1848     		ldr	r0, .L320+8
 6780 0148 FFF7FEFF 		bl	_ZN8clasADSR14SetReleaseRateEf
 6781              	.L318:
 547:control.h     ****         }
 548:control.h     ****         int iDirD = release.Increment();
 6782              		.loc 21 548 38
 6783 014c 3868     		ldr	r0, [r7]
 6784 014e FFF7FEFF 		bl	_ZNK5daisy11clasEncoder9IncrementEv
 6785 0152 7861     		str	r0, [r7, #20]
 6786              	.LBB39:
 549:control.h     ****         if (iDirD != 0){
 6787              		.loc 21 549 9
 6788 0154 7B69     		ldr	r3, [r7, #20]
 6789 0156 002B     		cmp	r3, #0
 6790 0158 1CD0     		beq	.L319
 6791              	.LBB40:
 550:control.h     ****             float flReleaseTime = objADSR.GetReleaseTime();
 6792              		.loc 21 550 57
 6793 015a 1348     		ldr	r0, .L320+8
 6794 015c FFF7FEFF 		bl	_ZN8clasADSR14GetReleaseTimeEv
 6795 0160 87ED040A 		vstr.32	s0, [r7, #16]
 551:control.h     ****             flReleaseTime += 0.25 * iDirD;
 6796              		.loc 21 551 27
 6797 0164 D7ED047A 		vldr.32	s15, [r7, #16]
 6798 0168 B7EEE76A 		vcvt.f64.f32	d6, s15
 6799              		.loc 21 551 35
 6800 016c 7B69     		ldr	r3, [r7, #20]
 6801 016e 07EE903A 		vmov	s15, r3	@ int
 6802 0172 B8EEE77B 		vcvt.f64.s32	d7, s15
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 168


 6803 0176 B5EE005B 		vmov.f64	d5, #2.5e-1
 6804 017a 27EE057B 		vmul.f64	d7, d7, d5
 6805              		.loc 21 551 27
 6806 017e 36EE077B 		vadd.f64	d7, d6, d7
 6807 0182 F7EEC77B 		vcvt.f32.f64	s15, d7
 6808 0186 C7ED047A 		vstr.32	s15, [r7, #16]
 552:control.h     ****             objADSR.SetReleaseRate(flReleaseTime);
 6809              		.loc 21 552 35
 6810 018a 97ED040A 		vldr.32	s0, [r7, #16]
 6811 018e 0648     		ldr	r0, .L320+8
 6812 0190 FFF7FEFF 		bl	_ZN8clasADSR14SetReleaseRateEf
 6813              	.L319:
 6814              	.LBE40:
 6815              	.LBE39:
 6816              	.LBE32:
 6817              	.LBE31:
 553:control.h     ****         }
 554:control.h     ****     }
 555:control.h     **** };
 6818              		.loc 21 555 1
 6819 0194 00BF     		nop
 6820 0196 3037     		adds	r7, r7, #48
 6821              		.cfi_def_cfa_offset 8
 6822 0198 BD46     		mov	sp, r7
 6823              		.cfi_def_cfa_register 13
 6824              		@ sp needed
 6825 019a 80BD     		pop	{r7, pc}
 6826              	.L321:
 6827 019c AFF30080 		.align	3
 6828              	.L320:
 6829 01a0 9A999999 		.word	-1717986918
 6830 01a4 9999B93F 		.word	1069128089
 6831 01a8 00000000 		.word	objADSR
 6832 01ac 3333333F 		.word	1060320051
 6833              		.cfi_endproc
 6834              	.LFE4746:
 6836              		.section	.rodata
 6837              		.align	2
 6838              	.LC3:
 6839 002c 4B657920 		.ascii	"Key press: %d\000"
 6839      70726573 
 6839      733A2025 
 6839      6400
 6840 003a 0000     		.align	2
 6841              	.LC4:
 6842 003c 44726F6E 		.ascii	"Drone Normal Mode Selected\000"
 6842      65204E6F 
 6842      726D616C 
 6842      204D6F64 
 6842      65205365 
 6843 0057 00       		.align	2
 6844              	.LC5:
 6845 0058 41445352 		.ascii	"ADSR Mode Selected\000"
 6845      204D6F64 
 6845      65205365 
 6845      6C656374 
 6845      656400
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 169


 6846 006b 00       		.align	2
 6847              	.LC6:
 6848 006c 44726F6E 		.ascii	"Drone Amplitude Mode Selected\000"
 6848      6520416D 
 6848      706C6974 
 6848      75646520 
 6848      4D6F6465 
 6849 008a 0000     		.align	2
 6850              	.LC7:
 6851 008c 44726F6E 		.ascii	"Drone Ratio Mode Selected\000"
 6851      65205261 
 6851      74696F20 
 6851      4D6F6465 
 6851      2053656C 
 6852 00a6 0000     		.align	2
 6853              	.LC8:
 6854 00a8 44726F6E 		.ascii	"Drone Match Mode Selected\000"
 6854      65204D61 
 6854      74636820 
 6854      4D6F6465 
 6854      2053656C 
 6855 00c2 0000     		.align	2
 6856              	.LC9:
 6857 00c4 44726F6E 		.ascii	"Drone Shape Mode Selected\000"
 6857      65205368 
 6857      61706520 
 6857      4D6F6465 
 6857      2053656C 
 6858 00de 0000     		.align	2
 6859              	.LC10:
 6860 00e0 4C656164 		.ascii	"Lead Shape Mode Selected\000"
 6860      20536861 
 6860      7065204D 
 6860      6F646520 
 6860      53656C65 
 6861 00f9 000000   		.align	2
 6862              	.LC11:
 6863 00fc 46415354 		.ascii	"FAST_LFO Mode Selected\000"
 6863      5F4C464F 
 6863      204D6F64 
 6863      65205365 
 6863      6C656374 
 6864 0113 00       		.align	2
 6865              	.LC12:
 6866 0114 534C4F57 		.ascii	"SLOW_LFO Mode Selected\000"
 6866      5F4C464F 
 6866      204D6F64 
 6866      65205365 
 6866      6C656374 
 6867 012b 00       		.align	2
 6868              	.LC13:
 6869 012c 44726F6E 		.ascii	"Drone Voice Connected to LFO\000"
 6869      6520566F 
 6869      69636520 
 6869      436F6E6E 
 6869      65637465 
 6870 0149 000000   		.align	2
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 170


 6871              	.LC14:
 6872 014c 4C656164 		.ascii	"Lead Voice Connected to LFO\000"
 6872      20566F69 
 6872      63652043 
 6872      6F6E6E65 
 6872      63746564 
 6873              		.align	2
 6874              	.LC15:
 6875 0168 54524F4D 		.ascii	"TROMOLO Mode Selected\000"
 6875      4F4C4F20 
 6875      4D6F6465 
 6875      2053656C 
 6875      65637465 
 6876 017e 0000     		.align	2
 6877              	.LC16:
 6878 0180 56494252 		.ascii	"VIBRATO Mode Selected\000"
 6878      41544F20 
 6878      4D6F6465 
 6878      2053656C 
 6878      65637465 
 6879              		.section	.text._Z10fxModeMenui,"ax",%progbits
 6880              		.align	1
 6881              		.global	_Z10fxModeMenui
 6882              		.syntax unified
 6883              		.thumb
 6884              		.thumb_func
 6885              		.fpu fpv5-d16
 6887              	_Z10fxModeMenui:
 6888              	.LFB4747:
 556:control.h     **** 
 557:control.h     **** 
 558:control.h     **** //User Interface Mode Menu
 559:control.h     **** void fxModeMenu(int input){
 6889              		.loc 21 559 27
 6890              		.cfi_startproc
 6891              		@ args = 0, pretend = 0, frame = 16
 6892              		@ frame_needed = 1, uses_anonymous_args = 0
 6893 0000 80B5     		push	{r7, lr}
 6894              		.cfi_def_cfa_offset 8
 6895              		.cfi_offset 7, -8
 6896              		.cfi_offset 14, -4
 6897 0002 84B0     		sub	sp, sp, #16
 6898              		.cfi_def_cfa_offset 24
 6899 0004 00AF     		add	r7, sp, #0
 6900              		.cfi_def_cfa_register 7
 6901 0006 7860     		str	r0, [r7, #4]
 560:control.h     ****     bool xPrintLine = false;
 6902              		.loc 21 560 10
 6903 0008 0023     		movs	r3, #0
 6904 000a FB73     		strb	r3, [r7, #15]
 561:control.h     **** 
 562:control.h     ****     //Menu debounce system
 563:control.h     ****     if (fxMenuDebounce()){
 6905              		.loc 21 563 23
 6906 000c FFF7FEFF 		bl	_Z14fxMenuDebouncev
 6907 0010 0346     		mov	r3, r0
 6908              		.loc 21 563 5
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 171


 6909 0012 002B     		cmp	r3, #0
 6910 0014 12D0     		beq	.L323
 564:control.h     ****         iUserInput_ = input;
 6911              		.loc 21 564 21
 6912 0016 A74A     		ldr	r2, .L368
 6913 0018 7B68     		ldr	r3, [r7, #4]
 6914 001a 1360     		str	r3, [r2]
 565:control.h     ****         if (iPrevUserInput != iUserInput_){
 6915              		.loc 21 565 28
 6916 001c A64B     		ldr	r3, .L368+4
 6917 001e 1A68     		ldr	r2, [r3]
 6918 0020 A44B     		ldr	r3, .L368
 6919 0022 1B68     		ldr	r3, [r3]
 6920              		.loc 21 565 9
 6921 0024 9A42     		cmp	r2, r3
 6922 0026 09D0     		beq	.L323
 566:control.h     ****             iPrevUserInput = iUserInput_;
 6923              		.loc 21 566 28
 6924 0028 A24B     		ldr	r3, .L368
 6925 002a 1B68     		ldr	r3, [r3]
 6926 002c A24A     		ldr	r2, .L368+4
 6927 002e 1360     		str	r3, [r2]
 567:control.h     ****             hw.PrintLine("Key press: %d", input);
 6928              		.loc 21 567 25
 6929 0030 7968     		ldr	r1, [r7, #4]
 6930 0032 A248     		ldr	r0, .L368+8
 6931 0034 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJiEEEvPKcDpT_
 568:control.h     ****             xPrintLine = true;
 6932              		.loc 21 568 24
 6933 0038 0123     		movs	r3, #1
 6934 003a FB73     		strb	r3, [r7, #15]
 6935              	.L323:
 6936              	.LBB41:
 569:control.h     ****         }
 570:control.h     ****     }
 571:control.h     **** 
 572:control.h     ****     if (eMenuState == M_MAIN){
 6937              		.loc 21 572 20
 6938 003c A04B     		ldr	r3, .L368+12
 6939 003e 1B68     		ldr	r3, [r3]
 6940              		.loc 21 572 5
 6941 0040 002B     		cmp	r3, #0
 6942 0042 40F0F380 		bne	.L324
 573:control.h     ****         objResetMenuTimer.Start();
 6943              		.loc 21 573 32
 6944 0046 9F48     		ldr	r0, .L368+16
 6945 0048 FFF7FEFF 		bl	_ZN5daisy11TimerHandle5StartEv
 574:control.h     **** 
 575:control.h     ****         //////////////////////////////////////////////////////////////////////////////////////
 576:control.h     ****         //MAIN////////////////////////////////////////////////////////////////////////////////
 577:control.h     **** 
 578:control.h     ****         // if (xPrintLine) {hw.PrintLine("Entered the Main Menu");}
 579:control.h     ****         eMain = iUserInput_;
 6946              		.loc 21 579 15
 6947 004c 994B     		ldr	r3, .L368
 6948 004e 1B68     		ldr	r3, [r3]
 6949 0050 9D4A     		ldr	r2, .L368+20
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 172


 6950 0052 1360     		str	r3, [r2]
 580:control.h     **** 
 581:control.h     ****         switch(eMain){
 6951              		.loc 21 581 9
 6952 0054 9C4B     		ldr	r3, .L368+20
 6953 0056 1B68     		ldr	r3, [r3]
 6954 0058 0B2B     		cmp	r3, #11
 6955 005a 00F2D780 		bhi	.L325
 6956 005e 01A2     		adr	r2, .L327
 6957 0060 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6958              		.p2align 2
 6959              	.L327:
 6960 0064 95000000 		.word	.L335+1
 6961 0068 21010000 		.word	.L334+1
 6962 006c A9000000 		.word	.L333+1
 6963 0070 97010000 		.word	.L332+1
 6964 0074 BD000000 		.word	.L331+1
 6965 0078 D1000000 		.word	.L330+1
 6966 007c 0D020000 		.word	.L325+1
 6967 0080 E5000000 		.word	.L329+1
 6968 0084 0D020000 		.word	.L325+1
 6969 0088 F9000000 		.word	.L328+1
 6970 008c 0D020000 		.word	.L325+1
 6971 0090 0D010000 		.word	.L326+1
 6972              		.p2align 1
 6973              	.L335:
 582:control.h     ****             case T_NORMAL:
 583:control.h     ****             if (xPrintLine) {hw.PrintLine("Drone Normal Mode Selected");}
 6974              		.loc 21 583 13
 6975 0094 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6976 0096 002B     		cmp	r3, #0
 6977 0098 02D0     		beq	.L336
 6978              		.loc 21 583 42 discriminator 1
 6979 009a 8C48     		ldr	r0, .L368+24
 6980 009c FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 6981              	.L336:
 584:control.h     ****                 // xNormalMode = true;
 585:control.h     ****                 eMain = T_NORMAL;
 6982              		.loc 21 585 23
 6983 00a0 894B     		ldr	r3, .L368+20
 6984 00a2 0022     		movs	r2, #0
 6985 00a4 1A60     		str	r2, [r3]
 586:control.h     ****                 break;
 6986              		.loc 21 586 17
 6987 00a6 B8E0     		b	.L337
 6988              	.L333:
 587:control.h     **** 
 588:control.h     ****             case T_ADSR: //ADSR Control 
 589:control.h     ****             if (xPrintLine) {hw.PrintLine("ADSR Mode Selected");}
 6989              		.loc 21 589 13
 6990 00a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6991 00aa 002B     		cmp	r3, #0
 6992 00ac 02D0     		beq	.L338
 6993              		.loc 21 589 42 discriminator 1
 6994 00ae 8848     		ldr	r0, .L368+28
 6995 00b0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 6996              	.L338:
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 173


 590:control.h     ****                 // fxADSR(objEncoderA, objEncoderB, objEncoderC, objEncoderD, Btn1);
 591:control.h     ****                 eMain = T_ADSR;
 6997              		.loc 21 591 23
 6998 00b4 844B     		ldr	r3, .L368+20
 6999 00b6 0222     		movs	r2, #2
 7000 00b8 1A60     		str	r2, [r3]
 592:control.h     ****                 break;
 7001              		.loc 21 592 17
 7002 00ba AEE0     		b	.L337
 7003              	.L331:
 593:control.h     ****     
 594:control.h     ****             case T_D_AMP:
 595:control.h     ****             if (xPrintLine) {hw.PrintLine("Drone Amplitude Mode Selected");}
 7004              		.loc 21 595 13
 7005 00bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7006 00be 002B     		cmp	r3, #0
 7007 00c0 02D0     		beq	.L339
 7008              		.loc 21 595 42 discriminator 1
 7009 00c2 8448     		ldr	r0, .L368+32
 7010 00c4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 7011              	.L339:
 596:control.h     ****                 // IncOscillatorAmplitude(aobjSingleOscillator[0], objEncoderA);
 597:control.h     ****                 // IncOscillatorAmplitude(aobjSingleOscillator[1], objEncoderB);
 598:control.h     ****                 // IncOscillatorAmplitude(aobjSingleOscillator[2], objEncoderC);
 599:control.h     ****                 // IncOscillatorAmplitude(aobjSingleOscillator[3], objEncoderD);
 600:control.h     ****                 eMain = T_D_AMP;
 7012              		.loc 21 600 23
 7013 00c8 7F4B     		ldr	r3, .L368+20
 7014 00ca 0422     		movs	r2, #4
 7015 00cc 1A60     		str	r2, [r3]
 601:control.h     ****                 break;
 7016              		.loc 21 601 17
 7017 00ce A4E0     		b	.L337
 7018              	.L330:
 602:control.h     ****     
 603:control.h     ****             case T_RATIO:
 604:control.h     ****             if (xPrintLine) {hw.PrintLine("Drone Ratio Mode Selected");}
 7019              		.loc 21 604 13
 7020 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7021 00d2 002B     		cmp	r3, #0
 7022 00d4 02D0     		beq	.L340
 7023              		.loc 21 604 42 discriminator 1
 7024 00d6 8048     		ldr	r0, .L368+36
 7025 00d8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 7026              	.L340:
 605:control.h     ****                 // xNormalMode = false;
 606:control.h     ****                 eMain = T_RATIO;
 7027              		.loc 21 606 23
 7028 00dc 7A4B     		ldr	r3, .L368+20
 7029 00de 0522     		movs	r2, #5
 7030 00e0 1A60     		str	r2, [r3]
 607:control.h     ****                 break;
 7031              		.loc 21 607 17
 7032 00e2 9AE0     		b	.L337
 7033              	.L329:
 608:control.h     ****     
 609:control.h     ****             case T_MATCH:
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 174


 610:control.h     ****             if (xPrintLine) {hw.PrintLine("Drone Match Mode Selected");}
 7034              		.loc 21 610 13
 7035 00e4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7036 00e6 002B     		cmp	r3, #0
 7037 00e8 02D0     		beq	.L341
 7038              		.loc 21 610 42 discriminator 1
 7039 00ea 7C48     		ldr	r0, .L368+40
 7040 00ec FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 7041              	.L341:
 611:control.h     ****                 // fxFrequencyMatch(aobjSingleOscillator[0], objEncoderA);
 612:control.h     ****                 // fxFrequencyMatch(aobjSingleOscillator[1], objEncoderB);
 613:control.h     ****                 // fxFrequencyMatch(aobjSingleOscillator[2], objEncoderC);
 614:control.h     ****                 // fxFrequencyMatch(aobjSingleOscillator[3], objEncoderD);
 615:control.h     ****                 eMain = T_MATCH;
 7042              		.loc 21 615 23
 7043 00f0 754B     		ldr	r3, .L368+20
 7044 00f2 0722     		movs	r2, #7
 7045 00f4 1A60     		str	r2, [r3]
 616:control.h     ****                 break;
 7046              		.loc 21 616 17
 7047 00f6 90E0     		b	.L337
 7048              	.L328:
 617:control.h     ****     
 618:control.h     ****             case T_D_SHAPE:
 619:control.h     ****             if (xPrintLine) {hw.PrintLine("Drone Shape Mode Selected");}
 7049              		.loc 21 619 13
 7050 00f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7051 00fa 002B     		cmp	r3, #0
 7052 00fc 02D0     		beq	.L342
 7053              		.loc 21 619 42 discriminator 1
 7054 00fe 7848     		ldr	r0, .L368+44
 7055 0100 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 7056              	.L342:
 620:control.h     ****                 // ChangeWaveform(aobjSingleOscillator[0], objEncoderA);
 621:control.h     ****                 // ChangeWaveform(aobjSingleOscillator[1], objEncoderB);
 622:control.h     ****                 // ChangeWaveform(aobjSingleOscillator[2], objEncoderC);
 623:control.h     ****                 // ChangeWaveform(aobjSingleOscillator[3], objEncoderD);
 624:control.h     ****                 eMain = T_D_SHAPE;
 7057              		.loc 21 624 23
 7058 0104 704B     		ldr	r3, .L368+20
 7059 0106 0922     		movs	r2, #9
 7060 0108 1A60     		str	r2, [r3]
 625:control.h     ****                 break;
 7061              		.loc 21 625 17
 7062 010a 86E0     		b	.L337
 7063              	.L326:
 626:control.h     ****     
 627:control.h     ****             case T_L_SHAPE:
 628:control.h     ****             if (xPrintLine) {hw.PrintLine("Lead Shape Mode Selected");}
 7064              		.loc 21 628 13
 7065 010c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7066 010e 002B     		cmp	r3, #0
 7067 0110 02D0     		beq	.L343
 7068              		.loc 21 628 42 discriminator 1
 7069 0112 7448     		ldr	r0, .L368+48
 7070 0114 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 7071              	.L343:
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 175


 629:control.h     ****                 // ChangeWaveform(objLeadVoice, objEncoderA);
 630:control.h     ****                 eMain = T_L_SHAPE;
 7072              		.loc 21 630 23
 7073 0118 6B4B     		ldr	r3, .L368+20
 7074 011a 0B22     		movs	r2, #11
 7075 011c 1A60     		str	r2, [r3]
 631:control.h     ****                 break;
 7076              		.loc 21 631 17
 7077 011e 7CE0     		b	.L337
 7078              	.L334:
 632:control.h     ****     
 633:control.h     ****             case T_FAST_LFO:
 634:control.h     ****             if (xPrintLine) {hw.PrintLine("FAST_LFO Mode Selected");}
 7079              		.loc 21 634 13
 7080 0120 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7081 0122 002B     		cmp	r3, #0
 7082 0124 02D0     		beq	.L344
 7083              		.loc 21 634 42 discriminator 1
 7084 0126 7048     		ldr	r0, .L368+52
 7085 0128 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 7086              	.L344:
 635:control.h     ****                 eMenuState = M_SUB;
 7087              		.loc 21 635 28
 7088 012c 644B     		ldr	r3, .L368+12
 7089 012e 0122     		movs	r2, #1
 7090 0130 1A60     		str	r2, [r3]
 636:control.h     ****                 //Store the address of the LFO
 637:control.h     **** 
 638:control.h     ****                 g_iLFOElement = 0;
 7091              		.loc 21 638 31
 7092 0132 6E4B     		ldr	r3, .L368+56
 7093 0134 0022     		movs	r2, #0
 7094 0136 1A60     		str	r2, [r3]
 639:control.h     **** 
 640:control.h     ****                 g_astruLfoSlots[g_iLFOElement].ptrLFO = &objLFOFast;  // or &objLFOSlow
 7095              		.loc 21 640 48
 7096 0138 6C4B     		ldr	r3, .L368+56
 7097 013a 1A68     		ldr	r2, [r3]
 7098              		.loc 21 640 55
 7099 013c 6C49     		ldr	r1, .L368+60
 7100 013e 1346     		mov	r3, r2
 7101 0140 9B00     		lsls	r3, r3, #2
 7102 0142 1344     		add	r3, r3, r2
 7103 0144 9B00     		lsls	r3, r3, #2
 7104 0146 0B44     		add	r3, r3, r1
 7105 0148 6A4A     		ldr	r2, .L368+64
 7106 014a 1A60     		str	r2, [r3]
 641:control.h     ****                 g_astruLfoSlots[g_iLFOElement].whichVoice = VoiceSelection::None;
 7107              		.loc 21 641 48
 7108 014c 674B     		ldr	r3, .L368+56
 7109 014e 1A68     		ldr	r2, [r3]
 7110              		.loc 21 641 59
 7111 0150 6749     		ldr	r1, .L368+60
 7112 0152 1346     		mov	r3, r2
 7113 0154 9B00     		lsls	r3, r3, #2
 7114 0156 1344     		add	r3, r3, r2
 7115 0158 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 176


 7116 015a 0B44     		add	r3, r3, r1
 7117 015c 0833     		adds	r3, r3, #8
 7118 015e 0022     		movs	r2, #0
 7119 0160 1A60     		str	r2, [r3]
 642:control.h     ****                 g_astruLfoSlots[g_iLFOElement].xTremolo = false;
 7120              		.loc 21 642 48
 7121 0162 624B     		ldr	r3, .L368+56
 7122 0164 1A68     		ldr	r2, [r3]
 7123              		.loc 21 642 57
 7124 0166 6249     		ldr	r1, .L368+60
 7125 0168 1346     		mov	r3, r2
 7126 016a 9B00     		lsls	r3, r3, #2
 7127 016c 1344     		add	r3, r3, r2
 7128 016e 9B00     		lsls	r3, r3, #2
 7129 0170 0B44     		add	r3, r3, r1
 7130 0172 1033     		adds	r3, r3, #16
 7131 0174 0022     		movs	r2, #0
 7132 0176 1A70     		strb	r2, [r3]
 643:control.h     ****                 g_astruLfoSlots[g_iLFOElement].xVibrato = false;
 7133              		.loc 21 643 48
 7134 0178 5C4B     		ldr	r3, .L368+56
 7135 017a 1A68     		ldr	r2, [r3]
 7136              		.loc 21 643 57
 7137 017c 5C49     		ldr	r1, .L368+60
 7138 017e 1346     		mov	r3, r2
 7139 0180 9B00     		lsls	r3, r3, #2
 7140 0182 1344     		add	r3, r3, r2
 7141 0184 9B00     		lsls	r3, r3, #2
 7142 0186 0B44     		add	r3, r3, r1
 7143 0188 1133     		adds	r3, r3, #17
 7144 018a 0022     		movs	r2, #0
 7145 018c 1A70     		strb	r2, [r3]
 644:control.h     **** 
 645:control.h     **** 
 646:control.h     ****                 // fxFrequencyInc(objLFOSlow, objEncoderA, 0);
 647:control.h     ****                 // IncOscillatorDepth(objLFOSlow, objEncoderB); //Add this function 
 648:control.h     ****                 // ChangeWaveform(objLFOSlow, objEncoderC);
 649:control.h     ****                 eMain = T_FAST_LFO;
 7146              		.loc 21 649 23
 7147 018e 4E4B     		ldr	r3, .L368+20
 7148 0190 0122     		movs	r2, #1
 7149 0192 1A60     		str	r2, [r3]
 650:control.h     **** 
 651:control.h     ****                 break;
 7150              		.loc 21 651 17
 7151 0194 41E0     		b	.L337
 7152              	.L332:
 652:control.h     ****     
 653:control.h     ****             case T_SLOW_LFO:
 654:control.h     ****             if (xPrintLine) {hw.PrintLine("SLOW_LFO Mode Selected");}
 7153              		.loc 21 654 13
 7154 0196 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7155 0198 002B     		cmp	r3, #0
 7156 019a 02D0     		beq	.L345
 7157              		.loc 21 654 42 discriminator 1
 7158 019c 5648     		ldr	r0, .L368+68
 7159 019e FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 177


 7160              	.L345:
 655:control.h     ****                 eMenuState = M_SUB;
 7161              		.loc 21 655 28
 7162 01a2 474B     		ldr	r3, .L368+12
 7163 01a4 0122     		movs	r2, #1
 7164 01a6 1A60     		str	r2, [r3]
 656:control.h     ****                 //Store the address of the LFO
 657:control.h     **** 
 658:control.h     ****                 g_iLFOElement = 1;
 7165              		.loc 21 658 31
 7166 01a8 504B     		ldr	r3, .L368+56
 7167 01aa 0122     		movs	r2, #1
 7168 01ac 1A60     		str	r2, [r3]
 659:control.h     **** 
 660:control.h     ****                 g_astruLfoSlots[g_iLFOElement].ptrLFO = &objLFOSlow;
 7169              		.loc 21 660 48
 7170 01ae 4F4B     		ldr	r3, .L368+56
 7171 01b0 1A68     		ldr	r2, [r3]
 7172              		.loc 21 660 55
 7173 01b2 4F49     		ldr	r1, .L368+60
 7174 01b4 1346     		mov	r3, r2
 7175 01b6 9B00     		lsls	r3, r3, #2
 7176 01b8 1344     		add	r3, r3, r2
 7177 01ba 9B00     		lsls	r3, r3, #2
 7178 01bc 0B44     		add	r3, r3, r1
 7179 01be 4F4A     		ldr	r2, .L368+72
 7180 01c0 1A60     		str	r2, [r3]
 661:control.h     ****                 g_astruLfoSlots[g_iLFOElement].whichVoice = VoiceSelection::None;
 7181              		.loc 21 661 48
 7182 01c2 4A4B     		ldr	r3, .L368+56
 7183 01c4 1A68     		ldr	r2, [r3]
 7184              		.loc 21 661 59
 7185 01c6 4A49     		ldr	r1, .L368+60
 7186 01c8 1346     		mov	r3, r2
 7187 01ca 9B00     		lsls	r3, r3, #2
 7188 01cc 1344     		add	r3, r3, r2
 7189 01ce 9B00     		lsls	r3, r3, #2
 7190 01d0 0B44     		add	r3, r3, r1
 7191 01d2 0833     		adds	r3, r3, #8
 7192 01d4 0022     		movs	r2, #0
 7193 01d6 1A60     		str	r2, [r3]
 662:control.h     ****                 g_astruLfoSlots[g_iLFOElement].xTremolo = false;
 7194              		.loc 21 662 48
 7195 01d8 444B     		ldr	r3, .L368+56
 7196 01da 1A68     		ldr	r2, [r3]
 7197              		.loc 21 662 57
 7198 01dc 4449     		ldr	r1, .L368+60
 7199 01de 1346     		mov	r3, r2
 7200 01e0 9B00     		lsls	r3, r3, #2
 7201 01e2 1344     		add	r3, r3, r2
 7202 01e4 9B00     		lsls	r3, r3, #2
 7203 01e6 0B44     		add	r3, r3, r1
 7204 01e8 1033     		adds	r3, r3, #16
 7205 01ea 0022     		movs	r2, #0
 7206 01ec 1A70     		strb	r2, [r3]
 663:control.h     ****                 g_astruLfoSlots[g_iLFOElement].xVibrato = false;
 7207              		.loc 21 663 48
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 178


 7208 01ee 3F4B     		ldr	r3, .L368+56
 7209 01f0 1A68     		ldr	r2, [r3]
 7210              		.loc 21 663 57
 7211 01f2 3F49     		ldr	r1, .L368+60
 7212 01f4 1346     		mov	r3, r2
 7213 01f6 9B00     		lsls	r3, r3, #2
 7214 01f8 1344     		add	r3, r3, r2
 7215 01fa 9B00     		lsls	r3, r3, #2
 7216 01fc 0B44     		add	r3, r3, r1
 7217 01fe 1133     		adds	r3, r3, #17
 7218 0200 0022     		movs	r2, #0
 7219 0202 1A70     		strb	r2, [r3]
 664:control.h     **** 
 665:control.h     **** 
 666:control.h     ****                 // fxFrequencyInc(objLFOFast, objEncoderA, 0);
 667:control.h     ****                 // IncOscillatorDepth(objLFOFast, objEncoderB); //Add this function 
 668:control.h     ****                 // ChangeWaveform(objLFOFast, objEncoderC);
 669:control.h     ****                 eMain = T_SLOW_LFO;
 7220              		.loc 21 669 23
 7221 0204 304B     		ldr	r3, .L368+20
 7222 0206 0322     		movs	r2, #3
 7223 0208 1A60     		str	r2, [r3]
 670:control.h     ****                 break;
 7224              		.loc 21 670 17
 7225 020a 06E0     		b	.L337
 7226              	.L325:
 671:control.h     ****     
 672:control.h     ****             default: 
 673:control.h     ****                 // if (xPrintLine) {hw.PrintLine("defaulted! Shit the Bed.........!!");} 
 674:control.h     ****                 xNormalMode = true;
 7227              		.loc 21 674 29
 7228 020c 3C4B     		ldr	r3, .L368+76
 7229 020e 0122     		movs	r2, #1
 7230 0210 1A70     		strb	r2, [r3]
 675:control.h     ****                 eMain = T_NORMAL;
 7231              		.loc 21 675 23
 7232 0212 2D4B     		ldr	r3, .L368+20
 7233 0214 0022     		movs	r2, #0
 7234 0216 1A60     		str	r2, [r3]
 676:control.h     ****                 break;
 7235              		.loc 21 676 17
 7236 0218 00BF     		nop
 7237              	.L337:
 677:control.h     ****             
 678:control.h     ****             }
 679:control.h     **** 
 680:control.h     ****             //Updated the reset timers callback
 681:control.h     ****             eResetMainMenuState = eMain;
 7238              		.loc 21 681 33
 7239 021a 2B4B     		ldr	r3, .L368+20
 7240 021c 1B68     		ldr	r3, [r3]
 7241 021e 394A     		ldr	r2, .L368+80
 7242 0220 1360     		str	r3, [r2]
 682:control.h     ****             eWhileState = eMain;
 7243              		.loc 21 682 25
 7244 0222 294B     		ldr	r3, .L368+20
 7245 0224 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 179


 7246 0226 384A     		ldr	r2, .L368+84
 7247 0228 1360     		str	r3, [r2]
 7248 022a 3EE1     		b	.L346
 7249              	.L324:
 7250              	.LBB42:
 7251              	.LBB43:
 683:control.h     ****             
 684:control.h     ****         } else if (eMenuState == M_SUB){
 7252              		.loc 21 684 31
 7253 022c 244B     		ldr	r3, .L368+12
 7254 022e 1B68     		ldr	r3, [r3]
 7255              		.loc 21 684 16
 7256 0230 012B     		cmp	r3, #1
 7257 0232 40F0C480 		bne	.L347
 685:control.h     **** 
 686:control.h     ****             //////////////////////////////////////////////////////////////////////////////////////
 687:control.h     ****             //SUB////////////////////////////////////////////////////////////////////////////////
 688:control.h     **** 
 689:control.h     ****             // if (xPrintLine) {hw.PrintLine("Entered the Sub Menu");}
 690:control.h     ****             eSub = iUserInput_;
 7258              		.loc 21 690 18
 7259 0236 1F4B     		ldr	r3, .L368
 7260 0238 1B68     		ldr	r3, [r3]
 7261 023a 344A     		ldr	r2, .L368+88
 7262 023c 1360     		str	r3, [r2]
 691:control.h     **** 
 692:control.h     ****             switch(eSub){
 7263              		.loc 21 692 13
 7264 023e 334B     		ldr	r3, .L368+88
 7265 0240 1B68     		ldr	r3, [r3]
 7266 0242 0A2B     		cmp	r3, #10
 7267 0244 00F22E81 		bhi	.L366
 7268 0248 01A2     		adr	r2, .L350
 7269 024a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7270 024e 00BF     		.p2align 2
 7271              	.L350:
 7272 0250 7D020000 		.word	.L353+1
 7273 0254 A5040000 		.word	.L366+1
 7274 0258 A5040000 		.word	.L366+1
 7275 025c A5040000 		.word	.L366+1
 7276 0260 A5040000 		.word	.L366+1
 7277 0264 A5040000 		.word	.L366+1
 7278 0268 85020000 		.word	.L352+1
 7279 026c A5040000 		.word	.L366+1
 7280 0270 15030000 		.word	.L351+1
 7281 0274 A5040000 		.word	.L366+1
 7282 0278 8F030000 		.word	.L349+1
 7283              		.p2align 1
 7284              	.L353:
 693:control.h     ****                 case LFO_IDLE: 
 694:control.h     ****                     //Do nothing
 695:control.h     ****                     eSub = LFO_IDLE;
 7285              		.loc 21 695 26
 7286 027c 234B     		ldr	r3, .L368+88
 7287 027e 0022     		movs	r2, #0
 7288 0280 1A60     		str	r2, [r3]
 696:control.h     ****                     break;
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 180


 7289              		.loc 21 696 21
 7290 0282 12E1     		b	.L346
 7291              	.L352:
 697:control.h     **** 
 698:control.h     ****                 case LFO_DRONE:
 699:control.h     ****                 if (xPrintLine) {hw.PrintLine("Drone Voice Connected to LFO");}
 7292              		.loc 21 699 17
 7293 0284 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7294 0286 002B     		cmp	r3, #0
 7295 0288 02D0     		beq	.L355
 7296              		.loc 21 699 46 discriminator 1
 7297 028a 2148     		ldr	r0, .L368+92
 7298 028c FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 7299              	.L355:
 700:control.h     ****                     eMenuState = M_MODE;
 7300              		.loc 21 700 32
 7301 0290 0B4B     		ldr	r3, .L368+12
 7302 0292 0222     		movs	r2, #2
 7303 0294 1A60     		str	r2, [r3]
 701:control.h     ****                     
 702:control.h     ****                     //Save which oscillator to manipulate with LFO. 
 703:control.h     ****                     g_astruLfoSlots[g_iLFOElement].whichVoice = VoiceSelection::Drone;
 7304              		.loc 21 703 52
 7305 0296 154B     		ldr	r3, .L368+56
 7306 0298 1A68     		ldr	r2, [r3]
 7307              		.loc 21 703 63
 7308 029a 1549     		ldr	r1, .L368+60
 7309 029c 1346     		mov	r3, r2
 7310 029e 9B00     		lsls	r3, r3, #2
 7311 02a0 1344     		add	r3, r3, r2
 7312 02a2 9B00     		lsls	r3, r3, #2
 7313 02a4 0B44     		add	r3, r3, r1
 7314 02a6 0833     		adds	r3, r3, #8
 7315 02a8 0122     		movs	r2, #1
 7316 02aa 1A60     		str	r2, [r3]
 704:control.h     **** 
 705:control.h     ****                     eSub = LFO_IDLE;
 7317              		.loc 21 705 26
 7318 02ac 174B     		ldr	r3, .L368+88
 7319 02ae 0022     		movs	r2, #0
 7320 02b0 1A60     		str	r2, [r3]
 706:control.h     ****                     break;
 7321              		.loc 21 706 21
 7322 02b2 FAE0     		b	.L346
 7323              	.L369:
 7324              		.align	2
 7325              	.L368:
 7326 02b4 00000000 		.word	iUserInput_
 7327 02b8 00000000 		.word	iPrevUserInput
 7328 02bc 2C000000 		.word	.LC3
 7329 02c0 00000000 		.word	eMenuState
 7330 02c4 00000000 		.word	objResetMenuTimer
 7331 02c8 00000000 		.word	eMain
 7332 02cc 3C000000 		.word	.LC4
 7333 02d0 58000000 		.word	.LC5
 7334 02d4 6C000000 		.word	.LC6
 7335 02d8 8C000000 		.word	.LC7
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 181


 7336 02dc A8000000 		.word	.LC8
 7337 02e0 C4000000 		.word	.LC9
 7338 02e4 E0000000 		.word	.LC10
 7339 02e8 FC000000 		.word	.LC11
 7340 02ec 00000000 		.word	g_iLFOElement
 7341 02f0 00000000 		.word	_ZL15g_astruLfoSlots
 7342 02f4 00000000 		.word	objLFOFast
 7343 02f8 14010000 		.word	.LC12
 7344 02fc 00000000 		.word	objLFOSlow
 7345 0300 00000000 		.word	xNormalMode
 7346 0304 00000000 		.word	eResetMainMenuState
 7347 0308 00000000 		.word	eWhileState
 7348 030c 00000000 		.word	eSub
 7349 0310 2C010000 		.word	.LC13
 7350              	.L351:
 707:control.h     **** 
 708:control.h     ****                 case LFO_SINGLE:
 709:control.h     ****                     eMenuState = M_MODE;
 7351              		.loc 21 709 32
 7352 0314 6A4B     		ldr	r3, .L370
 7353 0316 0222     		movs	r2, #2
 7354 0318 1A60     		str	r2, [r3]
 710:control.h     **** 
 711:control.h     ****                     if(ptrSingleOscillator_ == nullptr){
 7355              		.loc 21 711 45
 7356 031a 6A4B     		ldr	r3, .L370+4
 7357 031c 1B68     		ldr	r3, [r3]
 7358              		.loc 21 711 21
 7359 031e 002B     		cmp	r3, #0
 7360 0320 17D1     		bne	.L356
 712:control.h     ****                         fxOscillatorSelect(&aobjSingleOscillator[0], objEncoderA, 0);
 7361              		.loc 21 712 43
 7362 0322 0022     		movs	r2, #0
 7363 0324 6849     		ldr	r1, .L370+8
 7364 0326 6948     		ldr	r0, .L370+12
 7365 0328 FFF7FEFF 		bl	_Z18fxOscillatorSelectP14clasOscillatorRN5daisy11clasEncoderEi
 713:control.h     ****                         fxOscillatorSelect(&aobjSingleOscillator[1], objEncoderB, 1);
 7366              		.loc 21 713 43
 7367 032c 0122     		movs	r2, #1
 7368 032e 6849     		ldr	r1, .L370+16
 7369 0330 6848     		ldr	r0, .L370+20
 7370 0332 FFF7FEFF 		bl	_Z18fxOscillatorSelectP14clasOscillatorRN5daisy11clasEncoderEi
 714:control.h     ****                         fxOscillatorSelect(&aobjSingleOscillator[2], objEncoderC, 2);
 7371              		.loc 21 714 43
 7372 0336 0222     		movs	r2, #2
 7373 0338 6749     		ldr	r1, .L370+24
 7374 033a 6848     		ldr	r0, .L370+28
 7375 033c FFF7FEFF 		bl	_Z18fxOscillatorSelectP14clasOscillatorRN5daisy11clasEncoderEi
 715:control.h     ****                         fxOscillatorSelect(&aobjSingleOscillator[3], objEncoderD, 3);
 7376              		.loc 21 715 43
 7377 0340 0322     		movs	r2, #3
 7378 0342 6749     		ldr	r1, .L370+32
 7379 0344 6748     		ldr	r0, .L370+36
 7380 0346 FFF7FEFF 		bl	_Z18fxOscillatorSelectP14clasOscillatorRN5daisy11clasEncoderEi
 716:control.h     ****                         eSub = LFO_SINGLE;
 7381              		.loc 21 716 30
 7382 034a 674B     		ldr	r3, .L370+40
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 182


 7383 034c 0822     		movs	r2, #8
 7384 034e 1A60     		str	r2, [r3]
 717:control.h     ****                     } else {
 718:control.h     ****                         //Save which oscillator to manipulate with LFO. 
 719:control.h     ****                         g_astruLfoSlots[g_iLFOElement].ptrSingleOscSelectLFO_ = ptrSingleOscillator
 720:control.h     ****                         ptrSingleOscillator_ = nullptr; //Reset the nullpointer. 
 721:control.h     ****                         g_astruLfoSlots[g_iLFOElement].whichVoice = VoiceSelection::Single;
 722:control.h     ****                         eSub = LFO_IDLE;
 723:control.h     ****                     }
 724:control.h     **** 
 725:control.h     ****                     break;
 7385              		.loc 21 725 21
 7386 0350 ABE0     		b	.L346
 7387              	.L356:
 719:control.h     ****                         ptrSingleOscillator_ = nullptr; //Reset the nullpointer. 
 7388              		.loc 21 719 56
 7389 0352 664B     		ldr	r3, .L370+44
 7390 0354 1A68     		ldr	r2, [r3]
 719:control.h     ****                         ptrSingleOscillator_ = nullptr; //Reset the nullpointer. 
 7391              		.loc 21 719 79
 7392 0356 5B4B     		ldr	r3, .L370+4
 7393 0358 1968     		ldr	r1, [r3]
 7394 035a 6548     		ldr	r0, .L370+48
 7395 035c 1346     		mov	r3, r2
 7396 035e 9B00     		lsls	r3, r3, #2
 7397 0360 1344     		add	r3, r3, r2
 7398 0362 9B00     		lsls	r3, r3, #2
 7399 0364 0344     		add	r3, r3, r0
 7400 0366 0433     		adds	r3, r3, #4
 7401 0368 1960     		str	r1, [r3]
 720:control.h     ****                         g_astruLfoSlots[g_iLFOElement].whichVoice = VoiceSelection::Single;
 7402              		.loc 21 720 46
 7403 036a 564B     		ldr	r3, .L370+4
 7404 036c 0022     		movs	r2, #0
 7405 036e 1A60     		str	r2, [r3]
 721:control.h     ****                         eSub = LFO_IDLE;
 7406              		.loc 21 721 56
 7407 0370 5E4B     		ldr	r3, .L370+44
 7408 0372 1A68     		ldr	r2, [r3]
 721:control.h     ****                         eSub = LFO_IDLE;
 7409              		.loc 21 721 67
 7410 0374 5E49     		ldr	r1, .L370+48
 7411 0376 1346     		mov	r3, r2
 7412 0378 9B00     		lsls	r3, r3, #2
 7413 037a 1344     		add	r3, r3, r2
 7414 037c 9B00     		lsls	r3, r3, #2
 7415 037e 0B44     		add	r3, r3, r1
 7416 0380 0833     		adds	r3, r3, #8
 7417 0382 0222     		movs	r2, #2
 7418 0384 1A60     		str	r2, [r3]
 722:control.h     ****                     }
 7419              		.loc 21 722 30
 7420 0386 584B     		ldr	r3, .L370+40
 7421 0388 0022     		movs	r2, #0
 7422 038a 1A60     		str	r2, [r3]
 7423              		.loc 21 725 21
 7424 038c 8DE0     		b	.L346
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 183


 7425              	.L349:
 726:control.h     **** 
 727:control.h     ****                 case LFO_LEAD:
 728:control.h     ****                 if (xPrintLine) {hw.PrintLine("Lead Voice Connected to LFO");}
 7426              		.loc 21 728 17
 7427 038e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7428 0390 002B     		cmp	r3, #0
 7429 0392 02D0     		beq	.L358
 7430              		.loc 21 728 46 discriminator 1
 7431 0394 5748     		ldr	r0, .L370+52
 7432 0396 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 7433              	.L358:
 729:control.h     ****                     eMenuState = M_MODE;
 7434              		.loc 21 729 32
 7435 039a 494B     		ldr	r3, .L370
 7436 039c 0222     		movs	r2, #2
 7437 039e 1A60     		str	r2, [r3]
 730:control.h     ****                     
 731:control.h     ****                     //Save which oscillator to manipulate with LFO. 
 732:control.h     ****                     g_astruLfoSlots[g_iLFOElement].whichVoice = VoiceSelection::Lead;
 7438              		.loc 21 732 52
 7439 03a0 524B     		ldr	r3, .L370+44
 7440 03a2 1A68     		ldr	r2, [r3]
 7441              		.loc 21 732 63
 7442 03a4 5249     		ldr	r1, .L370+48
 7443 03a6 1346     		mov	r3, r2
 7444 03a8 9B00     		lsls	r3, r3, #2
 7445 03aa 1344     		add	r3, r3, r2
 7446 03ac 9B00     		lsls	r3, r3, #2
 7447 03ae 0B44     		add	r3, r3, r1
 7448 03b0 0833     		adds	r3, r3, #8
 7449 03b2 0322     		movs	r2, #3
 7450 03b4 1A60     		str	r2, [r3]
 733:control.h     **** 
 734:control.h     ****                     eSub = LFO_IDLE;
 7451              		.loc 21 734 26
 7452 03b6 4C4B     		ldr	r3, .L370+40
 7453 03b8 0022     		movs	r2, #0
 7454 03ba 1A60     		str	r2, [r3]
 735:control.h     ****                     break;
 7455              		.loc 21 735 21
 7456 03bc 75E0     		b	.L346
 7457              	.L347:
 7458              	.LBB44:
 7459              	.LBB45:
 736:control.h     **** 
 737:control.h     ****                 default: 
 738:control.h     ****                     // eMenuState = M_MAIN;
 739:control.h     ****                     // eMode = LFO_IDLE; 
 740:control.h     ****                     // if (xPrintLine) {hw.PrintLine("SUB: Incorrect mode select: %d, Please try ag
 741:control.h     ****                     break;
 742:control.h     ****             }
 743:control.h     ****         } else if (eMenuState == M_MODE) {
 7460              		.loc 21 743 31
 7461 03be 404B     		ldr	r3, .L370
 7462 03c0 1B68     		ldr	r3, [r3]
 7463              		.loc 21 743 16
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 184


 7464 03c2 022B     		cmp	r3, #2
 7465 03c4 71D1     		bne	.L346
 7466              	.LBB46:
 744:control.h     **** 
 745:control.h     ****             //////////////////////////////////////////////////////////////////////////////////////
 746:control.h     ****             //MODE////////////////////////////////////////////////////////////////////////////////
 747:control.h     **** 
 748:control.h     ****             // if (xPrintLine) {hw.PrintLine("Entered the Mode Menu");}
 749:control.h     ****             int eMode = iUserInput_;
 7467              		.loc 21 749 17
 7468 03c6 4C4B     		ldr	r3, .L370+56
 7469 03c8 1B68     		ldr	r3, [r3]
 7470 03ca BB60     		str	r3, [r7, #8]
 750:control.h     **** 
 751:control.h     ****             switch(eMode){
 7471              		.loc 21 751 13
 7472 03cc BB68     		ldr	r3, [r7, #8]
 7473 03ce 032B     		cmp	r3, #3
 7474 03d0 3AD0     		beq	.L359
 7475 03d2 BB68     		ldr	r3, [r7, #8]
 7476 03d4 032B     		cmp	r3, #3
 7477 03d6 67DC     		bgt	.L367
 7478 03d8 BB68     		ldr	r3, [r7, #8]
 7479 03da 002B     		cmp	r3, #0
 7480 03dc 03D0     		beq	.L361
 7481 03de BB68     		ldr	r3, [r7, #8]
 7482 03e0 012B     		cmp	r3, #1
 7483 03e2 03D0     		beq	.L362
 752:control.h     ****                 case LFO_IDLE:
 753:control.h     ****                     //Do nothing
 754:control.h     **** 
 755:control.h     ****                     eMode = LFO_IDLE;
 756:control.h     ****                     break;
 757:control.h     **** 
 758:control.h     ****                 case LFO_TROMOLO: 
 759:control.h     ****                 if (xPrintLine) {hw.PrintLine("TROMOLO Mode Selected");}
 760:control.h     ****                     
 761:control.h     ****                     g_astruLfoSlots[g_iLFOElement].ptrLFO->SetTromolo();
 762:control.h     ****                     g_astruLfoSlots[g_iLFOElement].xTremolo = true;
 763:control.h     ****                     g_astruLfoSlots[g_iLFOElement].xVibrato = false;
 764:control.h     **** 
 765:control.h     ****                     eMenuState = M_MAIN; //Return back to Main Menu
 766:control.h     ****                     eMode = LFO_IDLE;
 767:control.h     ****                     break;
 768:control.h     **** 
 769:control.h     ****                 case LFO_VIBRATO:
 770:control.h     ****                 if (xPrintLine) {hw.PrintLine("VIBRATO Mode Selected");}
 771:control.h     ****                     
 772:control.h     ****                     g_astruLfoSlots[g_iLFOElement].ptrLFO->SetVibrato();
 773:control.h     ****                     g_astruLfoSlots[g_iLFOElement].xTremolo = false;
 774:control.h     ****                     g_astruLfoSlots[g_iLFOElement].xVibrato = true;
 775:control.h     **** 
 776:control.h     ****                     eMenuState = M_MAIN; //Return back to Main Menu
 777:control.h     ****                     eMode = LFO_IDLE;
 778:control.h     ****                     break;
 779:control.h     **** 
 780:control.h     ****                 default: 
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 185


 781:control.h     **** 
 782:control.h     ****                     // eMode = LFO_IDLE; 
 783:control.h     ****                     // if (xPrintLine) {hw.PrintLine("MODE: Incorrect mode select: %d,  Please try 
 784:control.h     ****                     break;
 7484              		.loc 21 784 21
 7485 03e4 60E0     		b	.L367
 7486              	.L361:
 755:control.h     ****                     break;
 7487              		.loc 21 755 27
 7488 03e6 0023     		movs	r3, #0
 7489 03e8 BB60     		str	r3, [r7, #8]
 756:control.h     **** 
 7490              		.loc 21 756 21
 7491 03ea 5EE0     		b	.L346
 7492              	.L362:
 759:control.h     ****                     
 7493              		.loc 21 759 17
 7494 03ec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7495 03ee 002B     		cmp	r3, #0
 7496 03f0 02D0     		beq	.L364
 759:control.h     ****                     
 7497              		.loc 21 759 46 discriminator 1
 7498 03f2 4248     		ldr	r0, .L370+60
 7499 03f4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 7500              	.L364:
 761:control.h     ****                     g_astruLfoSlots[g_iLFOElement].xTremolo = true;
 7501              		.loc 21 761 70
 7502 03f8 3C4B     		ldr	r3, .L370+44
 7503 03fa 1A68     		ldr	r2, [r3]
 761:control.h     ****                     g_astruLfoSlots[g_iLFOElement].xTremolo = true;
 7504              		.loc 21 761 52
 7505 03fc 3C49     		ldr	r1, .L370+48
 7506 03fe 1346     		mov	r3, r2
 7507 0400 9B00     		lsls	r3, r3, #2
 7508 0402 1344     		add	r3, r3, r2
 7509 0404 9B00     		lsls	r3, r3, #2
 7510 0406 0B44     		add	r3, r3, r1
 7511 0408 1B68     		ldr	r3, [r3]
 761:control.h     ****                     g_astruLfoSlots[g_iLFOElement].xTremolo = true;
 7512              		.loc 21 761 70
 7513 040a 1846     		mov	r0, r3
 7514 040c FFF7FEFF 		bl	_ZN14clasOscillator10SetTromoloEv
 762:control.h     ****                     g_astruLfoSlots[g_iLFOElement].xVibrato = false;
 7515              		.loc 21 762 52
 7516 0410 364B     		ldr	r3, .L370+44
 7517 0412 1A68     		ldr	r2, [r3]
 762:control.h     ****                     g_astruLfoSlots[g_iLFOElement].xVibrato = false;
 7518              		.loc 21 762 61
 7519 0414 3649     		ldr	r1, .L370+48
 7520 0416 1346     		mov	r3, r2
 7521 0418 9B00     		lsls	r3, r3, #2
 7522 041a 1344     		add	r3, r3, r2
 7523 041c 9B00     		lsls	r3, r3, #2
 7524 041e 0B44     		add	r3, r3, r1
 7525 0420 1033     		adds	r3, r3, #16
 7526 0422 0122     		movs	r2, #1
 7527 0424 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 186


 763:control.h     **** 
 7528              		.loc 21 763 52
 7529 0426 314B     		ldr	r3, .L370+44
 7530 0428 1A68     		ldr	r2, [r3]
 763:control.h     **** 
 7531              		.loc 21 763 61
 7532 042a 3149     		ldr	r1, .L370+48
 7533 042c 1346     		mov	r3, r2
 7534 042e 9B00     		lsls	r3, r3, #2
 7535 0430 1344     		add	r3, r3, r2
 7536 0432 9B00     		lsls	r3, r3, #2
 7537 0434 0B44     		add	r3, r3, r1
 7538 0436 1133     		adds	r3, r3, #17
 7539 0438 0022     		movs	r2, #0
 7540 043a 1A70     		strb	r2, [r3]
 765:control.h     ****                     eMode = LFO_IDLE;
 7541              		.loc 21 765 32
 7542 043c 204B     		ldr	r3, .L370
 7543 043e 0022     		movs	r2, #0
 7544 0440 1A60     		str	r2, [r3]
 766:control.h     ****                     break;
 7545              		.loc 21 766 27
 7546 0442 0023     		movs	r3, #0
 7547 0444 BB60     		str	r3, [r7, #8]
 767:control.h     **** 
 7548              		.loc 21 767 21
 7549 0446 30E0     		b	.L346
 7550              	.L359:
 770:control.h     ****                     
 7551              		.loc 21 770 17
 7552 0448 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7553 044a 002B     		cmp	r3, #0
 7554 044c 02D0     		beq	.L365
 770:control.h     ****                     
 7555              		.loc 21 770 46 discriminator 1
 7556 044e 2C48     		ldr	r0, .L370+64
 7557 0450 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 7558              	.L365:
 772:control.h     ****                     g_astruLfoSlots[g_iLFOElement].xTremolo = false;
 7559              		.loc 21 772 70
 7560 0454 254B     		ldr	r3, .L370+44
 7561 0456 1A68     		ldr	r2, [r3]
 772:control.h     ****                     g_astruLfoSlots[g_iLFOElement].xTremolo = false;
 7562              		.loc 21 772 52
 7563 0458 2549     		ldr	r1, .L370+48
 7564 045a 1346     		mov	r3, r2
 7565 045c 9B00     		lsls	r3, r3, #2
 7566 045e 1344     		add	r3, r3, r2
 7567 0460 9B00     		lsls	r3, r3, #2
 7568 0462 0B44     		add	r3, r3, r1
 7569 0464 1B68     		ldr	r3, [r3]
 772:control.h     ****                     g_astruLfoSlots[g_iLFOElement].xTremolo = false;
 7570              		.loc 21 772 70
 7571 0466 1846     		mov	r0, r3
 7572 0468 FFF7FEFF 		bl	_ZN14clasOscillator10SetVibratoEv
 773:control.h     ****                     g_astruLfoSlots[g_iLFOElement].xVibrato = true;
 7573              		.loc 21 773 52
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 187


 7574 046c 1F4B     		ldr	r3, .L370+44
 7575 046e 1A68     		ldr	r2, [r3]
 773:control.h     ****                     g_astruLfoSlots[g_iLFOElement].xVibrato = true;
 7576              		.loc 21 773 61
 7577 0470 1F49     		ldr	r1, .L370+48
 7578 0472 1346     		mov	r3, r2
 7579 0474 9B00     		lsls	r3, r3, #2
 7580 0476 1344     		add	r3, r3, r2
 7581 0478 9B00     		lsls	r3, r3, #2
 7582 047a 0B44     		add	r3, r3, r1
 7583 047c 1033     		adds	r3, r3, #16
 7584 047e 0022     		movs	r2, #0
 7585 0480 1A70     		strb	r2, [r3]
 774:control.h     **** 
 7586              		.loc 21 774 52
 7587 0482 1A4B     		ldr	r3, .L370+44
 7588 0484 1A68     		ldr	r2, [r3]
 774:control.h     **** 
 7589              		.loc 21 774 61
 7590 0486 1A49     		ldr	r1, .L370+48
 7591 0488 1346     		mov	r3, r2
 7592 048a 9B00     		lsls	r3, r3, #2
 7593 048c 1344     		add	r3, r3, r2
 7594 048e 9B00     		lsls	r3, r3, #2
 7595 0490 0B44     		add	r3, r3, r1
 7596 0492 1133     		adds	r3, r3, #17
 7597 0494 0122     		movs	r2, #1
 7598 0496 1A70     		strb	r2, [r3]
 776:control.h     ****                     eMode = LFO_IDLE;
 7599              		.loc 21 776 32
 7600 0498 094B     		ldr	r3, .L370
 7601 049a 0022     		movs	r2, #0
 7602 049c 1A60     		str	r2, [r3]
 777:control.h     ****                     break;
 7603              		.loc 21 777 27
 7604 049e 0023     		movs	r3, #0
 7605 04a0 BB60     		str	r3, [r7, #8]
 778:control.h     **** 
 7606              		.loc 21 778 21
 7607 04a2 02E0     		b	.L346
 7608              	.L366:
 7609              	.LBE46:
 7610              	.LBE45:
 7611              	.LBE44:
 741:control.h     ****             }
 7612              		.loc 21 741 21
 7613 04a4 00BF     		nop
 7614 04a6 00E0     		b	.L346
 7615              	.L367:
 7616              	.LBB49:
 7617              	.LBB48:
 7618              	.LBB47:
 7619              		.loc 21 784 21
 7620 04a8 00BF     		nop
 7621              	.L346:
 7622              	.LBE47:
 7623              	.LBE48:
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 188


 7624              	.LBE49:
 7625              	.LBE43:
 7626              	.LBE42:
 7627              	.LBE41:
 785:control.h     ****             }
 786:control.h     **** 
 787:control.h     **** 
 788:control.h     ****         }
 789:control.h     **** 
 790:control.h     **** 
 791:control.h     ****         // hw.PrintLine("eMenuState: %d, eMain: %d, eSub: %d, eMode: %d", eMenuState, eMain, eSub, 
 792:control.h     ****         // hw.PrintLine("uiTouchKeyPressed: %d, iUserInput_: %d", uiTouchKeyPressed, iUserInput_);
 793:control.h     **** 
 794:control.h     ****         iUserInput_ = 0; //Reset 
 7628              		.loc 21 794 21
 7629 04aa 134B     		ldr	r3, .L370+56
 7630 04ac 0022     		movs	r2, #0
 7631 04ae 1A60     		str	r2, [r3]
 795:control.h     ****         uiTouchKeyPressed = -1; 
 7632              		.loc 21 795 27
 7633 04b0 144B     		ldr	r3, .L370+68
 7634 04b2 FF22     		movs	r2, #255
 7635 04b4 1A70     		strb	r2, [r3]
 796:control.h     **** 
 797:control.h     **** 
 798:control.h     ****     
 799:control.h     ****     //Add code here to reset everything after time delay. 
 800:control.h     ****  }
 7636              		.loc 21 800 2
 7637 04b6 00BF     		nop
 7638 04b8 1037     		adds	r7, r7, #16
 7639              		.cfi_def_cfa_offset 8
 7640 04ba BD46     		mov	sp, r7
 7641              		.cfi_def_cfa_register 13
 7642              		@ sp needed
 7643 04bc 80BD     		pop	{r7, pc}
 7644              	.L371:
 7645 04be 00BF     		.align	2
 7646              	.L370:
 7647 04c0 00000000 		.word	eMenuState
 7648 04c4 00000000 		.word	ptrSingleOscillator_
 7649 04c8 00000000 		.word	objEncoderA
 7650 04cc 00000000 		.word	aobjSingleOscillator
 7651 04d0 00000000 		.word	objEncoderB
 7652 04d4 2C000000 		.word	aobjSingleOscillator+44
 7653 04d8 00000000 		.word	objEncoderC
 7654 04dc 58000000 		.word	aobjSingleOscillator+88
 7655 04e0 00000000 		.word	objEncoderD
 7656 04e4 84000000 		.word	aobjSingleOscillator+132
 7657 04e8 00000000 		.word	eSub
 7658 04ec 00000000 		.word	g_iLFOElement
 7659 04f0 00000000 		.word	_ZL15g_astruLfoSlots
 7660 04f4 4C010000 		.word	.LC14
 7661 04f8 00000000 		.word	iUserInput_
 7662 04fc 68010000 		.word	.LC15
 7663 0500 80010000 		.word	.LC16
 7664 0504 00000000 		.word	uiTouchKeyPressed
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 189


 7665              		.cfi_endproc
 7666              	.LFE4747:
 7668              		.section	.text._Z15fxPressFunctiontb,"ax",%progbits
 7669              		.align	1
 7670              		.global	_Z15fxPressFunctiontb
 7671              		.syntax unified
 7672              		.thumb
 7673              		.thumb_func
 7674              		.fpu fpv5-d16
 7676              	_Z15fxPressFunctiontb:
 7677              	.LFB4748:
 801:control.h     **** 
 802:control.h     **** 
 803:control.h     **** //Cap Touch Press function 
 804:control.h     **** void fxPressFunction(uint16_t uiPad, bool xMenuActive){
 7678              		.loc 21 804 55
 7679              		.cfi_startproc
 7680              		@ args = 0, pretend = 0, frame = 8
 7681              		@ frame_needed = 1, uses_anonymous_args = 0
 7682 0000 80B5     		push	{r7, lr}
 7683              		.cfi_def_cfa_offset 8
 7684              		.cfi_offset 7, -8
 7685              		.cfi_offset 14, -4
 7686 0002 82B0     		sub	sp, sp, #8
 7687              		.cfi_def_cfa_offset 16
 7688 0004 00AF     		add	r7, sp, #0
 7689              		.cfi_def_cfa_register 7
 7690 0006 0346     		mov	r3, r0
 7691 0008 0A46     		mov	r2, r1
 7692 000a FB80     		strh	r3, [r7, #6]	@ movhi
 7693 000c 1346     		mov	r3, r2
 7694 000e 7B71     		strb	r3, [r7, #5]
 805:control.h     ****     // hw.PrintLine("Key %d touch", uiPad);
 806:control.h     ****     uiTouchKeyPressed = uiPad;
 7695              		.loc 21 806 23
 7696 0010 FB88     		ldrh	r3, [r7, #6]	@ movhi
 7697 0012 DAB2     		uxtb	r2, r3
 7698 0014 0C4B     		ldr	r3, .L375
 7699 0016 1A70     		strb	r2, [r3]
 807:control.h     ****     if (!xMenuActive) {
 7700              		.loc 21 807 9
 7701 0018 7B79     		ldrb	r3, [r7, #5]
 7702 001a 83F00103 		eor	r3, r3, #1
 7703 001e DBB2     		uxtb	r3, r3
 7704              		.loc 21 807 5
 7705 0020 002B     		cmp	r3, #0
 7706 0022 0DD0     		beq	.L374
 808:control.h     ****         objLeadVoice.SetFreq(aflFreqTable[uiPad]);
 7707              		.loc 21 808 43
 7708 0024 FB88     		ldrh	r3, [r7, #6]
 7709              		.loc 21 808 29
 7710 0026 094A     		ldr	r2, .L375+4
 7711 0028 9B00     		lsls	r3, r3, #2
 7712 002a 1344     		add	r3, r3, r2
 7713 002c D3ED007A 		vldr.32	s15, [r3]
 7714 0030 B0EE670A 		vmov.f32	s0, s15
 7715 0034 0648     		ldr	r0, .L375+8
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 190


 7716 0036 FFF7FEFF 		bl	_ZN20clasEulersOscillatorILi16EE7SetFreqEf
 809:control.h     ****         //envelope start signal here. 
 810:control.h     ****         xGate = true;
 7717              		.loc 21 810 15
 7718 003a 064B     		ldr	r3, .L375+12
 7719 003c 0122     		movs	r2, #1
 7720 003e 1A70     		strb	r2, [r3]
 7721              	.L374:
 811:control.h     ****     }
 812:control.h     **** }
 7722              		.loc 21 812 1
 7723 0040 00BF     		nop
 7724 0042 0837     		adds	r7, r7, #8
 7725              		.cfi_def_cfa_offset 8
 7726 0044 BD46     		mov	sp, r7
 7727              		.cfi_def_cfa_register 13
 7728              		@ sp needed
 7729 0046 80BD     		pop	{r7, pc}
 7730              	.L376:
 7731              		.align	2
 7732              	.L375:
 7733 0048 00000000 		.word	uiTouchKeyPressed
 7734 004c 00000000 		.word	aflFreqTable
 7735 0050 00000000 		.word	objLeadVoice
 7736 0054 00000000 		.word	xGate
 7737              		.cfi_endproc
 7738              	.LFE4748:
 7740              		.section	.text._Z17fxReleaseFunctiont,"ax",%progbits
 7741              		.align	1
 7742              		.global	_Z17fxReleaseFunctiont
 7743              		.syntax unified
 7744              		.thumb
 7745              		.thumb_func
 7746              		.fpu fpv5-d16
 7748              	_Z17fxReleaseFunctiont:
 7749              	.LFB4749:
 813:control.h     **** 
 814:control.h     **** 
 815:control.h     **** //Cap Toucnh Release function 
 816:control.h     **** void fxReleaseFunction(uint16_t uiPad){
 7750              		.loc 21 816 39
 7751              		.cfi_startproc
 7752              		@ args = 0, pretend = 0, frame = 8
 7753              		@ frame_needed = 1, uses_anonymous_args = 0
 7754              		@ link register save eliminated.
 7755 0000 80B4     		push	{r7}
 7756              		.cfi_def_cfa_offset 4
 7757              		.cfi_offset 7, -4
 7758 0002 83B0     		sub	sp, sp, #12
 7759              		.cfi_def_cfa_offset 16
 7760 0004 00AF     		add	r7, sp, #0
 7761              		.cfi_def_cfa_register 7
 7762 0006 0346     		mov	r3, r0
 7763 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 817:control.h     ****     // hw.PrintLine("Key %d release", uiPad);
 818:control.h     ****     uiTouchKeyPressed = -1;
 7764              		.loc 21 818 23
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 191


 7765 000a 064B     		ldr	r3, .L378
 7766 000c FF22     		movs	r2, #255
 7767 000e 1A70     		strb	r2, [r3]
 819:control.h     ****     //Envelope stop signal
 820:control.h     ****     
 821:control.h     ****     xGate = false;
 7768              		.loc 21 821 11
 7769 0010 054B     		ldr	r3, .L378+4
 7770 0012 0022     		movs	r2, #0
 7771 0014 1A70     		strb	r2, [r3]
 822:control.h     **** }
 7772              		.loc 21 822 1
 7773 0016 00BF     		nop
 7774 0018 0C37     		adds	r7, r7, #12
 7775              		.cfi_def_cfa_offset 4
 7776 001a BD46     		mov	sp, r7
 7777              		.cfi_def_cfa_register 13
 7778              		@ sp needed
 7779 001c 5DF8047B 		ldr	r7, [sp], #4
 7780              		.cfi_restore 7
 7781              		.cfi_def_cfa_offset 0
 7782 0020 7047     		bx	lr
 7783              	.L379:
 7784 0022 00BF     		.align	2
 7785              	.L378:
 7786 0024 00000000 		.word	uiTouchKeyPressed
 7787 0028 00000000 		.word	xGate
 7788              		.cfi_endproc
 7789              	.LFE4749:
 7791              		.section	.rodata
 7792 0196 0000     		.align	2
 7793              	.LC17:
 7794 0198 4D505231 		.ascii	"MPR121 Initialized Successfully!\000"
 7794      32312049 
 7794      6E697469 
 7794      616C697A 
 7794      65642053 
 7795              		.section	.text._ZN12clasCapTouch7mConfigEv,"axG",%progbits,_ZN12clasCapTouch7mConfigEv,comdat
 7796              		.align	1
 7797              		.weak	_ZN12clasCapTouch7mConfigEv
 7798              		.syntax unified
 7799              		.thumb
 7800              		.thumb_func
 7801              		.fpu fpv5-d16
 7803              	_ZN12clasCapTouch7mConfigEv:
 7804              	.LFB4750:
 823:control.h     **** 
 824:control.h     **** 
 825:control.h     **** 
 826:control.h     **** //CLASSES//////////////////////////////////////////////////////////////////////////////////////////
 827:control.h     **** //Capacitive Touch Class///////////////////////////////////////////////////////////////////////////
 828:control.h     **** class clasCapTouch{
 829:control.h     ****     private:
 830:control.h     **** 
 831:control.h     ****         Mpr121I2C _objMpr121;
 832:control.h     ****         DaisySeed _hw;
 833:control.h     ****         uint16_t _uiState;
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 192


 834:control.h     ****         void (*_ptrOnTouch)(uint16_t uiPad, bool xMenuActive); //function address placeholder
 835:control.h     ****         void (*_ptrOnRelease)(uint16_t uiPad);
 836:control.h     **** 
 837:control.h     ****         void mConfig(){
 7805              		.loc 21 837 14
 7806              		.cfi_startproc
 7807              		@ args = 0, pretend = 0, frame = 32
 7808              		@ frame_needed = 1, uses_anonymous_args = 0
 7809 0000 B0B5     		push	{r4, r5, r7, lr}
 7810              		.cfi_def_cfa_offset 16
 7811              		.cfi_offset 4, -16
 7812              		.cfi_offset 5, -12
 7813              		.cfi_offset 7, -8
 7814              		.cfi_offset 14, -4
 7815 0002 8CB0     		sub	sp, sp, #48
 7816              		.cfi_def_cfa_offset 64
 7817 0004 04AF     		add	r7, sp, #16
 7818              		.cfi_def_cfa 7, 48
 7819 0006 7860     		str	r0, [r7, #4]
 838:control.h     ****             Mpr121I2C::Config config;
 7820              		.loc 21 838 31
 7821 0008 07F10803 		add	r3, r7, #8
 7822 000c 1846     		mov	r0, r3
 7823 000e FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE6ConfigC1Ev
 839:control.h     ****             if (_objMpr121.Init(config) == Mpr121I2C::OK){
 7824              		.loc 21 839 32
 7825 0012 7D68     		ldr	r5, [r7, #4]
 7826 0014 6C46     		mov	r4, sp
 7827 0016 07F11403 		add	r3, r7, #20
 7828 001a 93E80700 		ldm	r3, {r0, r1, r2}
 7829 001e 84E80700 		stm	r4, {r0, r1, r2}
 7830 0022 07F10803 		add	r3, r7, #8
 7831 0026 0ECB     		ldm	r3, {r1, r2, r3}
 7832 0028 2846     		mov	r0, r5
 7833 002a FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE4InitENS2_6ConfigE
 7834 002e 0346     		mov	r3, r0
 7835              		.loc 21 839 41
 7836 0030 002B     		cmp	r3, #0
 7837 0032 0CBF     		ite	eq
 7838 0034 0123     		moveq	r3, #1
 7839 0036 0023     		movne	r3, #0
 7840 0038 DBB2     		uxtb	r3, r3
 7841              		.loc 21 839 13
 7842 003a 002B     		cmp	r3, #0
 7843 003c 02D0     		beq	.L381
 840:control.h     ****                     _hw.PrintLine("MPR121 Initialized Successfully!");
 7844              		.loc 21 840 34
 7845 003e 0748     		ldr	r0, .L382
 7846 0040 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 7847              	.L381:
 841:control.h     **** 
 842:control.h     ****                 // // STOP the device by setting ECR = 0
 843:control.h     ****                 // _objMpr121.WriteRegister(daisy::Mpr121I2C::MPR121_ECR, 0x00);
 844:control.h     ****                 // System::Delay(1); // Optional pause
 845:control.h     **** 
 846:control.h     ****                 // // Set debounce after stopping
 847:control.h     ****                 // _objMpr121.WriteRegister(daisy::Mpr121I2C::MPR121_DEBOUNCE, 0x33);
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 193


 848:control.h     **** 
 849:control.h     ****                 // // START the device again: baseline tracking + 12 electrodes
 850:control.h     ****                 // _objMpr121.WriteRegister(daisy::Mpr121I2C::MPR121_ECR, 0x8C); // 0x80 + 12
 851:control.h     ****             }   
 852:control.h     **** 
 853:control.h     ****             SetOnTouch(fxPressFunction);
 7848              		.loc 21 853 23
 7849 0044 0649     		ldr	r1, .L382+4
 7850 0046 7868     		ldr	r0, [r7, #4]
 7851 0048 FFF7FEFF 		bl	_ZN12clasCapTouch10SetOnTouchEPFvtbE
 854:control.h     ****             SetOnRelease(fxReleaseFunction);
 7852              		.loc 21 854 25
 7853 004c 0549     		ldr	r1, .L382+8
 7854 004e 7868     		ldr	r0, [r7, #4]
 7855 0050 FFF7FEFF 		bl	_ZN12clasCapTouch12SetOnReleaseEPFvtE
 855:control.h     ****         }
 7856              		.loc 21 855 9
 7857 0054 00BF     		nop
 7858 0056 2037     		adds	r7, r7, #32
 7859              		.cfi_def_cfa_offset 16
 7860 0058 BD46     		mov	sp, r7
 7861              		.cfi_def_cfa_register 13
 7862              		@ sp needed
 7863 005a B0BD     		pop	{r4, r5, r7, pc}
 7864              	.L383:
 7865              		.align	2
 7866              	.L382:
 7867 005c 98010000 		.word	.LC17
 7868 0060 00000000 		.word	_Z15fxPressFunctiontb
 7869 0064 00000000 		.word	_Z17fxReleaseFunctiont
 7870              		.cfi_endproc
 7871              	.LFE4750:
 7873              		.section	.text._ZN12clasCapTouch4InitEN5daisy9DaisySeedE,"axG",%progbits,_ZN12clasCapTouch4InitEN5
 7874              		.align	1
 7875              		.weak	_ZN12clasCapTouch4InitEN5daisy9DaisySeedE
 7876              		.syntax unified
 7877              		.thumb
 7878              		.thumb_func
 7879              		.fpu fpv5-d16
 7881              	_ZN12clasCapTouch4InitEN5daisy9DaisySeedE:
 7882              	.LFB4751:
 856:control.h     **** 
 857:control.h     ****     public:
 858:control.h     **** 
 859:control.h     ****         void Init(DaisySeed hw){
 7883              		.loc 21 859 14
 7884              		.cfi_startproc
 7885              		@ args = 0, pretend = 0, frame = 8
 7886              		@ frame_needed = 1, uses_anonymous_args = 0
 7887 0000 B0B5     		push	{r4, r5, r7, lr}
 7888              		.cfi_def_cfa_offset 16
 7889              		.cfi_offset 4, -16
 7890              		.cfi_offset 5, -12
 7891              		.cfi_offset 7, -8
 7892              		.cfi_offset 14, -4
 7893 0002 82B0     		sub	sp, sp, #8
 7894              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 194


 7895 0004 00AF     		add	r7, sp, #0
 7896              		.cfi_def_cfa_register 7
 7897 0006 7860     		str	r0, [r7, #4]
 7898 0008 3960     		str	r1, [r7]
 860:control.h     ****             _hw = hw;
 7899              		.loc 21 860 17
 7900 000a 7B68     		ldr	r3, [r7, #4]
 7901 000c 3A68     		ldr	r2, [r7]
 7902 000e 03F13404 		add	r4, r3, #52
 7903 0012 1546     		mov	r5, r2
 7904 0014 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7905 0016 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7906 0018 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7907 001a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7908 001c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7909 001e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7910 0020 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 7911 0024 84E80F00 		stm	r4, {r0, r1, r2, r3}
 861:control.h     ****             mConfig();
 7912              		.loc 21 861 20
 7913 0028 7868     		ldr	r0, [r7, #4]
 7914 002a FFF7FEFF 		bl	_ZN12clasCapTouch7mConfigEv
 862:control.h     ****         };
 7915              		.loc 21 862 9
 7916 002e 00BF     		nop
 7917 0030 0837     		adds	r7, r7, #8
 7918              		.cfi_def_cfa_offset 16
 7919 0032 BD46     		mov	sp, r7
 7920              		.cfi_def_cfa_register 13
 7921              		@ sp needed
 7922 0034 B0BD     		pop	{r4, r5, r7, pc}
 7923              		.cfi_endproc
 7924              	.LFE4751:
 7926              		.section	.text._ZN12clasCapTouch10SetOnTouchEPFvtbE,"axG",%progbits,_ZN12clasCapTouch10SetOnTouchE
 7927              		.align	1
 7928              		.weak	_ZN12clasCapTouch10SetOnTouchEPFvtbE
 7929              		.syntax unified
 7930              		.thumb
 7931              		.thumb_func
 7932              		.fpu fpv5-d16
 7934              	_ZN12clasCapTouch10SetOnTouchEPFvtbE:
 7935              	.LFB4752:
 863:control.h     **** 
 864:control.h     **** 
 865:control.h     ****         // Connects the callback functions, inserts the function into the adress placeholder. 
 866:control.h     ****         void SetOnTouch(void (*ptrOnTouch)(uint16_t uiPad,  bool xMenuActive)) { 
 7936              		.loc 21 866 14
 7937              		.cfi_startproc
 7938              		@ args = 0, pretend = 0, frame = 8
 7939              		@ frame_needed = 1, uses_anonymous_args = 0
 7940              		@ link register save eliminated.
 7941 0000 80B4     		push	{r7}
 7942              		.cfi_def_cfa_offset 4
 7943              		.cfi_offset 7, -4
 7944 0002 83B0     		sub	sp, sp, #12
 7945              		.cfi_def_cfa_offset 16
 7946 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 195


 7947              		.cfi_def_cfa_register 7
 7948 0006 7860     		str	r0, [r7, #4]
 7949 0008 3960     		str	r1, [r7]
 867:control.h     ****             _ptrOnTouch = ptrOnTouch;
 7950              		.loc 21 867 25
 7951 000a 7B68     		ldr	r3, [r7, #4]
 7952 000c 3A68     		ldr	r2, [r7]
 7953 000e 9A67     		str	r2, [r3, #120]
 868:control.h     ****         }
 7954              		.loc 21 868 9
 7955 0010 00BF     		nop
 7956 0012 0C37     		adds	r7, r7, #12
 7957              		.cfi_def_cfa_offset 4
 7958 0014 BD46     		mov	sp, r7
 7959              		.cfi_def_cfa_register 13
 7960              		@ sp needed
 7961 0016 5DF8047B 		ldr	r7, [sp], #4
 7962              		.cfi_restore 7
 7963              		.cfi_def_cfa_offset 0
 7964 001a 7047     		bx	lr
 7965              		.cfi_endproc
 7966              	.LFE4752:
 7968              		.section	.text._ZN12clasCapTouch12SetOnReleaseEPFvtE,"axG",%progbits,_ZN12clasCapTouch12SetOnRelea
 7969              		.align	1
 7970              		.weak	_ZN12clasCapTouch12SetOnReleaseEPFvtE
 7971              		.syntax unified
 7972              		.thumb
 7973              		.thumb_func
 7974              		.fpu fpv5-d16
 7976              	_ZN12clasCapTouch12SetOnReleaseEPFvtE:
 7977              	.LFB4753:
 869:control.h     **** 
 870:control.h     ****         void SetOnRelease(void (*ptrOnRelease)(uint16_t uiPad)) { 
 7978              		.loc 21 870 14
 7979              		.cfi_startproc
 7980              		@ args = 0, pretend = 0, frame = 8
 7981              		@ frame_needed = 1, uses_anonymous_args = 0
 7982              		@ link register save eliminated.
 7983 0000 80B4     		push	{r7}
 7984              		.cfi_def_cfa_offset 4
 7985              		.cfi_offset 7, -4
 7986 0002 83B0     		sub	sp, sp, #12
 7987              		.cfi_def_cfa_offset 16
 7988 0004 00AF     		add	r7, sp, #0
 7989              		.cfi_def_cfa_register 7
 7990 0006 7860     		str	r0, [r7, #4]
 7991 0008 3960     		str	r1, [r7]
 871:control.h     ****             _ptrOnRelease = ptrOnRelease;
 7992              		.loc 21 871 27
 7993 000a 7B68     		ldr	r3, [r7, #4]
 7994 000c 3A68     		ldr	r2, [r7]
 7995 000e DA67     		str	r2, [r3, #124]
 872:control.h     ****         }
 7996              		.loc 21 872 9
 7997 0010 00BF     		nop
 7998 0012 0C37     		adds	r7, r7, #12
 7999              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 196


 8000 0014 BD46     		mov	sp, r7
 8001              		.cfi_def_cfa_register 13
 8002              		@ sp needed
 8003 0016 5DF8047B 		ldr	r7, [sp], #4
 8004              		.cfi_restore 7
 8005              		.cfi_def_cfa_offset 0
 8006 001a 7047     		bx	lr
 8007              		.cfi_endproc
 8008              	.LFE4753:
 8010              		.section	.text._ZN12clasCapTouch7ProcessEv,"axG",%progbits,_ZN12clasCapTouch7ProcessEv,comdat
 8011              		.align	1
 8012              		.weak	_ZN12clasCapTouch7ProcessEv
 8013              		.syntax unified
 8014              		.thumb
 8015              		.thumb_func
 8016              		.fpu fpv5-d16
 8018              	_ZN12clasCapTouch7ProcessEv:
 8019              	.LFB4756:
 873:control.h     **** 
 874:control.h     ****         bool IsTouched(uint16_t uiPad) { 
 875:control.h     ****             return _uiState & (1 << uiPad); 
 876:control.h     ****         }
 877:control.h     **** 
 878:control.h     ****         bool HasTouch() { 
 879:control.h     ****             return _uiState > 0; 
 880:control.h     ****         }
 881:control.h     ****     
 882:control.h     **** 
 883:control.h     ****         void Process() {
 8020              		.loc 21 883 14
 8021              		.cfi_startproc
 8022              		@ args = 0, pretend = 0, frame = 16
 8023              		@ frame_needed = 1, uses_anonymous_args = 0
 8024 0000 90B5     		push	{r4, r7, lr}
 8025              		.cfi_def_cfa_offset 12
 8026              		.cfi_offset 4, -12
 8027              		.cfi_offset 7, -8
 8028              		.cfi_offset 14, -4
 8029 0002 85B0     		sub	sp, sp, #20
 8030              		.cfi_def_cfa_offset 32
 8031 0004 00AF     		add	r7, sp, #0
 8032              		.cfi_def_cfa_register 7
 8033 0006 7860     		str	r0, [r7, #4]
 884:control.h     ****             uint16_t uiPad;
 885:control.h     ****             bool xIsTouched;
 886:control.h     ****             bool xWasTouched;
 887:control.h     ****             auto state = _objMpr121.Touched();
 8034              		.loc 21 887 44
 8035 0008 7B68     		ldr	r3, [r7, #4]
 8036 000a 1846     		mov	r0, r3
 8037 000c FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE7TouchedEv
 8038 0010 0346     		mov	r3, r0
 8039 0012 BB81     		strh	r3, [r7, #12]	@ movhi
 8040              	.LBB50:
 888:control.h     ****             for (uint16_t i = 0; i < 12; i++) {
 8041              		.loc 21 888 27
 8042 0014 0023     		movs	r3, #0
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 197


 8043 0016 FB81     		strh	r3, [r7, #14]	@ movhi
 8044              	.L391:
 8045              		.loc 21 888 36 discriminator 1
 8046 0018 FB89     		ldrh	r3, [r7, #14]
 8047 001a 0B2B     		cmp	r3, #11
 8048 001c 47D8     		bhi	.L388
 889:control.h     ****                 uiPad = 1 << i;
 8049              		.loc 21 889 30
 8050 001e FB89     		ldrh	r3, [r7, #14]
 8051              		.loc 21 889 27
 8052 0020 0122     		movs	r2, #1
 8053 0022 02FA03F3 		lsl	r3, r2, r3
 8054              		.loc 21 889 23
 8055 0026 7B81     		strh	r3, [r7, #10]	@ movhi
 890:control.h     ****                 xIsTouched = state & uiPad;
 8056              		.loc 21 890 36
 8057 0028 BA89     		ldrh	r2, [r7, #12]	@ movhi
 8058 002a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 8059 002c 1340     		ands	r3, r3, r2
 8060 002e 9BB2     		uxth	r3, r3
 8061              		.loc 21 890 28
 8062 0030 002B     		cmp	r3, #0
 8063 0032 14BF     		ite	ne
 8064 0034 0123     		movne	r3, #1
 8065 0036 0023     		moveq	r3, #0
 8066 0038 7B72     		strb	r3, [r7, #9]
 891:control.h     ****                 xWasTouched = _uiState & uiPad;
 8067              		.loc 21 891 31
 8068 003a 7B68     		ldr	r3, [r7, #4]
 8069 003c B3F87420 		ldrh	r2, [r3, #116]
 8070              		.loc 21 891 40
 8071 0040 7B89     		ldrh	r3, [r7, #10]	@ movhi
 8072 0042 1340     		ands	r3, r3, r2
 8073 0044 9BB2     		uxth	r3, r3
 8074              		.loc 21 891 29
 8075 0046 002B     		cmp	r3, #0
 8076 0048 14BF     		ite	ne
 8077 004a 0123     		movne	r3, #1
 8078 004c 0023     		moveq	r3, #0
 8079 004e 3B72     		strb	r3, [r7, #8]
 892:control.h     ****                 if (_ptrOnTouch != nullptr && xIsTouched && !xWasTouched) {
 8080              		.loc 21 892 21
 8081 0050 7B68     		ldr	r3, [r7, #4]
 8082 0052 9B6F     		ldr	r3, [r3, #120]
 8083              		.loc 21 892 17
 8084 0054 002B     		cmp	r3, #0
 8085 0056 14D0     		beq	.L389
 8086              		.loc 21 892 44 discriminator 1
 8087 0058 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 8088 005a 002B     		cmp	r3, #0
 8089 005c 11D0     		beq	.L389
 8090              		.loc 21 892 61 discriminator 2
 8091 005e 3B7A     		ldrb	r3, [r7, #8]
 8092 0060 83F00103 		eor	r3, r3, #1
 8093 0064 DBB2     		uxtb	r3, r3
 8094              		.loc 21 892 58 discriminator 2
 8095 0066 002B     		cmp	r3, #0
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 198


 8096 0068 0BD0     		beq	.L389
 893:control.h     ****                     _ptrOnTouch(i, Btn1.Pressed()); //Button added for mode. Uses call back functio
 8097              		.loc 21 893 21
 8098 006a 7B68     		ldr	r3, [r7, #4]
 8099 006c 9C6F     		ldr	r4, [r3, #120]
 8100              		.loc 21 893 32
 8101 006e 1448     		ldr	r0, .L392
 8102 0070 FFF7FEFF 		bl	_ZNK5daisy6Switch7PressedEv
 8103 0074 0346     		mov	r3, r0
 8104 0076 1A46     		mov	r2, r3
 8105 0078 FB89     		ldrh	r3, [r7, #14]
 8106 007a 1146     		mov	r1, r2
 8107 007c 1846     		mov	r0, r3
 8108 007e A047     		blx	r4
 8109              	.LVL0:
 8110 0080 11E0     		b	.L390
 8111              	.L389:
 894:control.h     ****                     // _hw.PrintLine("Key %d touch", i);
 895:control.h     ****                 } else if (_ptrOnRelease != nullptr && xWasTouched && !xIsTouched) {
 8112              		.loc 21 895 28
 8113 0082 7B68     		ldr	r3, [r7, #4]
 8114 0084 DB6F     		ldr	r3, [r3, #124]
 8115              		.loc 21 895 24
 8116 0086 002B     		cmp	r3, #0
 8117 0088 0DD0     		beq	.L390
 8118              		.loc 21 895 53 discriminator 1
 8119 008a 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 8120 008c 002B     		cmp	r3, #0
 8121 008e 0AD0     		beq	.L390
 8122              		.loc 21 895 71 discriminator 2
 8123 0090 7B7A     		ldrb	r3, [r7, #9]
 8124 0092 83F00103 		eor	r3, r3, #1
 8125 0096 DBB2     		uxtb	r3, r3
 8126              		.loc 21 895 68 discriminator 2
 8127 0098 002B     		cmp	r3, #0
 8128 009a 04D0     		beq	.L390
 896:control.h     ****                     _ptrOnRelease(i);
 8129              		.loc 21 896 21
 8130 009c 7B68     		ldr	r3, [r7, #4]
 8131 009e DB6F     		ldr	r3, [r3, #124]
 8132              		.loc 21 896 34
 8133 00a0 FA89     		ldrh	r2, [r7, #14]
 8134 00a2 1046     		mov	r0, r2
 8135 00a4 9847     		blx	r3
 8136              	.LVL1:
 8137              	.L390:
 888:control.h     ****                 uiPad = 1 << i;
 8138              		.loc 21 888 13 discriminator 2
 8139 00a6 FB89     		ldrh	r3, [r7, #14]
 8140 00a8 0133     		adds	r3, r3, #1
 8141 00aa FB81     		strh	r3, [r7, #14]	@ movhi
 8142 00ac B4E7     		b	.L391
 8143              	.L388:
 8144              	.LBE50:
 897:control.h     ****                     // _hw.PrintLine("Key %d release", i);
 898:control.h     **** 
 899:control.h     ****                 }
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 199


 900:control.h     ****             }
 901:control.h     ****             _uiState = state;
 8145              		.loc 21 901 22
 8146 00ae 7B68     		ldr	r3, [r7, #4]
 8147 00b0 BA89     		ldrh	r2, [r7, #12]	@ movhi
 8148 00b2 A3F87420 		strh	r2, [r3, #116]	@ movhi
 902:control.h     ****         };
 8149              		.loc 21 902 9
 8150 00b6 00BF     		nop
 8151 00b8 1437     		adds	r7, r7, #20
 8152              		.cfi_def_cfa_offset 12
 8153 00ba BD46     		mov	sp, r7
 8154              		.cfi_def_cfa_register 13
 8155              		@ sp needed
 8156 00bc 90BD     		pop	{r4, r7, pc}
 8157              	.L393:
 8158 00be 00BF     		.align	2
 8159              	.L392:
 8160 00c0 00000000 		.word	Btn1
 8161              		.cfi_endproc
 8162              	.LFE4756:
 8164              		.global	hw
 8165              		.section	.bss.hw,"aw",%nobits
 8166              		.align	2
 8169              	hw:
 8170 0000 00000000 		.space	64
 8170      00000000 
 8170      00000000 
 8170      00000000 
 8170      00000000 
 8171              		.section	.text._ZN12clasCapTouchC2Ev,"axG",%progbits,_ZN12clasCapTouchC5Ev,comdat
 8172              		.align	1
 8173              		.weak	_ZN12clasCapTouchC2Ev
 8174              		.syntax unified
 8175              		.thumb
 8176              		.thumb_func
 8177              		.fpu fpv5-d16
 8179              	_ZN12clasCapTouchC2Ev:
 8180              	.LFB4758:
 828:control.h     ****     private:
 8181              		.loc 21 828 7
 8182              		.cfi_startproc
 8183              		@ args = 0, pretend = 0, frame = 8
 8184              		@ frame_needed = 1, uses_anonymous_args = 0
 8185 0000 80B5     		push	{r7, lr}
 8186              		.cfi_def_cfa_offset 8
 8187              		.cfi_offset 7, -8
 8188              		.cfi_offset 14, -4
 8189 0002 82B0     		sub	sp, sp, #8
 8190              		.cfi_def_cfa_offset 16
 8191 0004 00AF     		add	r7, sp, #0
 8192              		.cfi_def_cfa_register 7
 8193 0006 7860     		str	r0, [r7, #4]
 8194              	.LBB51:
 828:control.h     ****     private:
 8195              		.loc 21 828 7
 8196 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 200


 8197 000a 1846     		mov	r0, r3
 8198 000c FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEEC1Ev
 8199 0010 7B68     		ldr	r3, [r7, #4]
 8200 0012 3433     		adds	r3, r3, #52
 8201 0014 1846     		mov	r0, r3
 8202 0016 FFF7FEFF 		bl	_ZN5daisy9DaisySeedC1Ev
 8203              	.LBE51:
 8204 001a 7B68     		ldr	r3, [r7, #4]
 8205 001c 1846     		mov	r0, r3
 8206 001e 0837     		adds	r7, r7, #8
 8207              		.cfi_def_cfa_offset 8
 8208 0020 BD46     		mov	sp, r7
 8209              		.cfi_def_cfa_register 13
 8210              		@ sp needed
 8211 0022 80BD     		pop	{r7, pc}
 8212              		.cfi_endproc
 8213              	.LFE4758:
 8215              		.weak	_ZN12clasCapTouchC1Ev
 8216              		.thumb_set _ZN12clasCapTouchC1Ev,_ZN12clasCapTouchC2Ev
 8217              		.global	objTouch
 8218              		.section	.bss.objTouch,"aw",%nobits
 8219              		.align	2
 8222              	objTouch:
 8223 0000 00000000 		.space	128
 8223      00000000 
 8223      00000000 
 8223      00000000 
 8223      00000000 
 8224              		.global	objLeadVoice
 8225              		.section	.bss.objLeadVoice,"aw",%nobits
 8226              		.align	2
 8229              	objLeadVoice:
 8230 0000 00000000 		.space	48
 8230      00000000 
 8230      00000000 
 8230      00000000 
 8230      00000000 
 8231              		.section	.text._ZN21clasSecondOrderFilterC2Ev,"axG",%progbits,_ZN21clasSecondOrderFilterC5Ev,comda
 8232              		.align	1
 8233              		.weak	_ZN21clasSecondOrderFilterC2Ev
 8234              		.syntax unified
 8235              		.thumb
 8236              		.thumb_func
 8237              		.fpu fpv5-d16
 8239              	_ZN21clasSecondOrderFilterC2Ev:
 8240              	.LFB4761:
  17:twoorderfilter.h **** private:
 8241              		.loc 18 17 7
 8242              		.cfi_startproc
 8243              		@ args = 0, pretend = 0, frame = 8
 8244              		@ frame_needed = 1, uses_anonymous_args = 0
 8245              		@ link register save eliminated.
 8246 0000 80B4     		push	{r7}
 8247              		.cfi_def_cfa_offset 4
 8248              		.cfi_offset 7, -4
 8249 0002 83B0     		sub	sp, sp, #12
 8250              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 201


 8251 0004 00AF     		add	r7, sp, #0
 8252              		.cfi_def_cfa_register 7
 8253 0006 7860     		str	r0, [r7, #4]
 8254              	.LBB52:
  17:twoorderfilter.h **** private:
 8255              		.loc 18 17 7
 8256 0008 7B68     		ldr	r3, [r7, #4]
 8257 000a 064A     		ldr	r2, .L398
 8258 000c 5A61     		str	r2, [r3, #20]	@ float
 8259 000e 7B68     		ldr	r3, [r7, #4]
 8260 0010 40F2DC52 		movw	r2, #1500
 8261 0014 1A63     		str	r2, [r3, #48]
 8262              	.LBE52:
 8263 0016 7B68     		ldr	r3, [r7, #4]
 8264 0018 1846     		mov	r0, r3
 8265 001a 0C37     		adds	r7, r7, #12
 8266              		.cfi_def_cfa_offset 4
 8267 001c BD46     		mov	sp, r7
 8268              		.cfi_def_cfa_register 13
 8269              		@ sp needed
 8270 001e 5DF8047B 		ldr	r7, [sp], #4
 8271              		.cfi_restore 7
 8272              		.cfi_def_cfa_offset 0
 8273 0022 7047     		bx	lr
 8274              	.L399:
 8275              		.align	2
 8276              	.L398:
 8277 0024 DB0F4940 		.word	1078530011
 8278              		.cfi_endproc
 8279              	.LFE4761:
 8281              		.weak	_ZN21clasSecondOrderFilterC1Ev
 8282              		.thumb_set _ZN21clasSecondOrderFilterC1Ev,_ZN21clasSecondOrderFilterC2Ev
 8283              		.global	objLPFLeadVoice
 8284              		.section	.bss.objLPFLeadVoice,"aw",%nobits
 8285              		.align	2
 8288              	objLPFLeadVoice:
 8289 0000 00000000 		.space	100
 8289      00000000 
 8289      00000000 
 8289      00000000 
 8289      00000000 
 8290              		.global	objLFOSlow
 8291              		.section	.bss.objLFOSlow,"aw",%nobits
 8292              		.align	2
 8295              	objLFOSlow:
 8296 0000 00000000 		.space	44
 8296      00000000 
 8296      00000000 
 8296      00000000 
 8296      00000000 
 8297              		.global	objLFOFast
 8298              		.section	.bss.objLFOFast,"aw",%nobits
 8299              		.align	2
 8302              	objLFOFast:
 8303 0000 00000000 		.space	44
 8303      00000000 
 8303      00000000 
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 202


 8303      00000000 
 8303      00000000 
 8304              		.section	.rodata._ZL10ADC_SCALAR,"a"
 8305              		.align	2
 8308              	_ZL10ADC_SCALAR:
 8309 0000 6666A63F 		.word	1067869798
 8310              		.global	AmpLead
 8311              		.section	.bss.AmpLead,"aw",%nobits
 8312              		.align	2
 8315              	AmpLead:
 8316 0000 00000000 		.space	4
 8317              		.global	adcPT1
 8318              		.section	.bss.adcPT1,"aw",%nobits
 8319              		.align	2
 8322              	adcPT1:
 8323 0000 00000000 		.space	4
 8324              		.global	adcPT2
 8325              		.section	.bss.adcPT2,"aw",%nobits
 8326              		.align	2
 8329              	adcPT2:
 8330 0000 00000000 		.space	4
 8331              		.global	adcPT3
 8332              		.section	.bss.adcPT3,"aw",%nobits
 8333              		.align	2
 8336              	adcPT3:
 8337 0000 00000000 		.space	4
 8338              		.global	adcPT4
 8339              		.section	.bss.adcPT4,"aw",%nobits
 8340              		.align	2
 8343              	adcPT4:
 8344 0000 00000000 		.space	4
 8345              		.global	adcPT5
 8346              		.section	.bss.adcPT5,"aw",%nobits
 8347              		.align	2
 8350              	adcPT5:
 8351 0000 00000000 		.space	4
 8352              		.global	adcPT6
 8353              		.section	.bss.adcPT6,"aw",%nobits
 8354              		.align	2
 8357              	adcPT6:
 8358 0000 00000000 		.space	4
 8359              		.global	adcPT7
 8360              		.section	.bss.adcPT7,"aw",%nobits
 8361              		.align	2
 8364              	adcPT7:
 8365 0000 00000000 		.space	4
 8366              		.global	adcPT8
 8367              		.section	.bss.adcPT8,"aw",%nobits
 8368              		.align	2
 8371              	adcPT8:
 8372 0000 00000000 		.space	4
 8373              		.global	adcPT9
 8374              		.section	.bss.adcPT9,"aw",%nobits
 8375              		.align	2
 8378              	adcPT9:
 8379 0000 00000000 		.space	4
 8380              		.global	adcPT10
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 203


 8381              		.section	.bss.adcPT10,"aw",%nobits
 8382              		.align	2
 8385              	adcPT10:
 8386 0000 00000000 		.space	4
 8387              		.section	.bss._ZL10objFilter1,"aw",%nobits
 8388              		.align	2
 8391              	_ZL10objFilter1:
 8392 0000 00000000 		.space	16
 8392      00000000 
 8392      00000000 
 8392      00000000 
 8393              		.section	.bss._ZL10objFilter2,"aw",%nobits
 8394              		.align	2
 8397              	_ZL10objFilter2:
 8398 0000 00000000 		.space	16
 8398      00000000 
 8398      00000000 
 8398      00000000 
 8399              		.section	.bss._ZL11objLPFDrone,"aw",%nobits
 8400              		.align	2
 8403              	_ZL11objLPFDrone:
 8404 0000 00000000 		.space	100
 8404      00000000 
 8404      00000000 
 8404      00000000 
 8404      00000000 
 8405              		.section	.text._Z15fxPolynomialMapffff,"ax",%progbits
 8406              		.align	1
 8407              		.global	_Z15fxPolynomialMapffff
 8408              		.syntax unified
 8409              		.thumb
 8410              		.thumb_func
 8411              		.fpu fpv5-d16
 8413              	_Z15fxPolynomialMapffff:
 8414              	.LFB4763:
 8415              		.file 22 "WarpDrive.cpp"
   1:WarpDrive.cpp **** #include "daisysp.h"
   2:WarpDrive.cpp **** #include "daisy_seed.h"
   3:WarpDrive.cpp **** #include "math.h"
   4:WarpDrive.cpp **** #include "adsr.h"
   5:WarpDrive.cpp **** #include "dronevoice.h"
   6:WarpDrive.cpp **** #include "eulerssynthesis.h"
   7:WarpDrive.cpp **** #include "leadvoice.h"
   8:WarpDrive.cpp **** #include "twoorderfilter.h"
   9:WarpDrive.cpp **** #include "control.h"
  10:WarpDrive.cpp **** 
  11:WarpDrive.cpp **** using namespace daisysp;
  12:WarpDrive.cpp **** using namespace daisy;
  13:WarpDrive.cpp **** using namespace seed;
  14:WarpDrive.cpp **** 
  15:WarpDrive.cpp **** DaisySeed hw;
  16:WarpDrive.cpp **** clasCapTouch objTouch;
  17:WarpDrive.cpp **** clasEulersOscillator<16> objLeadVoice;
  18:WarpDrive.cpp **** clasSecondOrderFilter objLPFLeadVoice;
  19:WarpDrive.cpp **** 
  20:WarpDrive.cpp **** clasOscillator objLFOSlow;
  21:WarpDrive.cpp **** clasOscillator objLFOFast;
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 204


  22:WarpDrive.cpp **** 
  23:WarpDrive.cpp **** //TEST/////////////////////////////////////////////////
  24:WarpDrive.cpp **** const float ADC_SCALAR = 1.3;
  25:WarpDrive.cpp **** 
  26:WarpDrive.cpp **** //VARIABLES////////////////////////////////////////////
  27:WarpDrive.cpp **** 
  28:WarpDrive.cpp **** float AmpLead;
  29:WarpDrive.cpp **** 
  30:WarpDrive.cpp **** float adcPT1;
  31:WarpDrive.cpp **** float adcPT2;
  32:WarpDrive.cpp **** float adcPT3;
  33:WarpDrive.cpp **** float adcPT4;
  34:WarpDrive.cpp **** float adcPT5;
  35:WarpDrive.cpp **** float adcPT6;
  36:WarpDrive.cpp **** float adcPT7;
  37:WarpDrive.cpp **** float adcPT8;
  38:WarpDrive.cpp **** float adcPT9;
  39:WarpDrive.cpp **** float adcPT10;
  40:WarpDrive.cpp **** 
  41:WarpDrive.cpp **** //FILTERS//////////////////////////////////////////////
  42:WarpDrive.cpp **** static OnePole objFilter1;
  43:WarpDrive.cpp **** static OnePole objFilter2;
  44:WarpDrive.cpp **** 
  45:WarpDrive.cpp **** static clasSecondOrderFilter objLPFDrone;
  46:WarpDrive.cpp **** 
  47:WarpDrive.cpp **** 
  48:WarpDrive.cpp **** //FUNCTIONS///////////////////////////////////////////
  49:WarpDrive.cpp **** //Analogue Pots Calibration
  50:WarpDrive.cpp **** //Change the sensistivity of the signal when using potentiometers. 
  51:WarpDrive.cpp **** //Linear -> a=0, b=1, c=0
  52:WarpDrive.cpp **** //More sense low end -> a>0, b=1, c=0
  53:WarpDrive.cpp **** //More sense high end -> a<0, b=1, c=0
  54:WarpDrive.cpp **** float fxPolynomialMap(float inputsignal, float a, float b, float c){
 8416              		.loc 22 54 68
 8417              		.cfi_startproc
 8418              		@ args = 0, pretend = 0, frame = 24
 8419              		@ frame_needed = 1, uses_anonymous_args = 0
 8420 0000 80B5     		push	{r7, lr}
 8421              		.cfi_def_cfa_offset 8
 8422              		.cfi_offset 7, -8
 8423              		.cfi_offset 14, -4
 8424 0002 2DED028B 		vpush.64	{d8}
 8425              		.cfi_def_cfa_offset 16
 8426              		.cfi_offset 80, -16
 8427              		.cfi_offset 81, -12
 8428 0006 86B0     		sub	sp, sp, #24
 8429              		.cfi_def_cfa_offset 40
 8430 0008 00AF     		add	r7, sp, #0
 8431              		.cfi_def_cfa_register 7
 8432 000a 87ED030A 		vstr.32	s0, [r7, #12]
 8433 000e C7ED020A 		vstr.32	s1, [r7, #8]
 8434 0012 87ED011A 		vstr.32	s2, [r7, #4]
 8435 0016 C7ED001A 		vstr.32	s3, [r7]
  55:WarpDrive.cpp ****     float flCorrected = a * pow(inputsignal, 2) + b * inputsignal + c;
 8436              		.loc 22 55 25
 8437 001a D7ED027A 		vldr.32	s15, [r7, #8]
 8438 001e B7EEE78A 		vcvt.f64.f32	d8, s15
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 205


 8439              		.loc 22 55 32
 8440 0022 0220     		movs	r0, #2
 8441 0024 97ED030A 		vldr.32	s0, [r7, #12]
 8442 0028 FFF7FEFF 		bl	_ZSt3powIfiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6
 8443 002c B0EE407B 		vmov.f64	d7, d0
 8444              		.loc 22 55 27
 8445 0030 28EE076B 		vmul.f64	d6, d8, d7
 8446              		.loc 22 55 53
 8447 0034 97ED017A 		vldr.32	s14, [r7, #4]
 8448 0038 D7ED037A 		vldr.32	s15, [r7, #12]
 8449 003c 67EE277A 		vmul.f32	s15, s14, s15
 8450 0040 B7EEE77A 		vcvt.f64.f32	d7, s15
 8451              		.loc 22 55 49
 8452 0044 36EE076B 		vadd.f64	d6, d6, d7
 8453              		.loc 22 55 69
 8454 0048 D7ED007A 		vldr.32	s15, [r7]
 8455 004c B7EEE77A 		vcvt.f64.f32	d7, s15
 8456              		.loc 22 55 67
 8457 0050 36EE077B 		vadd.f64	d7, d6, d7
 8458              		.loc 22 55 69
 8459 0054 F7EEC77B 		vcvt.f32.f64	s15, d7
 8460 0058 C7ED057A 		vstr.32	s15, [r7, #20]
  56:WarpDrive.cpp ****     flCorrected = fmax(0.0, fmin(flCorrected, 1.0));
 8461              		.loc 22 56 23
 8462 005c B7EE001B 		vmov.f64	d1, #1.0e+0
 8463 0060 97ED050A 		vldr.32	s0, [r7, #20]
 8464 0064 FFF7FEFF 		bl	_ZSt4fminIfdEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE
 8465 0068 B0EE407B 		vmov.f64	d7, d0
 8466 006c B0EE471B 		vmov.f64	d1, d7
 8467 0070 9FED090B 		vldr.64	d0, .L402
 8468 0074 FFF7FEFF 		bl	fmax
 8469 0078 B0EE407B 		vmov.f64	d7, d0
 8470              		.loc 22 56 17
 8471 007c F7EEC77B 		vcvt.f32.f64	s15, d7
 8472 0080 C7ED057A 		vstr.32	s15, [r7, #20]
  57:WarpDrive.cpp ****     return flCorrected;
 8473              		.loc 22 57 12
 8474 0084 7B69     		ldr	r3, [r7, #20]	@ float
 8475 0086 07EE903A 		vmov	s15, r3
  58:WarpDrive.cpp **** }
 8476              		.loc 22 58 1
 8477 008a B0EE670A 		vmov.f32	s0, s15
 8478 008e 1837     		adds	r7, r7, #24
 8479              		.cfi_def_cfa_offset 16
 8480 0090 BD46     		mov	sp, r7
 8481              		.cfi_def_cfa_register 13
 8482              		@ sp needed
 8483 0092 BDEC028B 		vldm	sp!, {d8}
 8484              		.cfi_restore 80
 8485              		.cfi_restore 81
 8486              		.cfi_def_cfa_offset 8
 8487 0096 80BD     		pop	{r7, pc}
 8488              	.L403:
 8489              		.align	3
 8490              	.L402:
 8491 0098 00000000 		.word	0
 8492 009c 00000000 		.word	0
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 206


 8493              		.cfi_endproc
 8494              	.LFE4763:
 8496              		.section	.text._ZL13AudioCallbackPKfPfj,"ax",%progbits
 8497              		.align	1
 8498              		.syntax unified
 8499              		.thumb
 8500              		.thumb_func
 8501              		.fpu fpv5-d16
 8503              	_ZL13AudioCallbackPKfPfj:
 8504              	.LFB4764:
  59:WarpDrive.cpp **** 
  60:WarpDrive.cpp **** 
  61:WarpDrive.cpp **** //INTERRUPTS AND CALLBACKS//////////////////////////////////
  62:WarpDrive.cpp **** //Main audio call back function 
  63:WarpDrive.cpp **** 
  64:WarpDrive.cpp **** //Cant use PrintLine in here because will be called before the port is opened. 
  65:WarpDrive.cpp **** static void AudioCallback(AudioHandle::InterleavingInputBuffer  in,
  66:WarpDrive.cpp ****                           AudioHandle::InterleavingOutputBuffer out,
  67:WarpDrive.cpp ****                           size_t                                size)
  68:WarpDrive.cpp **** {
 8505              		.loc 22 68 1
 8506              		.cfi_startproc
 8507              		@ args = 0, pretend = 0, frame = 64
 8508              		@ frame_needed = 1, uses_anonymous_args = 0
 8509 0000 90B5     		push	{r4, r7, lr}
 8510              		.cfi_def_cfa_offset 12
 8511              		.cfi_offset 4, -12
 8512              		.cfi_offset 7, -8
 8513              		.cfi_offset 14, -4
 8514 0002 91B0     		sub	sp, sp, #68
 8515              		.cfi_def_cfa_offset 80
 8516 0004 00AF     		add	r7, sp, #0
 8517              		.cfi_def_cfa_register 7
 8518 0006 F860     		str	r0, [r7, #12]
 8519 0008 B960     		str	r1, [r7, #8]
 8520 000a 7A60     		str	r2, [r7, #4]
 8521              	.LBB53:
  69:WarpDrive.cpp ****     for(size_t i = 0; i < size; i += 2)
 8522              		.loc 22 69 16
 8523 000c 0023     		movs	r3, #0
 8524 000e FB63     		str	r3, [r7, #60]
 8525              	.L415:
 8526              		.loc 22 69 25 discriminator 1
 8527 0010 FA6B     		ldr	r2, [r7, #60]
 8528 0012 7B68     		ldr	r3, [r7, #4]
 8529 0014 9A42     		cmp	r2, r3
 8530 0016 80F02481 		bcs	.L416
 8531              	.LBB54:
  70:WarpDrive.cpp ****     {
  71:WarpDrive.cpp ****         //VOICE OUTPUTS////////////////////////////////////////////////////////////////////
  72:WarpDrive.cpp **** 
  73:WarpDrive.cpp ****             //SINGLE OSCILLATORS///////////////////////////////////////////////////////////////////
  74:WarpDrive.cpp ****             float aflSingleOutput[4]; //Individual outputs from the 4 oscillators. 
  75:WarpDrive.cpp **** 
  76:WarpDrive.cpp ****             aflSingleOutput[0] = aobjSingleOscillator[0].Process();
 8532              		.loc 22 76 65
 8533 001a 9448     		ldr	r0, .L417
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 207


 8534 001c FFF7FEFF 		bl	_ZN14clasOscillator7ProcessEv
 8535 0020 F0EE407A 		vmov.f32	s15, s0
 8536              		.loc 22 76 32
 8537 0024 C7ED057A 		vstr.32	s15, [r7, #20]
  77:WarpDrive.cpp ****             aflSingleOutput[1]  = aobjSingleOscillator[1].Process();
 8538              		.loc 22 77 66
 8539 0028 9148     		ldr	r0, .L417+4
 8540 002a FFF7FEFF 		bl	_ZN14clasOscillator7ProcessEv
 8541 002e F0EE407A 		vmov.f32	s15, s0
 8542              		.loc 22 77 33
 8543 0032 C7ED067A 		vstr.32	s15, [r7, #24]
  78:WarpDrive.cpp ****             aflSingleOutput[2]  = aobjSingleOscillator[2].Process();
 8544              		.loc 22 78 66
 8545 0036 8F48     		ldr	r0, .L417+8
 8546 0038 FFF7FEFF 		bl	_ZN14clasOscillator7ProcessEv
 8547 003c F0EE407A 		vmov.f32	s15, s0
 8548              		.loc 22 78 33
 8549 0040 C7ED077A 		vstr.32	s15, [r7, #28]
  79:WarpDrive.cpp ****             aflSingleOutput[3]  = aobjSingleOscillator[3].Process();
 8550              		.loc 22 79 66
 8551 0044 8C48     		ldr	r0, .L417+12
 8552 0046 FFF7FEFF 		bl	_ZN14clasOscillator7ProcessEv
 8553 004a F0EE407A 		vmov.f32	s15, s0
 8554              		.loc 22 79 33
 8555 004e C7ED087A 		vstr.32	s15, [r7, #32]
 8556              	.LBB55:
  80:WarpDrive.cpp **** 
  81:WarpDrive.cpp ****             //LFO Processing Single Oscillator.
  82:WarpDrive.cpp ****             for(int i = 0; i < 2; i++){
 8557              		.loc 22 82 21
 8558 0052 0023     		movs	r3, #0
 8559 0054 BB63     		str	r3, [r7, #56]
 8560              	.L408:
 8561              		.loc 22 82 30 discriminator 1
 8562 0056 BB6B     		ldr	r3, [r7, #56]
 8563 0058 012B     		cmp	r3, #1
 8564 005a 52DC     		bgt	.L406
  83:WarpDrive.cpp ****                 //Check for nulls in order to proceed. 
  84:WarpDrive.cpp ****                 if( g_astruLfoSlots[i].ptrLFO != nullptr && 
 8565              		.loc 22 84 40
 8566 005c 8749     		ldr	r1, .L417+16
 8567 005e BA6B     		ldr	r2, [r7, #56]
 8568 0060 1346     		mov	r3, r2
 8569 0062 9B00     		lsls	r3, r3, #2
 8570 0064 1344     		add	r3, r3, r2
 8571 0066 9B00     		lsls	r3, r3, #2
 8572 0068 0B44     		add	r3, r3, r1
 8573 006a 1B68     		ldr	r3, [r3]
 8574              		.loc 22 84 17
 8575 006c 002B     		cmp	r3, #0
 8576 006e 44D0     		beq	.L407
  85:WarpDrive.cpp ****                     g_astruLfoSlots[i].ptrSingleOscSelectLFO_ != nullptr && 
 8577              		.loc 22 85 40 discriminator 1
 8578 0070 8249     		ldr	r1, .L417+16
 8579 0072 BA6B     		ldr	r2, [r7, #56]
 8580 0074 1346     		mov	r3, r2
 8581 0076 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 208


 8582 0078 1344     		add	r3, r3, r2
 8583 007a 9B00     		lsls	r3, r3, #2
 8584 007c 0B44     		add	r3, r3, r1
 8585 007e 0433     		adds	r3, r3, #4
 8586 0080 1B68     		ldr	r3, [r3]
  84:WarpDrive.cpp ****                     g_astruLfoSlots[i].ptrSingleOscSelectLFO_ != nullptr && 
 8587              		.loc 22 84 58 discriminator 1
 8588 0082 002B     		cmp	r3, #0
 8589 0084 39D0     		beq	.L407
  86:WarpDrive.cpp ****                     g_astruLfoSlots[i].whichVoice == VoiceSelection::Single){
 8590              		.loc 22 86 40
 8591 0086 7D49     		ldr	r1, .L417+16
 8592 0088 BA6B     		ldr	r2, [r7, #56]
 8593 008a 1346     		mov	r3, r2
 8594 008c 9B00     		lsls	r3, r3, #2
 8595 008e 1344     		add	r3, r3, r2
 8596 0090 9B00     		lsls	r3, r3, #2
 8597 0092 0B44     		add	r3, r3, r1
 8598 0094 0833     		adds	r3, r3, #8
 8599 0096 1B68     		ldr	r3, [r3]
  85:WarpDrive.cpp ****                     g_astruLfoSlots[i].ptrSingleOscSelectLFO_ != nullptr && 
 8600              		.loc 22 85 74
 8601 0098 022B     		cmp	r3, #2
 8602 009a 2ED1     		bne	.L407
  87:WarpDrive.cpp **** 
  88:WarpDrive.cpp ****                     //Processes the output of a single oscillator. 
  89:WarpDrive.cpp ****                     aflSingleOutput[g_astruLfoSlots[i].iOscNumber] = g_astruLfoSlots[i].ptrLFO->LFO
 8603              		.loc 22 89 89
 8604 009c 7749     		ldr	r1, .L417+16
 8605 009e BA6B     		ldr	r2, [r7, #56]
 8606 00a0 1346     		mov	r3, r2
 8607 00a2 9B00     		lsls	r3, r3, #2
 8608 00a4 1344     		add	r3, r3, r2
 8609 00a6 9B00     		lsls	r3, r3, #2
 8610 00a8 0B44     		add	r3, r3, r1
 8611 00aa 1968     		ldr	r1, [r3]
 8612              		.loc 22 89 143
 8613 00ac 7348     		ldr	r0, .L417+16
 8614 00ae BA6B     		ldr	r2, [r7, #56]
 8615 00b0 1346     		mov	r3, r2
 8616 00b2 9B00     		lsls	r3, r3, #2
 8617 00b4 1344     		add	r3, r3, r2
 8618 00b6 9B00     		lsls	r3, r3, #2
 8619 00b8 0344     		add	r3, r3, r0
 8620 00ba 0C33     		adds	r3, r3, #12
 8621 00bc 1B68     		ldr	r3, [r3]
 8622              		.loc 22 89 107
 8623 00be 9B00     		lsls	r3, r3, #2
 8624 00c0 07F14002 		add	r2, r7, #64
 8625 00c4 1344     		add	r3, r3, r2
 8626 00c6 2C3B     		subs	r3, r3, #44
 8627 00c8 D3ED007A 		vldr.32	s15, [r3]
 8628              		.loc 22 89 56
 8629 00cc 6B48     		ldr	r0, .L417+16
 8630 00ce BA6B     		ldr	r2, [r7, #56]
 8631 00d0 1346     		mov	r3, r2
 8632 00d2 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 209


 8633 00d4 1344     		add	r3, r3, r2
 8634 00d6 9B00     		lsls	r3, r3, #2
 8635 00d8 0344     		add	r3, r3, r0
 8636 00da 0C33     		adds	r3, r3, #12
 8637 00dc 1C68     		ldr	r4, [r3]
 8638              		.loc 22 89 107
 8639 00de B0EE670A 		vmov.f32	s0, s15
 8640 00e2 0846     		mov	r0, r1
 8641 00e4 FFF7FEFF 		bl	_ZN14clasOscillator10LFOProcessEf
 8642 00e8 F0EE407A 		vmov.f32	s15, s0
 8643              		.loc 22 89 68
 8644 00ec A300     		lsls	r3, r4, #2
 8645 00ee 07F14002 		add	r2, r7, #64
 8646 00f2 1344     		add	r3, r3, r2
 8647 00f4 2C3B     		subs	r3, r3, #44
 8648 00f6 C3ED007A 		vstr.32	s15, [r3]
 8649              	.L407:
  82:WarpDrive.cpp ****                 //Check for nulls in order to proceed. 
 8650              		.loc 22 82 13 discriminator 2
 8651 00fa BB6B     		ldr	r3, [r7, #56]
 8652 00fc 0133     		adds	r3, r3, #1
 8653 00fe BB63     		str	r3, [r7, #56]
 8654 0100 A9E7     		b	.L408
 8655              	.L406:
 8656              	.LBE55:
  90:WarpDrive.cpp ****                 }
  91:WarpDrive.cpp ****             }
  92:WarpDrive.cpp **** 
  93:WarpDrive.cpp **** 
  94:WarpDrive.cpp ****             //DRONE VOICE//////////////////////////////////////////////////////////////////////////
  95:WarpDrive.cpp ****             //Drone output from oscillator bank
  96:WarpDrive.cpp ****             float DroneOutputSignal = ((
  97:WarpDrive.cpp ****                 aflSingleOutput[0] +
 8657              		.loc 22 97 34
 8658 0102 97ED057A 		vldr.32	s14, [r7, #20]
  98:WarpDrive.cpp ****                 aflSingleOutput[1] +
 8659              		.loc 22 98 34
 8660 0106 D7ED067A 		vldr.32	s15, [r7, #24]
  97:WarpDrive.cpp ****                 aflSingleOutput[1] +
 8661              		.loc 22 97 36
 8662 010a 37EE277A 		vadd.f32	s14, s14, s15
  99:WarpDrive.cpp ****                 aflSingleOutput[2] +
 8663              		.loc 22 99 34
 8664 010e D7ED077A 		vldr.32	s15, [r7, #28]
  98:WarpDrive.cpp ****                 aflSingleOutput[1] +
 8665              		.loc 22 98 36
 8666 0112 37EE277A 		vadd.f32	s14, s14, s15
 100:WarpDrive.cpp ****                 aflSingleOutput[3] ) 
 8667              		.loc 22 100 34
 8668 0116 D7ED087A 		vldr.32	s15, [r7, #32]
  99:WarpDrive.cpp ****                 aflSingleOutput[2] +
 8669              		.loc 22 99 36
 8670 011a 77EE277A 		vadd.f32	s15, s14, s15
  96:WarpDrive.cpp ****                 aflSingleOutput[0] +
 8671              		.loc 22 96 19
 8672 011e B5EE007A 		vmov.f32	s14, #2.5e-1
 8673 0122 67EE877A 		vmul.f32	s15, s15, s14
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 210


 8674 0126 C7ED0D7A 		vstr.32	s15, [r7, #52]
 8675              	.LBB56:
 101:WarpDrive.cpp ****                 * 0.25f);
 102:WarpDrive.cpp **** 
 103:WarpDrive.cpp **** 
 104:WarpDrive.cpp ****             //LFO implementation for Drone voice
 105:WarpDrive.cpp ****             for(int i = 0; i < 2; i++){
 8676              		.loc 22 105 21
 8677 012a 0023     		movs	r3, #0
 8678 012c 3B63     		str	r3, [r7, #48]
 8679              	.L411:
 8680              		.loc 22 105 30 discriminator 1
 8681 012e 3B6B     		ldr	r3, [r7, #48]
 8682 0130 012B     		cmp	r3, #1
 8683 0132 27DC     		bgt	.L409
 106:WarpDrive.cpp ****                 //Check for nulls in order to proceed. 
 107:WarpDrive.cpp ****                 if(g_astruLfoSlots[i].ptrLFO != nullptr && g_astruLfoSlots[i].whichVoice == VoiceSe
 8684              		.loc 22 107 39
 8685 0134 5149     		ldr	r1, .L417+16
 8686 0136 3A6B     		ldr	r2, [r7, #48]
 8687 0138 1346     		mov	r3, r2
 8688 013a 9B00     		lsls	r3, r3, #2
 8689 013c 1344     		add	r3, r3, r2
 8690 013e 9B00     		lsls	r3, r3, #2
 8691 0140 0B44     		add	r3, r3, r1
 8692 0142 1B68     		ldr	r3, [r3]
 8693              		.loc 22 107 17
 8694 0144 002B     		cmp	r3, #0
 8695 0146 19D0     		beq	.L410
 8696              		.loc 22 107 79 discriminator 1
 8697 0148 4C49     		ldr	r1, .L417+16
 8698 014a 3A6B     		ldr	r2, [r7, #48]
 8699 014c 1346     		mov	r3, r2
 8700 014e 9B00     		lsls	r3, r3, #2
 8701 0150 1344     		add	r3, r3, r2
 8702 0152 9B00     		lsls	r3, r3, #2
 8703 0154 0B44     		add	r3, r3, r1
 8704 0156 0833     		adds	r3, r3, #8
 8705 0158 1B68     		ldr	r3, [r3]
 8706              		.loc 22 107 57 discriminator 1
 8707 015a 012B     		cmp	r3, #1
 8708 015c 0ED1     		bne	.L410
 108:WarpDrive.cpp ****                     //Processes the output of drone voice. 
 109:WarpDrive.cpp ****                     DroneOutputSignal = g_astruLfoSlots[i].ptrLFO->LFOProcess(DroneOutputSignal);
 8709              		.loc 22 109 60
 8710 015e 4749     		ldr	r1, .L417+16
 8711 0160 3A6B     		ldr	r2, [r7, #48]
 8712 0162 1346     		mov	r3, r2
 8713 0164 9B00     		lsls	r3, r3, #2
 8714 0166 1344     		add	r3, r3, r2
 8715 0168 9B00     		lsls	r3, r3, #2
 8716 016a 0B44     		add	r3, r3, r1
 8717 016c 1B68     		ldr	r3, [r3]
 8718              		.loc 22 109 78
 8719 016e 97ED0D0A 		vldr.32	s0, [r7, #52]
 8720 0172 1846     		mov	r0, r3
 8721 0174 FFF7FEFF 		bl	_ZN14clasOscillator10LFOProcessEf
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 211


 8722 0178 87ED0D0A 		vstr.32	s0, [r7, #52]
 8723              	.L410:
 105:WarpDrive.cpp ****                 //Check for nulls in order to proceed. 
 8724              		.loc 22 105 13 discriminator 2
 8725 017c 3B6B     		ldr	r3, [r7, #48]
 8726 017e 0133     		adds	r3, r3, #1
 8727 0180 3B63     		str	r3, [r7, #48]
 8728 0182 D4E7     		b	.L411
 8729              	.L409:
 8730              	.LBE56:
 110:WarpDrive.cpp ****                 }
 111:WarpDrive.cpp ****             }
 112:WarpDrive.cpp **** 
 113:WarpDrive.cpp ****             //Drone output into filter. 
 114:WarpDrive.cpp ****             DroneOutputSignal = objLPFDrone.Process(DroneOutputSignal);
 8731              		.loc 22 114 52
 8732 0184 97ED0D0A 		vldr.32	s0, [r7, #52]
 8733 0188 3D48     		ldr	r0, .L417+20
 8734 018a FFF7FEFF 		bl	_ZN21clasSecondOrderFilter7ProcessEf
 8735 018e 87ED0D0A 		vstr.32	s0, [r7, #52]
 115:WarpDrive.cpp ****             
 116:WarpDrive.cpp **** 
 117:WarpDrive.cpp ****             //LEAD VOICE///////////////////////////////////////////////////////////////////////////
 118:WarpDrive.cpp ****             //Lead output from oscillator
 119:WarpDrive.cpp ****             float LeadOutputSignal = objLeadVoice.Process();
 8736              		.loc 22 119 58
 8737 0192 3C48     		ldr	r0, .L417+24
 8738 0194 FFF7FEFF 		bl	_ZN20clasEulersOscillatorILi16EE7ProcessEv
 8739 0198 87ED0B0A 		vstr.32	s0, [r7, #44]
 120:WarpDrive.cpp **** 
 121:WarpDrive.cpp ****             //Lead ampilification from ADSR
 122:WarpDrive.cpp ****             objLeadVoice.SetAmp(objADSR.Process(xGate));
 8740              		.loc 22 122 32
 8741 019c 3A4B     		ldr	r3, .L417+28
 8742 019e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8743 01a0 1946     		mov	r1, r3
 8744 01a2 3A48     		ldr	r0, .L417+32
 8745 01a4 FFF7FEFF 		bl	_ZN8clasADSR7ProcessEb
 8746 01a8 F0EE407A 		vmov.f32	s15, s0
 8747 01ac B0EE670A 		vmov.f32	s0, s15
 8748 01b0 3448     		ldr	r0, .L417+24
 8749 01b2 FFF7FEFF 		bl	_ZN20clasEulersOscillatorILi16EE6SetAmpEf
 8750              	.LBB57:
 123:WarpDrive.cpp **** 
 124:WarpDrive.cpp ****             //LFO implementation for the Lead voice. 
 125:WarpDrive.cpp ****             for(int i = 0; i < 2; i++){
 8751              		.loc 22 125 21
 8752 01b6 0023     		movs	r3, #0
 8753 01b8 BB62     		str	r3, [r7, #40]
 8754              	.L414:
 8755              		.loc 22 125 30 discriminator 1
 8756 01ba BB6A     		ldr	r3, [r7, #40]
 8757 01bc 012B     		cmp	r3, #1
 8758 01be 27DC     		bgt	.L412
 126:WarpDrive.cpp ****                 //Check for nulls in order to proceed. 
 127:WarpDrive.cpp ****                 if(g_astruLfoSlots[i].ptrLFO != nullptr && g_astruLfoSlots[i].whichVoice == VoiceSe
 8759              		.loc 22 127 39
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 212


 8760 01c0 2E49     		ldr	r1, .L417+16
 8761 01c2 BA6A     		ldr	r2, [r7, #40]
 8762 01c4 1346     		mov	r3, r2
 8763 01c6 9B00     		lsls	r3, r3, #2
 8764 01c8 1344     		add	r3, r3, r2
 8765 01ca 9B00     		lsls	r3, r3, #2
 8766 01cc 0B44     		add	r3, r3, r1
 8767 01ce 1B68     		ldr	r3, [r3]
 8768              		.loc 22 127 17
 8769 01d0 002B     		cmp	r3, #0
 8770 01d2 19D0     		beq	.L413
 8771              		.loc 22 127 79 discriminator 1
 8772 01d4 2949     		ldr	r1, .L417+16
 8773 01d6 BA6A     		ldr	r2, [r7, #40]
 8774 01d8 1346     		mov	r3, r2
 8775 01da 9B00     		lsls	r3, r3, #2
 8776 01dc 1344     		add	r3, r3, r2
 8777 01de 9B00     		lsls	r3, r3, #2
 8778 01e0 0B44     		add	r3, r3, r1
 8779 01e2 0833     		adds	r3, r3, #8
 8780 01e4 1B68     		ldr	r3, [r3]
 8781              		.loc 22 127 57 discriminator 1
 8782 01e6 032B     		cmp	r3, #3
 8783 01e8 0ED1     		bne	.L413
 128:WarpDrive.cpp ****                     //Process the data. 
 129:WarpDrive.cpp ****                     LeadOutputSignal = g_astruLfoSlots[i].ptrLFO->LFOProcess(LeadOutputSignal);
 8784              		.loc 22 129 59
 8785 01ea 2449     		ldr	r1, .L417+16
 8786 01ec BA6A     		ldr	r2, [r7, #40]
 8787 01ee 1346     		mov	r3, r2
 8788 01f0 9B00     		lsls	r3, r3, #2
 8789 01f2 1344     		add	r3, r3, r2
 8790 01f4 9B00     		lsls	r3, r3, #2
 8791 01f6 0B44     		add	r3, r3, r1
 8792 01f8 1B68     		ldr	r3, [r3]
 8793              		.loc 22 129 77
 8794 01fa 97ED0B0A 		vldr.32	s0, [r7, #44]
 8795 01fe 1846     		mov	r0, r3
 8796 0200 FFF7FEFF 		bl	_ZN14clasOscillator10LFOProcessEf
 8797 0204 87ED0B0A 		vstr.32	s0, [r7, #44]
 8798              	.L413:
 125:WarpDrive.cpp ****                 //Check for nulls in order to proceed. 
 8799              		.loc 22 125 13 discriminator 2
 8800 0208 BB6A     		ldr	r3, [r7, #40]
 8801 020a 0133     		adds	r3, r3, #1
 8802 020c BB62     		str	r3, [r7, #40]
 8803 020e D4E7     		b	.L414
 8804              	.L412:
 8805              	.LBE57:
 130:WarpDrive.cpp ****                 }
 131:WarpDrive.cpp ****             }
 132:WarpDrive.cpp **** 
 133:WarpDrive.cpp ****             //Lead output into filter. 
 134:WarpDrive.cpp ****             LeadOutputSignal = objLPFLeadVoice.Process(LeadOutputSignal);
 8806              		.loc 22 134 55 discriminator 2
 8807 0210 97ED0B0A 		vldr.32	s0, [r7, #44]
 8808 0214 1E48     		ldr	r0, .L417+36
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 213


 8809 0216 FFF7FEFF 		bl	_ZN21clasSecondOrderFilter7ProcessEf
 8810 021a 87ED0B0A 		vstr.32	s0, [r7, #44]
 135:WarpDrive.cpp ****                 
 136:WarpDrive.cpp **** 
 137:WarpDrive.cpp ****         //SOUND OUTPUT/////////////////////////////////////////////////////////////////////////
 138:WarpDrive.cpp **** 
 139:WarpDrive.cpp ****             //Combination output of lead and drone voices, normalised to 0-1 and controlled by mast
 140:WarpDrive.cpp ****             float flOutput = (LeadOutputSignal + DroneOutputSignal) * 0.5f * adcPT2; 
 8811              		.loc 22 140 48 discriminator 2
 8812 021e 97ED0B7A 		vldr.32	s14, [r7, #44]
 8813 0222 D7ED0D7A 		vldr.32	s15, [r7, #52]
 8814 0226 77EE277A 		vadd.f32	s15, s14, s15
 8815              		.loc 22 140 69 discriminator 2
 8816 022a B6EE007A 		vmov.f32	s14, #5.0e-1
 8817 022e 27EE877A 		vmul.f32	s14, s15, s14
 8818              		.loc 22 140 76 discriminator 2
 8819 0232 184B     		ldr	r3, .L417+40
 8820 0234 D3ED007A 		vldr.32	s15, [r3]
 8821              		.loc 22 140 19 discriminator 2
 8822 0238 67EE277A 		vmul.f32	s15, s14, s15
 8823 023c C7ED097A 		vstr.32	s15, [r7, #36]
 141:WarpDrive.cpp **** 
 142:WarpDrive.cpp **** 
 143:WarpDrive.cpp ****             out[i] = flOutput; // left out
 8824              		.loc 22 143 18 discriminator 2
 8825 0240 FB6B     		ldr	r3, [r7, #60]
 8826 0242 9B00     		lsls	r3, r3, #2
 8827 0244 BA68     		ldr	r2, [r7, #8]
 8828 0246 1344     		add	r3, r3, r2
 8829              		.loc 22 143 20 discriminator 2
 8830 0248 7A6A     		ldr	r2, [r7, #36]	@ float
 8831 024a 1A60     		str	r2, [r3]	@ float
 144:WarpDrive.cpp ****             out[i + 1] = flOutput; // right out
 8832              		.loc 22 144 22 discriminator 2
 8833 024c FB6B     		ldr	r3, [r7, #60]
 8834 024e 0133     		adds	r3, r3, #1
 8835 0250 9B00     		lsls	r3, r3, #2
 8836 0252 BA68     		ldr	r2, [r7, #8]
 8837 0254 1344     		add	r3, r3, r2
 8838              		.loc 22 144 24 discriminator 2
 8839 0256 7A6A     		ldr	r2, [r7, #36]	@ float
 8840 0258 1A60     		str	r2, [r3]	@ float
 8841              	.LBE54:
  69:WarpDrive.cpp ****     {
 8842              		.loc 22 69 35 discriminator 2
 8843 025a FB6B     		ldr	r3, [r7, #60]
 8844 025c 0233     		adds	r3, r3, #2
 8845 025e FB63     		str	r3, [r7, #60]
  69:WarpDrive.cpp ****     {
 8846              		.loc 22 69 5 discriminator 2
 8847 0260 D6E6     		b	.L415
 8848              	.L416:
 8849              	.LBE53:
 145:WarpDrive.cpp ****     }
 146:WarpDrive.cpp **** }
 8850              		.loc 22 146 1
 8851 0262 00BF     		nop
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 214


 8852 0264 4437     		adds	r7, r7, #68
 8853              		.cfi_def_cfa_offset 12
 8854 0266 BD46     		mov	sp, r7
 8855              		.cfi_def_cfa_register 13
 8856              		@ sp needed
 8857 0268 90BD     		pop	{r4, r7, pc}
 8858              	.L418:
 8859 026a 00BF     		.align	2
 8860              	.L417:
 8861 026c 00000000 		.word	aobjSingleOscillator
 8862 0270 2C000000 		.word	aobjSingleOscillator+44
 8863 0274 58000000 		.word	aobjSingleOscillator+88
 8864 0278 84000000 		.word	aobjSingleOscillator+132
 8865 027c 00000000 		.word	_ZL15g_astruLfoSlots
 8866 0280 00000000 		.word	_ZL11objLPFDrone
 8867 0284 00000000 		.word	objLeadVoice
 8868 0288 00000000 		.word	xGate
 8869 028c 00000000 		.word	objADSR
 8870 0290 00000000 		.word	objLPFLeadVoice
 8871 0294 00000000 		.word	adcPT2
 8872              		.cfi_endproc
 8873              	.LFE4764:
 8875              		.section	.text.main,"ax",%progbits
 8876              		.align	1
 8877              		.global	main
 8878              		.syntax unified
 8879              		.thumb
 8880              		.thumb_func
 8881              		.fpu fpv5-d16
 8883              	main:
 8884              	.LFB4765:
 147:WarpDrive.cpp **** 
 148:WarpDrive.cpp **** //MAIN/////////////////////////////////////////////////////////////
 149:WarpDrive.cpp **** int main(void)
 150:WarpDrive.cpp **** {
 8885              		.loc 22 150 1
 8886              		.cfi_startproc
 8887              		@ args = 0, pretend = 0, frame = 480
 8888              		@ frame_needed = 1, uses_anonymous_args = 0
 8889 0000 B0B5     		push	{r4, r5, r7, lr}
 8890              		.cfi_def_cfa_offset 16
 8891              		.cfi_offset 4, -16
 8892              		.cfi_offset 5, -12
 8893              		.cfi_offset 7, -8
 8894              		.cfi_offset 14, -4
 8895 0002 FAB0     		sub	sp, sp, #488
 8896              		.cfi_def_cfa_offset 504
 8897 0004 02AF     		add	r7, sp, #8
 8898              		.cfi_def_cfa 7, 496
 151:WarpDrive.cpp ****     // initialize seed hardware
 152:WarpDrive.cpp ****     hw.Configure();
 8899              		.loc 22 152 17
 8900 0006 D448     		ldr	r0, .L439
 8901 0008 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 153:WarpDrive.cpp ****     hw.Init();
 8902              		.loc 22 153 12
 8903 000c 0021     		movs	r1, #0
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 215


 8904 000e D248     		ldr	r0, .L439
 8905 0010 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 154:WarpDrive.cpp ****     hw.SetAudioBlockSize(4);
 8906              		.loc 22 154 25
 8907 0014 0421     		movs	r1, #4
 8908 0016 D048     		ldr	r0, .L439
 8909 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 155:WarpDrive.cpp ****     float sample_rate = hw.AudioSampleRate();
 8910              		.loc 22 155 43
 8911 001c CE48     		ldr	r0, .L439
 8912 001e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 8913 0022 87ED770A 		vstr.32	s0, [r7, #476]
 156:WarpDrive.cpp ****     // hw.StartLog(true); //For the serial port. 
 157:WarpDrive.cpp ****     fxEncoderTimerInit();
 8914              		.loc 22 157 23
 8915 0026 FFF7FEFF 		bl	_Z18fxEncoderTimerInitv
 158:WarpDrive.cpp ****     fxResetTimerInit();
 8916              		.loc 22 158 21
 8917 002a FFF7FEFF 		bl	_Z16fxResetTimerInitv
 159:WarpDrive.cpp ****     fxResetMenuTimerInit();
 8918              		.loc 22 159 25
 8919 002e FFF7FEFF 		bl	_Z20fxResetMenuTimerInitv
 160:WarpDrive.cpp ****     objADSR.Init(sample_rate);
 8920              		.loc 22 160 17
 8921 0032 97ED770A 		vldr.32	s0, [r7, #476]
 8922 0036 C948     		ldr	r0, .L439+4
 8923 0038 FFF7FEFF 		bl	_ZN8clasADSR4InitEf
 161:WarpDrive.cpp **** 
 162:WarpDrive.cpp **** 
 163:WarpDrive.cpp ****     objTouch.Init(hw);
 8924              		.loc 22 163 18
 8925 003c 07F5F073 		add	r3, r7, #480
 8926 0040 A3F59473 		sub	r3, r3, #296
 8927 0044 C44A     		ldr	r2, .L439
 8928 0046 1C46     		mov	r4, r3
 8929 0048 1546     		mov	r5, r2
 8930 004a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8931 004c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8932 004e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8933 0050 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8934 0052 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8935 0054 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8936 0056 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 8937 005a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 8938 005e 07F1B803 		add	r3, r7, #184
 8939 0062 1946     		mov	r1, r3
 8940 0064 BE48     		ldr	r0, .L439+8
 8941 0066 FFF7FEFF 		bl	_ZN12clasCapTouch4InitEN5daisy9DaisySeedE
 8942 006a 07F1B803 		add	r3, r7, #184
 8943 006e 1846     		mov	r0, r3
 8944 0070 FFF7FEFF 		bl	_ZN5daisy9DaisySeedD1Ev
 164:WarpDrive.cpp ****     InitLFOAssignments();
 8945              		.loc 22 164 23
 8946 0074 FFF7FEFF 		bl	_Z18InitLFOAssignmentsv
 165:WarpDrive.cpp **** 
 166:WarpDrive.cpp ****     //Controls Setup
 167:WarpDrive.cpp ****     fxControlInit();
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 216


 8947              		.loc 22 167 18
 8948 0078 FFF7FEFF 		bl	_Z13fxControlInitv
 168:WarpDrive.cpp **** 
 169:WarpDrive.cpp ****     //Buttons
 170:WarpDrive.cpp ****     Btn1.Init(hw.GetPin(8), 1000, daisy::Switch::TYPE_MOMENTARY, daisy::Switch::POLARITY_INVERTED, 
 8949              		.loc 22 170 14
 8950 007c 0820     		movs	r0, #8
 8951 007e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 8952 0082 0346     		mov	r3, r0	@ movhi
 8953 0084 A7F8F830 		strh	r3, [r7, #248]	@ movhi
 8954 0088 0023     		movs	r3, #0
 8955 008a 0093     		str	r3, [sp]
 8956 008c 0123     		movs	r3, #1
 8957 008e 0122     		movs	r2, #1
 8958 0090 9FEDB40A 		vldr.32	s0, .L439+12
 8959 0094 D7F8F810 		ldr	r1, [r7, #248]
 8960 0098 B348     		ldr	r0, .L439+16
 8961 009a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 171:WarpDrive.cpp ****     Btn2.Init(hw.GetPin(9), 1000, daisy::Switch::TYPE_MOMENTARY, daisy::Switch::POLARITY_INVERTED, 
 8962              		.loc 22 171 14
 8963 009e 0920     		movs	r0, #9
 8964 00a0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 8965 00a4 0346     		mov	r3, r0	@ movhi
 8966 00a6 A7F8FC30 		strh	r3, [r7, #252]	@ movhi
 8967 00aa 0023     		movs	r3, #0
 8968 00ac 0093     		str	r3, [sp]
 8969 00ae 0123     		movs	r3, #1
 8970 00b0 0122     		movs	r2, #1
 8971 00b2 9FEDAC0A 		vldr.32	s0, .L439+12
 8972 00b6 D7F8FC10 		ldr	r1, [r7, #252]
 8973 00ba AC48     		ldr	r0, .L439+20
 8974 00bc FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 172:WarpDrive.cpp **** 
 173:WarpDrive.cpp ****     // Btn1.Init(hw.GetPin(8), 1000);
 174:WarpDrive.cpp ****     // Btn2.Init(hw.GetPin(9), 1000);
 175:WarpDrive.cpp **** 
 176:WarpDrive.cpp ****     // Btn2.Init(hw.GetPin(10), 1000);
 177:WarpDrive.cpp ****     
 178:WarpDrive.cpp ****     // Define ADC channels
 179:WarpDrive.cpp ****     AdcChannelConfig adcConfig[10];
 180:WarpDrive.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15)); //PT1_Effect3 //Drone Out
 8975              		.loc 22 180 28
 8976 00c0 0F20     		movs	r0, #15
 8977 00c2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 8978 00c6 0346     		mov	r3, r0	@ movhi
 8979 00c8 A7F80031 		strh	r3, [r7, #256]	@ movhi
 8980 00cc 3B1D     		adds	r3, r7, #4
 8981 00ce 0222     		movs	r2, #2
 8982 00d0 D7F80011 		ldr	r1, [r7, #256]
 8983 00d4 1846     		mov	r0, r3
 8984 00d6 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 181:WarpDrive.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16)); //PT2_Effect1 //Lead Out
 8985              		.loc 22 181 28
 8986 00da 1020     		movs	r0, #16
 8987 00dc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 8988 00e0 0346     		mov	r3, r0	@ movhi
 8989 00e2 A7F80431 		strh	r3, [r7, #260]	@ movhi
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 217


 8990 00e6 3B1D     		adds	r3, r7, #4
 8991 00e8 1233     		adds	r3, r3, #18
 8992 00ea 0222     		movs	r2, #2
 8993 00ec D7F80411 		ldr	r1, [r7, #260]
 8994 00f0 1846     		mov	r0, r3
 8995 00f2 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 182:WarpDrive.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17)); //PT3_Filter1 //Drone filter
 8996              		.loc 22 182 28
 8997 00f6 1120     		movs	r0, #17
 8998 00f8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 8999 00fc 0346     		mov	r3, r0	@ movhi
 9000 00fe A7F80831 		strh	r3, [r7, #264]	@ movhi
 9001 0102 3B1D     		adds	r3, r7, #4
 9002 0104 2433     		adds	r3, r3, #36
 9003 0106 0222     		movs	r2, #2
 9004 0108 D7F80811 		ldr	r1, [r7, #264]
 9005 010c 1846     		mov	r0, r3
 9006 010e FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 183:WarpDrive.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18)); //PT4_Filter2 //Lead filter
 9007              		.loc 22 183 28
 9008 0112 1220     		movs	r0, #18
 9009 0114 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 9010 0118 0346     		mov	r3, r0	@ movhi
 9011 011a A7F80C31 		strh	r3, [r7, #268]	@ movhi
 9012 011e 3B1D     		adds	r3, r7, #4
 9013 0120 3633     		adds	r3, r3, #54
 9014 0122 0222     		movs	r2, #2
 9015 0124 D7F80C11 		ldr	r1, [r7, #268]
 9016 0128 1846     		mov	r0, r3
 9017 012a FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 184:WarpDrive.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19)); //PT5_OSC_A_Amp
 9018              		.loc 22 184 28
 9019 012e 1320     		movs	r0, #19
 9020 0130 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 9021 0134 0346     		mov	r3, r0	@ movhi
 9022 0136 A7F81031 		strh	r3, [r7, #272]	@ movhi
 9023 013a 3B1D     		adds	r3, r7, #4
 9024 013c 4833     		adds	r3, r3, #72
 9025 013e 0222     		movs	r2, #2
 9026 0140 D7F81011 		ldr	r1, [r7, #272]
 9027 0144 1846     		mov	r0, r3
 9028 0146 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 185:WarpDrive.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20)); //PT6_OSC_B_Amp
 9029              		.loc 22 185 28
 9030 014a 1420     		movs	r0, #20
 9031 014c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 9032 0150 0346     		mov	r3, r0	@ movhi
 9033 0152 A7F81431 		strh	r3, [r7, #276]	@ movhi
 9034 0156 3B1D     		adds	r3, r7, #4
 9035 0158 5A33     		adds	r3, r3, #90
 9036 015a 0222     		movs	r2, #2
 9037 015c D7F81411 		ldr	r1, [r7, #276]
 9038 0160 1846     		mov	r0, r3
 9039 0162 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 186:WarpDrive.cpp ****     adcConfig[6].InitSingle(hw.GetPin(21)); //PT7_OSC_C_Amp
 9040              		.loc 22 186 28
 9041 0166 1520     		movs	r0, #21
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 218


 9042 0168 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 9043 016c 0346     		mov	r3, r0	@ movhi
 9044 016e A7F81831 		strh	r3, [r7, #280]	@ movhi
 9045 0172 3B1D     		adds	r3, r7, #4
 9046 0174 6C33     		adds	r3, r3, #108
 9047 0176 0222     		movs	r2, #2
 9048 0178 D7F81811 		ldr	r1, [r7, #280]
 9049 017c 1846     		mov	r0, r3
 9050 017e FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 187:WarpDrive.cpp ****     adcConfig[7].InitSingle(hw.GetPin(22)); //PT8_OSC_D_Amp
 9051              		.loc 22 187 28
 9052 0182 1620     		movs	r0, #22
 9053 0184 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 9054 0188 0346     		mov	r3, r0	@ movhi
 9055 018a A7F81C31 		strh	r3, [r7, #284]	@ movhi
 9056 018e 3B1D     		adds	r3, r7, #4
 9057 0190 7E33     		adds	r3, r3, #126
 9058 0192 0222     		movs	r2, #2
 9059 0194 D7F81C11 		ldr	r1, [r7, #284]
 9060 0198 1846     		mov	r0, r3
 9061 019a FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 188:WarpDrive.cpp ****     adcConfig[8].InitSingle(hw.GetPin(23)); //PT9_RealImag //Real/Imag
 9062              		.loc 22 188 28
 9063 019e 1720     		movs	r0, #23
 9064 01a0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 9065 01a4 0346     		mov	r3, r0	@ movhi
 9066 01a6 A7F82031 		strh	r3, [r7, #288]	@ movhi
 9067 01aa 3B1D     		adds	r3, r7, #4
 9068 01ac 9033     		adds	r3, r3, #144
 9069 01ae 0222     		movs	r2, #2
 9070 01b0 D7F82011 		ldr	r1, [r7, #288]
 9071 01b4 1846     		mov	r0, r3
 9072 01b6 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 189:WarpDrive.cpp ****     adcConfig[9].InitSingle(hw.GetPin(24)); //PT10_Effect4 //Lead Resonance
 9073              		.loc 22 189 28
 9074 01ba 1820     		movs	r0, #24
 9075 01bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 9076 01c0 0346     		mov	r3, r0	@ movhi
 9077 01c2 A7F82431 		strh	r3, [r7, #292]	@ movhi
 9078 01c6 3B1D     		adds	r3, r7, #4
 9079 01c8 A233     		adds	r3, r3, #162
 9080 01ca 0222     		movs	r2, #2
 9081 01cc D7F82411 		ldr	r1, [r7, #292]
 9082 01d0 1846     		mov	r0, r3
 9083 01d2 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 190:WarpDrive.cpp **** 
 191:WarpDrive.cpp **** 
 192:WarpDrive.cpp ****     // Initialize ADC with all channels
 193:WarpDrive.cpp ****     hw.adc.Init(adcConfig, 10);
 9084              		.loc 22 193 16
 9085 01d6 391D     		adds	r1, r7, #4
 9086 01d8 0423     		movs	r3, #4
 9087 01da 0A22     		movs	r2, #10
 9088 01dc 6448     		ldr	r0, .L439+24
 9089 01de FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 194:WarpDrive.cpp ****     hw.adc.Start();
 9090              		.loc 22 194 17
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 219


 9091 01e2 6348     		ldr	r0, .L439+24
 9092 01e4 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 195:WarpDrive.cpp **** 
 196:WarpDrive.cpp ****     fxDroneVoiceSetup(sample_rate);
 9093              		.loc 22 196 22
 9094 01e8 97ED770A 		vldr.32	s0, [r7, #476]
 9095 01ec FFF7FEFF 		bl	_Z17fxDroneVoiceSetupf
 197:WarpDrive.cpp ****     objLeadVoice.Init(sample_rate);
 9096              		.loc 22 197 22
 9097 01f0 97ED770A 		vldr.32	s0, [r7, #476]
 9098 01f4 5F48     		ldr	r0, .L439+28
 9099 01f6 FFF7FEFF 		bl	_ZN20clasEulersOscillatorILi16EE4InitEf
 198:WarpDrive.cpp **** 
 199:WarpDrive.cpp ****     objLFOFast.Init(sample_rate, OSC_LFO_FAST);
 9100              		.loc 22 199 20
 9101 01fa 0221     		movs	r1, #2
 9102 01fc 97ED770A 		vldr.32	s0, [r7, #476]
 9103 0200 5D48     		ldr	r0, .L439+32
 9104 0202 FFF7FEFF 		bl	_ZN14clasOscillator4InitEf8OSC_TYPE
 200:WarpDrive.cpp ****     objLFOSlow.Init(sample_rate, OSC_LFO_SLOW);
 9105              		.loc 22 200 20
 9106 0206 0121     		movs	r1, #1
 9107 0208 97ED770A 		vldr.32	s0, [r7, #476]
 9108 020c 5B48     		ldr	r0, .L439+36
 9109 020e FFF7FEFF 		bl	_ZN14clasOscillator4InitEf8OSC_TYPE
 201:WarpDrive.cpp **** 
 202:WarpDrive.cpp **** 
 203:WarpDrive.cpp ****     //Low Pass Filter for output. 
 204:WarpDrive.cpp ****     objFilter1.Init();
 9110              		.loc 22 204 20
 9111 0212 5B48     		ldr	r0, .L439+40
 9112 0214 FFF7FEFF 		bl	_ZN7daisysp7OnePole4InitEv
 205:WarpDrive.cpp ****     objFilter1.SetFilterMode(objFilter1.FILTER_MODE_LOW_PASS);
 9113              		.loc 22 205 29
 9114 0218 0021     		movs	r1, #0
 9115 021a 5948     		ldr	r0, .L439+40
 9116 021c FFF7FEFF 		bl	_ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE
 206:WarpDrive.cpp ****     objFilter1.SetFrequency(10);
 9117              		.loc 22 206 28
 9118 0220 B2EE040A 		vmov.f32	s0, #1.0e+1
 9119 0224 5648     		ldr	r0, .L439+40
 9120 0226 FFF7FEFF 		bl	_ZN7daisysp7OnePole12SetFrequencyEf
 207:WarpDrive.cpp ****     // objFilter2.Init();
 208:WarpDrive.cpp ****     // objFilter2.SetFilterMode(objFilter2.FILTER_MODE_HIGH_PASS);
 209:WarpDrive.cpp **** 
 210:WarpDrive.cpp ****     objLPFDrone.Init(sample_rate);
 9121              		.loc 22 210 21
 9122 022a 97ED770A 		vldr.32	s0, [r7, #476]
 9123 022e 5548     		ldr	r0, .L439+44
 9124 0230 FFF7FEFF 		bl	_ZN21clasSecondOrderFilter4InitEf
 211:WarpDrive.cpp ****     objLPFLeadVoice.Init(sample_rate);
 9125              		.loc 22 211 25
 9126 0234 97ED770A 		vldr.32	s0, [r7, #476]
 9127 0238 5348     		ldr	r0, .L439+48
 9128 023a FFF7FEFF 		bl	_ZN21clasSecondOrderFilter4InitEf
 212:WarpDrive.cpp ****     objLPFLeadVoice.setFreq(20000);
 9129              		.loc 22 212 28
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 220


 9130 023e 9FED530A 		vldr.32	s0, .L439+52
 9131 0242 5148     		ldr	r0, .L439+48
 9132 0244 FFF7FEFF 		bl	_ZN21clasSecondOrderFilter7setFreqEf
 213:WarpDrive.cpp **** 
 214:WarpDrive.cpp ****     hw.StartAudio(AudioCallback);
 9133              		.loc 22 214 18
 9134 0248 5149     		ldr	r1, .L439+56
 9135 024a 4348     		ldr	r0, .L439
 9136 024c FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKfPfjE
 9137              	.L438:
 9138              	.LBB58:
 215:WarpDrive.cpp **** 
 216:WarpDrive.cpp ****     while(1) {
 217:WarpDrive.cpp **** 
 218:WarpDrive.cpp ****         // // System::Delay(1);
 219:WarpDrive.cpp ****         // // fxEncoderTest();
 220:WarpDrive.cpp **** 
 221:WarpDrive.cpp ****         // //Touch menu system
 222:WarpDrive.cpp ****         // //Debouncing 
 223:WarpDrive.cpp **** 
 224:WarpDrive.cpp ****         objEncoderA.Debounce();
 9139              		.loc 22 224 29
 9140 0250 5048     		ldr	r0, .L439+60
 9141 0252 FFF7FEFF 		bl	_ZN5daisy11clasEncoder8DebounceEv
 225:WarpDrive.cpp ****         objEncoderB.Debounce();
 9142              		.loc 22 225 29
 9143 0256 5048     		ldr	r0, .L439+64
 9144 0258 FFF7FEFF 		bl	_ZN5daisy11clasEncoder8DebounceEv
 226:WarpDrive.cpp ****         objEncoderC.Debounce();
 9145              		.loc 22 226 29
 9146 025c 4F48     		ldr	r0, .L439+68
 9147 025e FFF7FEFF 		bl	_ZN5daisy11clasEncoder8DebounceEv
 227:WarpDrive.cpp ****         objEncoderD.Debounce();
 9148              		.loc 22 227 29
 9149 0262 4F48     		ldr	r0, .L439+72
 9150 0264 FFF7FEFF 		bl	_ZN5daisy11clasEncoder8DebounceEv
 228:WarpDrive.cpp ****         Btn1.Debounce();
 9151              		.loc 22 228 22
 9152 0268 3F48     		ldr	r0, .L439+16
 9153 026a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 229:WarpDrive.cpp ****         Btn2.Debounce();
 9154              		.loc 22 229 22
 9155 026e 3F48     		ldr	r0, .L439+20
 9156 0270 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 9157              	.LBB59:
 230:WarpDrive.cpp **** 
 231:WarpDrive.cpp **** 
 232:WarpDrive.cpp ****         if (Btn1.Pressed() && uiTouchKeyPressed != 255){ 
 9158              		.loc 22 232 25
 9159 0274 3C48     		ldr	r0, .L439+16
 9160 0276 FFF7FEFF 		bl	_ZNK5daisy6Switch7PressedEv
 9161 027a 0346     		mov	r3, r0
 9162              		.loc 22 232 28
 9163 027c 002B     		cmp	r3, #0
 9164 027e 05D0     		beq	.L420
 9165              		.loc 22 232 49 discriminator 1
 9166 0280 484B     		ldr	r3, .L439+76
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 221


 9167 0282 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9168              		.loc 22 232 28 discriminator 1
 9169 0284 FF2B     		cmp	r3, #255
 9170 0286 01D0     		beq	.L420
 9171              		.loc 22 232 28 is_stmt 0 discriminator 3
 9172 0288 0123     		movs	r3, #1
 9173 028a 00E0     		b	.L421
 9174              	.L420:
 9175              		.loc 22 232 28 discriminator 4
 9176 028c 0023     		movs	r3, #0
 9177              	.L421:
 9178              		.loc 22 232 9 is_stmt 1 discriminator 6
 9179 028e 002B     		cmp	r3, #0
 9180 0290 05D0     		beq	.L422
 233:WarpDrive.cpp ****                 fxModeMenu(uiTouchKeyPressed); 
 9181              		.loc 22 233 27
 9182 0292 444B     		ldr	r3, .L439+76
 9183 0294 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9184 0296 1846     		mov	r0, r3
 9185 0298 FFF7FEFF 		bl	_Z10fxModeMenui
 9186 029c 81E1     		b	.L423
 9187              	.L422:
 9188              	.LBB60:
 9189              	.LBB61:
 234:WarpDrive.cpp ****         } else {
 235:WarpDrive.cpp **** 
 236:WarpDrive.cpp ****             switch(eWhileState){
 9190              		.loc 22 236 13
 9191 029e 424B     		ldr	r3, .L439+80
 9192 02a0 1B68     		ldr	r3, [r3]
 9193 02a2 0B2B     		cmp	r3, #11
 9194 02a4 00F27D81 		bhi	.L423
 9195 02a8 01A2     		adr	r2, .L425
 9196 02aa 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9197 02ae 00BF     		.p2align 2
 9198              	.L425:
 9199 02b0 E1020000 		.word	.L433+1
 9200 02b4 4F050000 		.word	.L432+1
 9201 02b8 BD030000 		.word	.L431+1
 9202 02bc 91050000 		.word	.L430+1
 9203 02c0 79040000 		.word	.L429+1
 9204 02c4 9B040000 		.word	.L428+1
 9205 02c8 A3050000 		.word	.L423+1
 9206 02cc 01050000 		.word	.L427+1
 9207 02d0 A3050000 		.word	.L423+1
 9208 02d4 23050000 		.word	.L426+1
 9209 02d8 A3050000 		.word	.L423+1
 9210 02dc 45050000 		.word	.L424+1
 9211              		.p2align 1
 9212              	.L433:
 9213              	.LBB62:
 237:WarpDrive.cpp ****                 case T_NORMAL:
 238:WarpDrive.cpp **** 
 239:WarpDrive.cpp ****                     //Reset the Ratios to 1;
 240:WarpDrive.cpp ****                     aobjSingleOscillator[1].SetRatio(1);
 9214              		.loc 22 240 53
 9215 02e0 0121     		movs	r1, #1
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 222


 9216 02e2 3248     		ldr	r0, .L439+84
 9217 02e4 FFF7FEFF 		bl	_ZN14clasOscillator8SetRatioEh
 241:WarpDrive.cpp ****                     aobjSingleOscillator[2].SetRatio(1);
 9218              		.loc 22 241 53
 9219 02e8 0121     		movs	r1, #1
 9220 02ea 3148     		ldr	r0, .L439+88
 9221 02ec FFF7FEFF 		bl	_ZN14clasOscillator8SetRatioEh
 242:WarpDrive.cpp ****                     aobjSingleOscillator[3].SetRatio(1);
 9222              		.loc 22 242 53
 9223 02f0 0121     		movs	r1, #1
 9224 02f2 3048     		ldr	r0, .L439+92
 9225 02f4 FFF7FEFF 		bl	_ZN14clasOscillator8SetRatioEh
 243:WarpDrive.cpp ****                     if (Btn2.Pressed()){ 
 9226              		.loc 22 243 37
 9227 02f8 1C48     		ldr	r0, .L439+20
 9228 02fa FFF7FEFF 		bl	_ZNK5daisy6Switch7PressedEv
 9229 02fe 0346     		mov	r3, r0
 9230              		.loc 22 243 21
 9231 0300 002B     		cmp	r3, #0
 9232 0302 14D0     		beq	.L434
 244:WarpDrive.cpp ****                         //Micro Frequency change of oscillators. 
 245:WarpDrive.cpp ****                         fxFrequencyMicroInc(aobjSingleOscillator[0], objEncoderA, 0);
 9233              		.loc 22 245 44
 9234 0304 0022     		movs	r2, #0
 9235 0306 2349     		ldr	r1, .L439+60
 9236 0308 2B48     		ldr	r0, .L439+96
 9237 030a FFF7FEFF 		bl	_Z19fxFrequencyMicroIncR14clasOscillatorRN5daisy11clasEncoderEi
 246:WarpDrive.cpp ****                         fxFrequencyMicroInc(aobjSingleOscillator[1], objEncoderB, 1);
 9238              		.loc 22 246 44
 9239 030e 0122     		movs	r2, #1
 9240 0310 2149     		ldr	r1, .L439+64
 9241 0312 2648     		ldr	r0, .L439+84
 9242 0314 FFF7FEFF 		bl	_Z19fxFrequencyMicroIncR14clasOscillatorRN5daisy11clasEncoderEi
 247:WarpDrive.cpp ****                         fxFrequencyMicroInc(aobjSingleOscillator[2], objEncoderC, 2);
 9243              		.loc 22 247 44
 9244 0318 0222     		movs	r2, #2
 9245 031a 2049     		ldr	r1, .L439+68
 9246 031c 2448     		ldr	r0, .L439+88
 9247 031e FFF7FEFF 		bl	_Z19fxFrequencyMicroIncR14clasOscillatorRN5daisy11clasEncoderEi
 248:WarpDrive.cpp ****                         fxFrequencyMicroInc(aobjSingleOscillator[3], objEncoderD, 3);
 9248              		.loc 22 248 44
 9249 0322 0322     		movs	r2, #3
 9250 0324 1E49     		ldr	r1, .L439+72
 9251 0326 2348     		ldr	r0, .L439+92
 9252 0328 FFF7FEFF 		bl	_Z19fxFrequencyMicroIncR14clasOscillatorRN5daisy11clasEncoderEi
 249:WarpDrive.cpp ****                     } else {
 250:WarpDrive.cpp ****                         //Normal frequency change of occillators. 
 251:WarpDrive.cpp ****                         fxFrequencyInc(aobjSingleOscillator[0], objEncoderA, 0);
 252:WarpDrive.cpp ****                         fxFrequencyInc(aobjSingleOscillator[1], objEncoderB, 1);
 253:WarpDrive.cpp ****                         fxFrequencyInc(aobjSingleOscillator[2], objEncoderC, 2);
 254:WarpDrive.cpp ****                         fxFrequencyInc(aobjSingleOscillator[3], objEncoderD, 3);
 255:WarpDrive.cpp ****                     }
 256:WarpDrive.cpp **** 
 257:WarpDrive.cpp **** 
 258:WarpDrive.cpp ****                     break;
 9253              		.loc 22 258 21
 9254 032c 39E1     		b	.L423
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 223


 9255              	.L434:
 251:WarpDrive.cpp ****                         fxFrequencyInc(aobjSingleOscillator[1], objEncoderB, 1);
 9256              		.loc 22 251 39
 9257 032e 0022     		movs	r2, #0
 9258 0330 1849     		ldr	r1, .L439+60
 9259 0332 2148     		ldr	r0, .L439+96
 9260 0334 FFF7FEFF 		bl	_Z14fxFrequencyIncR14clasOscillatorRN5daisy11clasEncoderEi
 252:WarpDrive.cpp ****                         fxFrequencyInc(aobjSingleOscillator[2], objEncoderC, 2);
 9261              		.loc 22 252 39
 9262 0338 0122     		movs	r2, #1
 9263 033a 1749     		ldr	r1, .L439+64
 9264 033c 1B48     		ldr	r0, .L439+84
 9265 033e FFF7FEFF 		bl	_Z14fxFrequencyIncR14clasOscillatorRN5daisy11clasEncoderEi
 253:WarpDrive.cpp ****                         fxFrequencyInc(aobjSingleOscillator[3], objEncoderD, 3);
 9266              		.loc 22 253 39
 9267 0342 0222     		movs	r2, #2
 9268 0344 1549     		ldr	r1, .L439+68
 9269 0346 1A48     		ldr	r0, .L439+88
 9270 0348 FFF7FEFF 		bl	_Z14fxFrequencyIncR14clasOscillatorRN5daisy11clasEncoderEi
 254:WarpDrive.cpp ****                     }
 9271              		.loc 22 254 39
 9272 034c 0322     		movs	r2, #3
 9273 034e 1449     		ldr	r1, .L439+72
 9274 0350 1848     		ldr	r0, .L439+92
 9275 0352 FFF7FEFF 		bl	_Z14fxFrequencyIncR14clasOscillatorRN5daisy11clasEncoderEi
 9276              		.loc 22 258 21
 9277 0356 24E1     		b	.L423
 9278              	.L440:
 9279              		.align	2
 9280              	.L439:
 9281 0358 00000000 		.word	hw
 9282 035c 00000000 		.word	objADSR
 9283 0360 00000000 		.word	objTouch
 9284 0364 00007A44 		.word	1148846080
 9285 0368 00000000 		.word	Btn1
 9286 036c 00000000 		.word	Btn2
 9287 0370 18000000 		.word	hw+24
 9288 0374 00000000 		.word	objLeadVoice
 9289 0378 00000000 		.word	objLFOFast
 9290 037c 00000000 		.word	objLFOSlow
 9291 0380 00000000 		.word	_ZL10objFilter1
 9292 0384 00000000 		.word	_ZL11objLPFDrone
 9293 0388 00000000 		.word	objLPFLeadVoice
 9294 038c 00409C46 		.word	1184645120
 9295 0390 00000000 		.word	_ZL13AudioCallbackPKfPfj
 9296 0394 00000000 		.word	objEncoderA
 9297 0398 00000000 		.word	objEncoderB
 9298 039c 00000000 		.word	objEncoderC
 9299 03a0 00000000 		.word	objEncoderD
 9300 03a4 00000000 		.word	uiTouchKeyPressed
 9301 03a8 00000000 		.word	eWhileState
 9302 03ac 2C000000 		.word	aobjSingleOscillator+44
 9303 03b0 58000000 		.word	aobjSingleOscillator+88
 9304 03b4 84000000 		.word	aobjSingleOscillator+132
 9305 03b8 00000000 		.word	aobjSingleOscillator
 9306              	.L431:
 259:WarpDrive.cpp ****                 case T_ADSR:
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 224


 260:WarpDrive.cpp **** 
 261:WarpDrive.cpp ****                     fxADSR(objEncoderA, objEncoderB, objEncoderC, objEncoderD, Btn1);
 9307              		.loc 22 261 27
 9308 03bc 684B     		ldr	r3, .L441
 9309 03be 07F59474 		add	r4, r7, #296
 9310 03c2 1D46     		mov	r5, r3
 9311 03c4 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 9312 03c6 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 9313 03c8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 9314 03ca 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 9315 03cc 95E80300 		ldm	r5, {r0, r1}
 9316 03d0 84E80300 		stm	r4, {r0, r1}
 9317 03d4 634B     		ldr	r3, .L441+4
 9318 03d6 07F5A874 		add	r4, r7, #336
 9319 03da 1D46     		mov	r5, r3
 9320 03dc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 9321 03de 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 9322 03e0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 9323 03e2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 9324 03e4 95E80300 		ldm	r5, {r0, r1}
 9325 03e8 84E80300 		stm	r4, {r0, r1}
 9326 03ec 5E4B     		ldr	r3, .L441+8
 9327 03ee 07F5BC74 		add	r4, r7, #376
 9328 03f2 1D46     		mov	r5, r3
 9329 03f4 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 9330 03f6 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 9331 03f8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 9332 03fa 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 9333 03fc 95E80300 		ldm	r5, {r0, r1}
 9334 0400 84E80300 		stm	r4, {r0, r1}
 9335 0404 594B     		ldr	r3, .L441+12
 9336 0406 07F5D074 		add	r4, r7, #416
 9337 040a 1D46     		mov	r5, r3
 9338 040c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 9339 040e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 9340 0410 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 9341 0412 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 9342 0414 95E80300 		ldm	r5, {r0, r1}
 9343 0418 84E80300 		stm	r4, {r0, r1}
 9344 041c 544B     		ldr	r3, .L441+16
 9345 041e 07F5E474 		add	r4, r7, #456
 9346 0422 0FCB     		ldm	r3, {r0, r1, r2, r3}
 9347 0424 84E80F00 		stm	r4, {r0, r1, r2, r3}
 9348 0428 07F5D074 		add	r4, r7, #416
 9349 042c 07F5BC72 		add	r2, r7, #376
 9350 0430 07F5A871 		add	r1, r7, #336
 9351 0434 07F59470 		add	r0, r7, #296
 9352 0438 07F5E473 		add	r3, r7, #456
 9353 043c 0093     		str	r3, [sp]
 9354 043e 2346     		mov	r3, r4
 9355 0440 FFF7FEFF 		bl	_Z6fxADSRN5daisy11clasEncoderES0_S0_S0_NS_6SwitchE
 9356 0444 07F5E473 		add	r3, r7, #456
 9357 0448 1846     		mov	r0, r3
 9358 044a FFF7FEFF 		bl	_ZN5daisy6SwitchD1Ev
 9359 044e 07F5D073 		add	r3, r7, #416
 9360 0452 1846     		mov	r0, r3
 9361 0454 FFF7FEFF 		bl	_ZN5daisy11clasEncoderD1Ev
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 225


 9362 0458 07F5BC73 		add	r3, r7, #376
 9363 045c 1846     		mov	r0, r3
 9364 045e FFF7FEFF 		bl	_ZN5daisy11clasEncoderD1Ev
 9365 0462 07F5A873 		add	r3, r7, #336
 9366 0466 1846     		mov	r0, r3
 9367 0468 FFF7FEFF 		bl	_ZN5daisy11clasEncoderD1Ev
 9368 046c 07F59473 		add	r3, r7, #296
 9369 0470 1846     		mov	r0, r3
 9370 0472 FFF7FEFF 		bl	_ZN5daisy11clasEncoderD1Ev
 262:WarpDrive.cpp **** 
 263:WarpDrive.cpp ****                     break;
 9371              		.loc 22 263 21
 9372 0476 94E0     		b	.L423
 9373              	.L429:
 264:WarpDrive.cpp **** 
 265:WarpDrive.cpp ****                 case T_D_AMP:
 266:WarpDrive.cpp **** 
 267:WarpDrive.cpp ****                     IncOscillatorAmplitude(aobjSingleOscillator[0], objEncoderA);
 9374              		.loc 22 267 43
 9375 0478 3949     		ldr	r1, .L441
 9376 047a 3E48     		ldr	r0, .L441+20
 9377 047c FFF7FEFF 		bl	_Z22IncOscillatorAmplitudeR14clasOscillatorRN5daisy11clasEncoderE
 268:WarpDrive.cpp ****                     IncOscillatorAmplitude(aobjSingleOscillator[1], objEncoderB);
 9378              		.loc 22 268 43
 9379 0480 3849     		ldr	r1, .L441+4
 9380 0482 3D48     		ldr	r0, .L441+24
 9381 0484 FFF7FEFF 		bl	_Z22IncOscillatorAmplitudeR14clasOscillatorRN5daisy11clasEncoderE
 269:WarpDrive.cpp ****                     IncOscillatorAmplitude(aobjSingleOscillator[2], objEncoderC);
 9382              		.loc 22 269 43
 9383 0488 3749     		ldr	r1, .L441+8
 9384 048a 3C48     		ldr	r0, .L441+28
 9385 048c FFF7FEFF 		bl	_Z22IncOscillatorAmplitudeR14clasOscillatorRN5daisy11clasEncoderE
 270:WarpDrive.cpp ****                     IncOscillatorAmplitude(aobjSingleOscillator[3], objEncoderD);
 9386              		.loc 22 270 43
 9387 0490 3649     		ldr	r1, .L441+12
 9388 0492 3B48     		ldr	r0, .L441+32
 9389 0494 FFF7FEFF 		bl	_Z22IncOscillatorAmplitudeR14clasOscillatorRN5daisy11clasEncoderE
 271:WarpDrive.cpp ****                     break;
 9390              		.loc 22 271 21
 9391 0498 83E0     		b	.L423
 9392              	.L428:
 9393              	.LBB63:
 272:WarpDrive.cpp **** 
 273:WarpDrive.cpp ****                 case T_RATIO:
 274:WarpDrive.cpp **** 
 275:WarpDrive.cpp ****                     if (Btn2.Pressed()){ 
 9394              		.loc 22 275 37
 9395 049a 3A48     		ldr	r0, .L441+36
 9396 049c FFF7FEFF 		bl	_ZNK5daisy6Switch7PressedEv
 9397 04a0 0346     		mov	r3, r0
 9398              		.loc 22 275 21
 9399 04a2 002B     		cmp	r3, #0
 9400 04a4 19D0     		beq	.L436
 9401              	.LBB64:
 276:WarpDrive.cpp ****                         fxFrequencyMicroInc(aobjSingleOscillator[0], objEncoderA, 0);
 9402              		.loc 22 276 44
 9403 04a6 0022     		movs	r2, #0
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 226


 9404 04a8 2D49     		ldr	r1, .L441
 9405 04aa 3248     		ldr	r0, .L441+20
 9406 04ac FFF7FEFF 		bl	_Z19fxFrequencyMicroIncR14clasOscillatorRN5daisy11clasEncoderEi
 277:WarpDrive.cpp ****                         float flCarrierFrequency = aobjSingleOscillator[0].GetFreq();
 9407              		.loc 22 277 83
 9408 04b0 3048     		ldr	r0, .L441+20
 9409 04b2 FFF7FEFF 		bl	_ZN14clasOscillator7GetFreqEv
 9410 04b6 87ED760A 		vstr.32	s0, [r7, #472]
 278:WarpDrive.cpp ****                         aobjSingleOscillator[1].SetFreq(flCarrierFrequency);
 9411              		.loc 22 278 56
 9412 04ba 97ED760A 		vldr.32	s0, [r7, #472]
 9413 04be 2E48     		ldr	r0, .L441+24
 9414 04c0 FFF7FEFF 		bl	_ZN14clasOscillator7SetFreqEf
 279:WarpDrive.cpp ****                         aobjSingleOscillator[2].SetFreq(flCarrierFrequency);
 9415              		.loc 22 279 56
 9416 04c4 97ED760A 		vldr.32	s0, [r7, #472]
 9417 04c8 2C48     		ldr	r0, .L441+28
 9418 04ca FFF7FEFF 		bl	_ZN14clasOscillator7SetFreqEf
 280:WarpDrive.cpp ****                         aobjSingleOscillator[3].SetFreq(flCarrierFrequency);
 9419              		.loc 22 280 56
 9420 04ce 97ED760A 		vldr.32	s0, [r7, #472]
 9421 04d2 2B48     		ldr	r0, .L441+32
 9422 04d4 FFF7FEFF 		bl	_ZN14clasOscillator7SetFreqEf
 9423              	.LBE64:
 9424              	.LBE63:
 281:WarpDrive.cpp ****                     } else {
 282:WarpDrive.cpp ****                         FreqModulationCarrier(aobjSingleOscillator[1], aobjSingleOscillator[2], aob
 283:WarpDrive.cpp ****                         FreqModulationRatio(aobjSingleOscillator[1], objEncoderB);
 284:WarpDrive.cpp ****                         FreqModulationRatio(aobjSingleOscillator[2], objEncoderC);
 285:WarpDrive.cpp ****                         FreqModulationRatio(aobjSingleOscillator[3], objEncoderD);
 286:WarpDrive.cpp ****                     }
 287:WarpDrive.cpp ****                     break;
 9425              		.loc 22 287 21
 9426 04d8 63E0     		b	.L423
 9427              	.L436:
 9428              	.LBB65:
 282:WarpDrive.cpp ****                         FreqModulationRatio(aobjSingleOscillator[1], objEncoderB);
 9429              		.loc 22 282 46
 9430 04da 214B     		ldr	r3, .L441
 9431 04dc 284A     		ldr	r2, .L441+32
 9432 04de 2749     		ldr	r1, .L441+28
 9433 04e0 2548     		ldr	r0, .L441+24
 9434 04e2 FFF7FEFF 		bl	_Z21FreqModulationCarrierR14clasOscillatorS0_S0_RN5daisy11clasEncoderE
 283:WarpDrive.cpp ****                         FreqModulationRatio(aobjSingleOscillator[2], objEncoderC);
 9435              		.loc 22 283 44
 9436 04e6 1F49     		ldr	r1, .L441+4
 9437 04e8 2348     		ldr	r0, .L441+24
 9438 04ea FFF7FEFF 		bl	_Z19FreqModulationRatioR14clasOscillatorRN5daisy11clasEncoderE
 284:WarpDrive.cpp ****                         FreqModulationRatio(aobjSingleOscillator[3], objEncoderD);
 9439              		.loc 22 284 44
 9440 04ee 1E49     		ldr	r1, .L441+8
 9441 04f0 2248     		ldr	r0, .L441+28
 9442 04f2 FFF7FEFF 		bl	_Z19FreqModulationRatioR14clasOscillatorRN5daisy11clasEncoderE
 285:WarpDrive.cpp ****                     }
 9443              		.loc 22 285 44
 9444 04f6 1D49     		ldr	r1, .L441+12
 9445 04f8 2148     		ldr	r0, .L441+32
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 227


 9446 04fa FFF7FEFF 		bl	_Z19FreqModulationRatioR14clasOscillatorRN5daisy11clasEncoderE
 9447              	.LBE65:
 9448              		.loc 22 287 21
 9449 04fe 50E0     		b	.L423
 9450              	.L427:
 288:WarpDrive.cpp **** 
 289:WarpDrive.cpp ****                 case T_MATCH:
 290:WarpDrive.cpp ****                     fxFrequencyMatch(aobjSingleOscillator[0], objEncoderA);
 9451              		.loc 22 290 37
 9452 0500 1749     		ldr	r1, .L441
 9453 0502 1C48     		ldr	r0, .L441+20
 9454 0504 FFF7FEFF 		bl	_Z16fxFrequencyMatchR14clasOscillatorRN5daisy11clasEncoderE
 291:WarpDrive.cpp ****                     fxFrequencyMatch(aobjSingleOscillator[1], objEncoderB);
 9455              		.loc 22 291 37
 9456 0508 1649     		ldr	r1, .L441+4
 9457 050a 1B48     		ldr	r0, .L441+24
 9458 050c FFF7FEFF 		bl	_Z16fxFrequencyMatchR14clasOscillatorRN5daisy11clasEncoderE
 292:WarpDrive.cpp ****                     fxFrequencyMatch(aobjSingleOscillator[2], objEncoderC);
 9459              		.loc 22 292 37
 9460 0510 1549     		ldr	r1, .L441+8
 9461 0512 1A48     		ldr	r0, .L441+28
 9462 0514 FFF7FEFF 		bl	_Z16fxFrequencyMatchR14clasOscillatorRN5daisy11clasEncoderE
 293:WarpDrive.cpp ****                     fxFrequencyMatch(aobjSingleOscillator[3], objEncoderD);
 9463              		.loc 22 293 37
 9464 0518 1449     		ldr	r1, .L441+12
 9465 051a 1948     		ldr	r0, .L441+32
 9466 051c FFF7FEFF 		bl	_Z16fxFrequencyMatchR14clasOscillatorRN5daisy11clasEncoderE
 294:WarpDrive.cpp ****                     break;
 9467              		.loc 22 294 21
 9468 0520 3FE0     		b	.L423
 9469              	.L426:
 295:WarpDrive.cpp **** 
 296:WarpDrive.cpp ****                 case T_D_SHAPE:                
 297:WarpDrive.cpp ****                     ChangeWaveform(aobjSingleOscillator[0], objEncoderA);
 9470              		.loc 22 297 35
 9471 0522 0F49     		ldr	r1, .L441
 9472 0524 1348     		ldr	r0, .L441+20
 9473 0526 FFF7FEFF 		bl	_Z14ChangeWaveformR14clasOscillatorRN5daisy11clasEncoderE
 298:WarpDrive.cpp ****                     ChangeWaveform(aobjSingleOscillator[1], objEncoderB);
 9474              		.loc 22 298 35
 9475 052a 0E49     		ldr	r1, .L441+4
 9476 052c 1248     		ldr	r0, .L441+24
 9477 052e FFF7FEFF 		bl	_Z14ChangeWaveformR14clasOscillatorRN5daisy11clasEncoderE
 299:WarpDrive.cpp ****                     ChangeWaveform(aobjSingleOscillator[2], objEncoderC);
 9478              		.loc 22 299 35
 9479 0532 0D49     		ldr	r1, .L441+8
 9480 0534 1148     		ldr	r0, .L441+28
 9481 0536 FFF7FEFF 		bl	_Z14ChangeWaveformR14clasOscillatorRN5daisy11clasEncoderE
 300:WarpDrive.cpp ****                     ChangeWaveform(aobjSingleOscillator[3], objEncoderD);
 9482              		.loc 22 300 35
 9483 053a 0C49     		ldr	r1, .L441+12
 9484 053c 1048     		ldr	r0, .L441+32
 9485 053e FFF7FEFF 		bl	_Z14ChangeWaveformR14clasOscillatorRN5daisy11clasEncoderE
 301:WarpDrive.cpp ****                     break;
 9486              		.loc 22 301 21
 9487 0542 2EE0     		b	.L423
 9488              	.L424:
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 228


 302:WarpDrive.cpp **** 
 303:WarpDrive.cpp ****                 case T_L_SHAPE:
 304:WarpDrive.cpp ****                     ChangeWaveform(objLeadVoice, objEncoderA);
 9489              		.loc 22 304 35
 9490 0544 0649     		ldr	r1, .L441
 9491 0546 1048     		ldr	r0, .L441+40
 9492 0548 FFF7FEFF 		bl	_Z14ChangeWaveformR20clasEulersOscillatorILi16EERN5daisy11clasEncoderE
 305:WarpDrive.cpp ****                     break;
 9493              		.loc 22 305 21
 9494 054c 29E0     		b	.L423
 9495              	.L432:
 306:WarpDrive.cpp **** 
 307:WarpDrive.cpp ****                 case T_FAST_LFO:
 308:WarpDrive.cpp ****                     // fxFrequencyInc(objLFOSlow, objEncoderA, 0);
 309:WarpDrive.cpp ****                     IncOscillatorDepth(objLFOSlow, objEncoderA); //Add this function 
 9496              		.loc 22 309 39
 9497 054e 0449     		ldr	r1, .L441
 9498 0550 0E48     		ldr	r0, .L441+44
 9499 0552 FFF7FEFF 		bl	_Z18IncOscillatorDepthR14clasOscillatorRN5daisy11clasEncoderE
 310:WarpDrive.cpp ****                     ChangeWaveform(objLFOSlow, objEncoderB);
 9500              		.loc 22 310 35
 9501 0556 0349     		ldr	r1, .L441+4
 9502 0558 0C48     		ldr	r0, .L441+44
 9503 055a FFF7FEFF 		bl	_Z14ChangeWaveformR14clasOscillatorRN5daisy11clasEncoderE
 311:WarpDrive.cpp ****                     break;
 9504              		.loc 22 311 21
 9505 055e 20E0     		b	.L423
 9506              	.L442:
 9507              		.align	2
 9508              	.L441:
 9509 0560 00000000 		.word	objEncoderA
 9510 0564 00000000 		.word	objEncoderB
 9511 0568 00000000 		.word	objEncoderC
 9512 056c 00000000 		.word	objEncoderD
 9513 0570 00000000 		.word	Btn1
 9514 0574 00000000 		.word	aobjSingleOscillator
 9515 0578 2C000000 		.word	aobjSingleOscillator+44
 9516 057c 58000000 		.word	aobjSingleOscillator+88
 9517 0580 84000000 		.word	aobjSingleOscillator+132
 9518 0584 00000000 		.word	Btn2
 9519 0588 00000000 		.word	objLeadVoice
 9520 058c 00000000 		.word	objLFOSlow
 9521              	.L430:
 312:WarpDrive.cpp **** 
 313:WarpDrive.cpp ****                 case T_SLOW_LFO:
 314:WarpDrive.cpp ****                     // fxFrequencyInc(objLFOFast, objEncoderA, 0);
 315:WarpDrive.cpp ****                     IncOscillatorDepth(objLFOFast, objEncoderA); //Add this function 
 9522              		.loc 22 315 39
 9523 0590 7049     		ldr	r1, .L443
 9524 0592 7148     		ldr	r0, .L443+4
 9525 0594 FFF7FEFF 		bl	_Z18IncOscillatorDepthR14clasOscillatorRN5daisy11clasEncoderE
 316:WarpDrive.cpp ****                     ChangeWaveform(objLFOFast, objEncoderB);
 9526              		.loc 22 316 35
 9527 0598 7049     		ldr	r1, .L443+8
 9528 059a 6F48     		ldr	r0, .L443+4
 9529 059c FFF7FEFF 		bl	_Z14ChangeWaveformR14clasOscillatorRN5daisy11clasEncoderE
 317:WarpDrive.cpp ****                     break;
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 229


 9530              		.loc 22 317 21
 9531 05a0 00BF     		nop
 9532              	.L423:
 9533              	.LBE62:
 9534              	.LBE61:
 9535              	.LBE60:
 9536              	.LBE59:
 318:WarpDrive.cpp **** 
 319:WarpDrive.cpp ****             }
 320:WarpDrive.cpp ****         }
 321:WarpDrive.cpp **** 
 322:WarpDrive.cpp ****         // if (Btn1.Pressed() && uiTouchKeyPressed != 255){ 
 323:WarpDrive.cpp ****         // // if (Btn1.Pressed()){ 
 324:WarpDrive.cpp ****         
 325:WarpDrive.cpp ****         //     // if (xMenuButtonJustPressed) { //Resets the user input to 0 if BTN just pressed
 326:WarpDrive.cpp ****         //     //     xMenuButtonJustPressed = false;
 327:WarpDrive.cpp ****         //     //     // uiTouchKeyPressed = 0; //Return to Normal / IDLE
 328:WarpDrive.cpp ****         //     // }
 329:WarpDrive.cpp ****         //     fxModeMenu(uiTouchKeyPressed); 
 330:WarpDrive.cpp ****         // } else {
 331:WarpDrive.cpp ****         //     // xMenuButtonJustPressed = true;
 332:WarpDrive.cpp ****         //     if (xNormalMode) {
 333:WarpDrive.cpp ****         //         //Reset the Ratios to 1;
 334:WarpDrive.cpp ****         //         aobjSingleOscillator[1].SetRatio(1);
 335:WarpDrive.cpp ****         //         aobjSingleOscillator[2].SetRatio(1);
 336:WarpDrive.cpp ****         //         aobjSingleOscillator[3].SetRatio(1);
 337:WarpDrive.cpp ****         //         if (Btn2.Pressed()){ 
 338:WarpDrive.cpp ****         //             //Micro Frequency change of oscillators. 
 339:WarpDrive.cpp ****         //             fxFrequencyMicroInc(aobjSingleOscillator[0], objEncoderA, 0);
 340:WarpDrive.cpp ****         //             fxFrequencyMicroInc(aobjSingleOscillator[1], objEncoderB, 1);
 341:WarpDrive.cpp ****         //             fxFrequencyMicroInc(aobjSingleOscillator[2], objEncoderC, 2);
 342:WarpDrive.cpp ****         //             fxFrequencyMicroInc(aobjSingleOscillator[3], objEncoderD, 3);
 343:WarpDrive.cpp ****         //         } else {
 344:WarpDrive.cpp ****         //             //Normal frequency change of occillators. 
 345:WarpDrive.cpp ****         //             fxFrequencyInc(aobjSingleOscillator[0], objEncoderA, 0);
 346:WarpDrive.cpp ****         //             fxFrequencyInc(aobjSingleOscillator[1], objEncoderB, 1);
 347:WarpDrive.cpp ****         //             fxFrequencyInc(aobjSingleOscillator[2], objEncoderC, 2);
 348:WarpDrive.cpp ****         //             fxFrequencyInc(aobjSingleOscillator[3], objEncoderD, 3);
 349:WarpDrive.cpp ****         //         }
 350:WarpDrive.cpp ****         //     } else {
 351:WarpDrive.cpp ****         //         if (Btn2.Pressed()){ 
 352:WarpDrive.cpp ****         //             fxFrequencyMicroInc(aobjSingleOscillator[0], objEncoderA, 0);
 353:WarpDrive.cpp ****         //             float flCarrierFrequency = aobjSingleOscillator[0].GetFreq();
 354:WarpDrive.cpp ****         //             aobjSingleOscillator[1].SetFreq(flCarrierFrequency);
 355:WarpDrive.cpp ****         //             aobjSingleOscillator[2].SetFreq(flCarrierFrequency);
 356:WarpDrive.cpp ****         //             aobjSingleOscillator[3].SetFreq(flCarrierFrequency);
 357:WarpDrive.cpp ****         //         } else {
 358:WarpDrive.cpp ****         //             FreqModulationCarrier(aobjSingleOscillator[1], aobjSingleOscillator[2], aobj
 359:WarpDrive.cpp ****         //             FreqModulationRatio(aobjSingleOscillator[1], objEncoderB);
 360:WarpDrive.cpp ****         //             FreqModulationRatio(aobjSingleOscillator[2], objEncoderC);
 361:WarpDrive.cpp ****         //             FreqModulationRatio(aobjSingleOscillator[3], objEncoderD);
 362:WarpDrive.cpp ****         //         }
 363:WarpDrive.cpp ****         //     }
 364:WarpDrive.cpp ****         // }
 365:WarpDrive.cpp **** 
 366:WarpDrive.cpp **** 
 367:WarpDrive.cpp ****         // //Potentiometers
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 230


 368:WarpDrive.cpp ****         adcPT1 = ADC_SCALAR * (hw.adc.GetFloat(0));
 9537              		.loc 22 368 47
 9538 05a2 0021     		movs	r1, #0
 9539 05a4 6E48     		ldr	r0, .L443+12
 9540 05a6 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9541 05aa F0EE407A 		vmov.f32	s15, s0
 9542              		.loc 22 368 29
 9543 05ae 9FED6D7A 		vldr.32	s14, .L443+16
 9544 05b2 67EE877A 		vmul.f32	s15, s15, s14
 9545              		.loc 22 368 16
 9546 05b6 6C4B     		ldr	r3, .L443+20
 9547 05b8 C3ED007A 		vstr.32	s15, [r3]
 369:WarpDrive.cpp ****         adcPT2 = ADC_SCALAR * (hw.adc.GetFloat(1));
 9548              		.loc 22 369 47
 9549 05bc 0121     		movs	r1, #1
 9550 05be 6848     		ldr	r0, .L443+12
 9551 05c0 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9552 05c4 F0EE407A 		vmov.f32	s15, s0
 9553              		.loc 22 369 29
 9554 05c8 9FED667A 		vldr.32	s14, .L443+16
 9555 05cc 67EE877A 		vmul.f32	s15, s15, s14
 9556              		.loc 22 369 16
 9557 05d0 664B     		ldr	r3, .L443+24
 9558 05d2 C3ED007A 		vstr.32	s15, [r3]
 370:WarpDrive.cpp ****         adcPT3 = ADC_SCALAR * (hw.adc.GetFloat(2));
 9559              		.loc 22 370 47
 9560 05d6 0221     		movs	r1, #2
 9561 05d8 6148     		ldr	r0, .L443+12
 9562 05da FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9563 05de F0EE407A 		vmov.f32	s15, s0
 9564              		.loc 22 370 29
 9565 05e2 9FED607A 		vldr.32	s14, .L443+16
 9566 05e6 67EE877A 		vmul.f32	s15, s15, s14
 9567              		.loc 22 370 16
 9568 05ea 614B     		ldr	r3, .L443+28
 9569 05ec C3ED007A 		vstr.32	s15, [r3]
 371:WarpDrive.cpp ****         adcPT4 = ADC_SCALAR * (hw.adc.GetFloat(3));
 9570              		.loc 22 371 47
 9571 05f0 0321     		movs	r1, #3
 9572 05f2 5B48     		ldr	r0, .L443+12
 9573 05f4 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9574 05f8 F0EE407A 		vmov.f32	s15, s0
 9575              		.loc 22 371 29
 9576 05fc 9FED597A 		vldr.32	s14, .L443+16
 9577 0600 67EE877A 		vmul.f32	s15, s15, s14
 9578              		.loc 22 371 16
 9579 0604 5B4B     		ldr	r3, .L443+32
 9580 0606 C3ED007A 		vstr.32	s15, [r3]
 372:WarpDrive.cpp ****         adcPT5 = ADC_SCALAR * (hw.adc.GetFloat(4));
 9581              		.loc 22 372 47
 9582 060a 0421     		movs	r1, #4
 9583 060c 5448     		ldr	r0, .L443+12
 9584 060e FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9585 0612 F0EE407A 		vmov.f32	s15, s0
 9586              		.loc 22 372 29
 9587 0616 9FED537A 		vldr.32	s14, .L443+16
 9588 061a 67EE877A 		vmul.f32	s15, s15, s14
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 231


 9589              		.loc 22 372 16
 9590 061e 564B     		ldr	r3, .L443+36
 9591 0620 C3ED007A 		vstr.32	s15, [r3]
 373:WarpDrive.cpp ****         adcPT6 = ADC_SCALAR * (hw.adc.GetFloat(5));
 9592              		.loc 22 373 47
 9593 0624 0521     		movs	r1, #5
 9594 0626 4E48     		ldr	r0, .L443+12
 9595 0628 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9596 062c F0EE407A 		vmov.f32	s15, s0
 9597              		.loc 22 373 29
 9598 0630 9FED4C7A 		vldr.32	s14, .L443+16
 9599 0634 67EE877A 		vmul.f32	s15, s15, s14
 9600              		.loc 22 373 16
 9601 0638 504B     		ldr	r3, .L443+40
 9602 063a C3ED007A 		vstr.32	s15, [r3]
 374:WarpDrive.cpp ****         adcPT7 = ADC_SCALAR * (hw.adc.GetFloat(6));
 9603              		.loc 22 374 47
 9604 063e 0621     		movs	r1, #6
 9605 0640 4748     		ldr	r0, .L443+12
 9606 0642 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9607 0646 F0EE407A 		vmov.f32	s15, s0
 9608              		.loc 22 374 29
 9609 064a 9FED467A 		vldr.32	s14, .L443+16
 9610 064e 67EE877A 		vmul.f32	s15, s15, s14
 9611              		.loc 22 374 16
 9612 0652 4B4B     		ldr	r3, .L443+44
 9613 0654 C3ED007A 		vstr.32	s15, [r3]
 375:WarpDrive.cpp ****         adcPT8 = ADC_SCALAR * (hw.adc.GetFloat(7));
 9614              		.loc 22 375 47
 9615 0658 0721     		movs	r1, #7
 9616 065a 4148     		ldr	r0, .L443+12
 9617 065c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9618 0660 F0EE407A 		vmov.f32	s15, s0
 9619              		.loc 22 375 29
 9620 0664 9FED3F7A 		vldr.32	s14, .L443+16
 9621 0668 67EE877A 		vmul.f32	s15, s15, s14
 9622              		.loc 22 375 16
 9623 066c 454B     		ldr	r3, .L443+48
 9624 066e C3ED007A 		vstr.32	s15, [r3]
 376:WarpDrive.cpp ****         adcPT9 = ADC_SCALAR * (hw.adc.GetFloat(8));
 9625              		.loc 22 376 47
 9626 0672 0821     		movs	r1, #8
 9627 0674 3A48     		ldr	r0, .L443+12
 9628 0676 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9629 067a F0EE407A 		vmov.f32	s15, s0
 9630              		.loc 22 376 29
 9631 067e 9FED397A 		vldr.32	s14, .L443+16
 9632 0682 67EE877A 		vmul.f32	s15, s15, s14
 9633              		.loc 22 376 16
 9634 0686 404B     		ldr	r3, .L443+52
 9635 0688 C3ED007A 		vstr.32	s15, [r3]
 377:WarpDrive.cpp ****         adcPT10 = ADC_SCALAR * (hw.adc.GetFloat(9));
 9636              		.loc 22 377 48
 9637 068c 0921     		movs	r1, #9
 9638 068e 3448     		ldr	r0, .L443+12
 9639 0690 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9640 0694 F0EE407A 		vmov.f32	s15, s0
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 232


 9641              		.loc 22 377 30
 9642 0698 9FED327A 		vldr.32	s14, .L443+16
 9643 069c 67EE877A 		vmul.f32	s15, s15, s14
 9644              		.loc 22 377 17
 9645 06a0 3A4B     		ldr	r3, .L443+56
 9646 06a2 C3ED007A 		vstr.32	s15, [r3]
 378:WarpDrive.cpp **** 
 379:WarpDrive.cpp **** 
 380:WarpDrive.cpp ****         objLeadVoice.SetRealAmp(adcPT4);
 9647              		.loc 22 380 32
 9648 06a6 334B     		ldr	r3, .L443+32
 9649 06a8 D3ED007A 		vldr.32	s15, [r3]
 9650 06ac B0EE670A 		vmov.f32	s0, s15
 9651 06b0 3748     		ldr	r0, .L443+60
 9652 06b2 FFF7FEFF 		bl	_ZN20clasEulersOscillatorILi16EE10SetRealAmpEf
 381:WarpDrive.cpp ****         objLeadVoice.SetImagAmp(adcPT3);
 9653              		.loc 22 381 32
 9654 06b6 2E4B     		ldr	r3, .L443+28
 9655 06b8 D3ED007A 		vldr.32	s15, [r3]
 9656 06bc B0EE670A 		vmov.f32	s0, s15
 9657 06c0 3348     		ldr	r0, .L443+60
 9658 06c2 FFF7FEFF 		bl	_ZN20clasEulersOscillatorILi16EE10SetImagAmpEf
 382:WarpDrive.cpp **** 
 383:WarpDrive.cpp ****         objLPFDrone.setFreqNormalised(adcPT5);
 9659              		.loc 22 383 38
 9660 06c6 2C4B     		ldr	r3, .L443+36
 9661 06c8 D3ED007A 		vldr.32	s15, [r3]
 9662 06cc B0EE670A 		vmov.f32	s0, s15
 9663 06d0 3048     		ldr	r0, .L443+64
 9664 06d2 FFF7FEFF 		bl	_ZN21clasSecondOrderFilter17setFreqNormalisedEf
 384:WarpDrive.cpp ****         objLPFDrone.setQ(adcPT6);
 9665              		.loc 22 384 25
 9666 06d6 294B     		ldr	r3, .L443+40
 9667 06d8 D3ED007A 		vldr.32	s15, [r3]
 9668 06dc B0EE670A 		vmov.f32	s0, s15
 9669 06e0 2C48     		ldr	r0, .L443+64
 9670 06e2 FFF7FEFF 		bl	_ZN21clasSecondOrderFilter4setQEf
 385:WarpDrive.cpp ****         objLPFLeadVoice.setFreqNormalised(adcPT7 * 10);
 9671              		.loc 22 385 42
 9672 06e6 264B     		ldr	r3, .L443+44
 9673 06e8 D3ED007A 		vldr.32	s15, [r3]
 9674 06ec B2EE047A 		vmov.f32	s14, #1.0e+1
 9675 06f0 67EE877A 		vmul.f32	s15, s15, s14
 9676 06f4 B0EE670A 		vmov.f32	s0, s15
 9677 06f8 2748     		ldr	r0, .L443+68
 9678 06fa FFF7FEFF 		bl	_ZN21clasSecondOrderFilter17setFreqNormalisedEf
 386:WarpDrive.cpp ****         objLPFLeadVoice.setQ(adcPT8);
 9679              		.loc 22 386 29
 9680 06fe 214B     		ldr	r3, .L443+48
 9681 0700 D3ED007A 		vldr.32	s15, [r3]
 9682 0704 B0EE670A 		vmov.f32	s0, s15
 9683 0708 2348     		ldr	r0, .L443+68
 9684 070a FFF7FEFF 		bl	_ZN21clasSecondOrderFilter4setQEf
 387:WarpDrive.cpp ****         fxUpdateFrequencies(adcPT1);
 9685              		.loc 22 387 28
 9686 070e 164B     		ldr	r3, .L443+20
 9687 0710 D3ED007A 		vldr.32	s15, [r3]
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 233


 9688 0714 B0EE670A 		vmov.f32	s0, s15
 9689 0718 FFF7FEFF 		bl	_Z19fxUpdateFrequenciesf
 388:WarpDrive.cpp **** 
 389:WarpDrive.cpp **** 
 390:WarpDrive.cpp ****         // //PT9 PT10 LFO Frequency set
 391:WarpDrive.cpp ****         // float flLFOSlowFreq = objLFOSlow.GetFreq();
 392:WarpDrive.cpp ****         objLFOSlow.SetFreq(20 * adcPT10);
 9690              		.loc 22 392 27
 9691 071c 1B4B     		ldr	r3, .L443+56
 9692 071e D3ED007A 		vldr.32	s15, [r3]
 9693 0722 B3EE047A 		vmov.f32	s14, #2.0e+1
 9694 0726 67EE877A 		vmul.f32	s15, s15, s14
 9695 072a B0EE670A 		vmov.f32	s0, s15
 9696 072e 1B48     		ldr	r0, .L443+72
 9697 0730 FFF7FEFF 		bl	_ZN14clasOscillator7SetFreqEf
 393:WarpDrive.cpp ****         // float flLFOFastFreq = objLFOFast.GetFreq();
 394:WarpDrive.cpp ****         objLFOFast.SetFreq(20 * adcPT9);
 9698              		.loc 22 394 27
 9699 0734 144B     		ldr	r3, .L443+52
 9700 0736 D3ED007A 		vldr.32	s15, [r3]
 9701 073a B3EE047A 		vmov.f32	s14, #2.0e+1
 9702 073e 67EE877A 		vmul.f32	s15, s15, s14
 9703 0742 B0EE670A 		vmov.f32	s0, s15
 9704 0746 0448     		ldr	r0, .L443+4
 9705 0748 FFF7FEFF 		bl	_ZN14clasOscillator7SetFreqEf
 395:WarpDrive.cpp **** 
 396:WarpDrive.cpp **** 
 397:WarpDrive.cpp ****         objTouch.Process();
 9706              		.loc 22 397 25
 9707 074c 1448     		ldr	r0, .L443+76
 9708 074e FFF7FEFF 		bl	_ZN12clasCapTouch7ProcessEv
 9709              	.LBE58:
 398:WarpDrive.cpp **** 
 399:WarpDrive.cpp ****     }
 9710              		.loc 22 399 5
 9711 0752 7DE5     		b	.L438
 9712              	.L444:
 9713              		.align	2
 9714              	.L443:
 9715 0754 00000000 		.word	objEncoderA
 9716 0758 00000000 		.word	objLFOFast
 9717 075c 00000000 		.word	objEncoderB
 9718 0760 18000000 		.word	hw+24
 9719 0764 6666A63F 		.word	1067869798
 9720 0768 00000000 		.word	adcPT1
 9721 076c 00000000 		.word	adcPT2
 9722 0770 00000000 		.word	adcPT3
 9723 0774 00000000 		.word	adcPT4
 9724 0778 00000000 		.word	adcPT5
 9725 077c 00000000 		.word	adcPT6
 9726 0780 00000000 		.word	adcPT7
 9727 0784 00000000 		.word	adcPT8
 9728 0788 00000000 		.word	adcPT9
 9729 078c 00000000 		.word	adcPT10
 9730 0790 00000000 		.word	objLeadVoice
 9731 0794 00000000 		.word	_ZL11objLPFDrone
 9732 0798 00000000 		.word	objLPFLeadVoice
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 234


 9733 079c 00000000 		.word	objLFOSlow
 9734 07a0 00000000 		.word	objTouch
 9735              		.cfi_endproc
 9736              	.LFE4765:
 9738              		.section	.text._ZSt3powIfiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_
 9739              		.align	1
 9740              		.weak	_ZSt3powIfiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__value
 9741              		.syntax unified
 9742              		.thumb
 9743              		.thumb_func
 9744              		.fpu fpv5-d16
 9746              	_ZSt3powIfiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__ty
 9747              	.LFB5074:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log(long double __x)
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logl(__x); }
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log(_Tp __x)
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log(__x); }
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log10;
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(float __x)
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10f(__x); }
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(long double __x)
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10l(__x); }
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log10(_Tp __x)
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log10(__x); }
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::modf;
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(float __x, float* __iptr)
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modff(__x, __iptr); }
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(long double __x, long double* __iptr)
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 235


 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::pow;
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, float __y)
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powf(__x, __y); }
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, long double __y)
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powl(__x, __y); }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if __cplusplus < 201103L
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline double
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(double __x, int __i)
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powi(__x, __i); }
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, int __n)
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powif(__x, __n); }
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, int __n)
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powil(__x, __n); }
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     pow(_Tp __x, _Up __y)
 9748              		.loc 1 415 5
 9749              		.cfi_startproc
 9750              		@ args = 0, pretend = 0, frame = 8
 9751              		@ frame_needed = 1, uses_anonymous_args = 0
 9752 0000 80B5     		push	{r7, lr}
 9753              		.cfi_def_cfa_offset 8
 9754              		.cfi_offset 7, -8
 9755              		.cfi_offset 14, -4
 9756 0002 82B0     		sub	sp, sp, #8
 9757              		.cfi_def_cfa_offset 16
 9758 0004 00AF     		add	r7, sp, #0
 9759              		.cfi_def_cfa_register 7
 9760 0006 87ED010A 		vstr.32	s0, [r7, #4]
 9761 000a 3860     		str	r0, [r7]
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return pow(__type(__x), __type(__y));
 9762              		.loc 1 418 17
 9763 000c D7ED017A 		vldr.32	s15, [r7, #4]
 9764 0010 B7EEE77A 		vcvt.f64.f32	d7, s15
 9765 0014 3B68     		ldr	r3, [r7]
 9766 0016 06EE903A 		vmov	s13, r3	@ int
 9767 001a B8EEE66B 		vcvt.f64.s32	d6, s13
 9768 001e B0EE461B 		vmov.f64	d1, d6
 9769 0022 B0EE470B 		vmov.f64	d0, d7
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 236


 9770 0026 FFF7FEFF 		bl	pow
 9771 002a B0EE407B 		vmov.f64	d7, d0
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 9772              		.loc 1 419 5
 9773 002e B0EE470B 		vmov.f64	d0, d7
 9774 0032 0837     		adds	r7, r7, #8
 9775              		.cfi_def_cfa_offset 8
 9776 0034 BD46     		mov	sp, r7
 9777              		.cfi_def_cfa_register 13
 9778              		@ sp needed
 9779 0036 80BD     		pop	{r7, pc}
 9780              		.cfi_endproc
 9781              	.LFE5074:
 9783              		.section	.text._ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_,"axG",%progbits,_ZN5daisy9DaisySeed9Prin
 9784              		.align	1
 9785              		.weak	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
 9786              		.syntax unified
 9787              		.thumb
 9788              		.thumb_func
 9789              		.fpu fpv5-d16
 9791              	_ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_:
 9792              	.LFB5075:
  23:../../libDaisy//src/daisy_seed.h **** 
  24:../../libDaisy//src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../../libDaisy//src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../../libDaisy//src/daisy_seed.h ****      */
  27:../../libDaisy//src/daisy_seed.h ****     void Configure();
  28:../../libDaisy//src/daisy_seed.h **** 
  29:../../libDaisy//src/daisy_seed.h ****     /** 
  30:../../libDaisy//src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../../libDaisy//src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../../libDaisy//src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../../libDaisy//src/daisy_seed.h **** 
  34:../../libDaisy//src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../../libDaisy//src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../../libDaisy//src/daisy_seed.h ****     for a specific application.
  37:../../libDaisy//src/daisy_seed.h ****     */
  38:../../libDaisy//src/daisy_seed.h ****     void Init(bool boost = false);
  39:../../libDaisy//src/daisy_seed.h **** 
  40:../../libDaisy//src/daisy_seed.h ****     /** 
  41:../../libDaisy//src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../../libDaisy//src/daisy_seed.h ****     */
  43:../../libDaisy//src/daisy_seed.h ****     void DeInit();
  44:../../libDaisy//src/daisy_seed.h **** 
  45:../../libDaisy//src/daisy_seed.h ****     /** 
  46:../../libDaisy//src/daisy_seed.h ****     Wait some ms before going on.
  47:../../libDaisy//src/daisy_seed.h ****     \param del Delay time in ms.
  48:../../libDaisy//src/daisy_seed.h ****     */
  49:../../libDaisy//src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../../libDaisy//src/daisy_seed.h **** 
  51:../../libDaisy//src/daisy_seed.h ****     /** 
  52:../../libDaisy//src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../../libDaisy//src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../../libDaisy//src/daisy_seed.h ****     */
  55:../../libDaisy//src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../../libDaisy//src/daisy_seed.h **** 
  57:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 237


  58:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  59:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  60:../../libDaisy//src/daisy_seed.h ****     */
  61:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../../libDaisy//src/daisy_seed.h **** 
  63:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  65:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  66:../../libDaisy//src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../../libDaisy//src/daisy_seed.h ****     */
  68:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../../libDaisy//src/daisy_seed.h **** 
  70:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../../libDaisy//src/daisy_seed.h ****      */
  72:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../../libDaisy//src/daisy_seed.h **** 
  74:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../../libDaisy//src/daisy_seed.h ****      */
  76:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../../libDaisy//src/daisy_seed.h **** 
  78:../../libDaisy//src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../../libDaisy//src/daisy_seed.h ****     void StopAudio();
  80:../../libDaisy//src/daisy_seed.h **** 
  81:../../libDaisy//src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../../libDaisy//src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../../libDaisy//src/daisy_seed.h ****      */
  84:../../libDaisy//src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../../libDaisy//src/daisy_seed.h **** 
  86:../../libDaisy//src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../../libDaisy//src/daisy_seed.h ****      */
  88:../../libDaisy//src/daisy_seed.h ****     float AudioSampleRate();
  89:../../libDaisy//src/daisy_seed.h **** 
  90:../../libDaisy//src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../../libDaisy//src/daisy_seed.h ****      */
  92:../../libDaisy//src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../../libDaisy//src/daisy_seed.h **** 
  94:../../libDaisy//src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../../libDaisy//src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../../libDaisy//src/daisy_seed.h **** 
  97:../../libDaisy//src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../../libDaisy//src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../../libDaisy//src/daisy_seed.h **** 
 100:../../libDaisy//src/daisy_seed.h ****     /** Returns the SAI Handle for the Daisy Seed 
 101:../../libDaisy//src/daisy_seed.h ****      *  This can be useful when adding a secondary codec,
 102:../../libDaisy//src/daisy_seed.h ****      *  the result of this function can be passed to the audio reinit 
 103:../../libDaisy//src/daisy_seed.h ****      *  with an SAI2 configuration
 104:../../libDaisy//src/daisy_seed.h ****      */
 105:../../libDaisy//src/daisy_seed.h ****     const SaiHandle& AudioSaiHandle() const;
 106:../../libDaisy//src/daisy_seed.h **** 
 107:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the built in LED
 108:../../libDaisy//src/daisy_seed.h ****      */
 109:../../libDaisy//src/daisy_seed.h ****     void SetLed(bool state);
 110:../../libDaisy//src/daisy_seed.h **** 
 111:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 112:../../libDaisy//src/daisy_seed.h ****      */
 113:../../libDaisy//src/daisy_seed.h ****     void SetTestPoint(bool state);
 114:../../libDaisy//src/daisy_seed.h **** 
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 238


 115:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message
 116:../../libDaisy//src/daisy_seed.h ****      */
 117:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 118:../../libDaisy//src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 119:../../libDaisy//src/daisy_seed.h ****     {
 120:../../libDaisy//src/daisy_seed.h ****         Log::Print(format, va...);
 121:../../libDaisy//src/daisy_seed.h ****     }
 122:../../libDaisy//src/daisy_seed.h **** 
 123:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 124:../../libDaisy//src/daisy_seed.h ****     */
 125:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 126:../../libDaisy//src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 9793              		.loc 16 126 17
 9794              		.cfi_startproc
 9795              		@ args = 0, pretend = 0, frame = 8
 9796              		@ frame_needed = 1, uses_anonymous_args = 0
 9797 0000 80B5     		push	{r7, lr}
 9798              		.cfi_def_cfa_offset 8
 9799              		.cfi_offset 7, -8
 9800              		.cfi_offset 14, -4
 9801 0002 82B0     		sub	sp, sp, #8
 9802              		.cfi_def_cfa_offset 16
 9803 0004 00AF     		add	r7, sp, #0
 9804              		.cfi_def_cfa_register 7
 9805 0006 7860     		str	r0, [r7, #4]
 127:../../libDaisy//src/daisy_seed.h ****     {
 128:../../libDaisy//src/daisy_seed.h ****         Log::PrintLine(format, va...);
 9806              		.loc 16 128 23
 9807 0008 7868     		ldr	r0, [r7, #4]
 9808 000a FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 129:../../libDaisy//src/daisy_seed.h ****     }
 9809              		.loc 16 129 5
 9810 000e 00BF     		nop
 9811 0010 0837     		adds	r7, r7, #8
 9812              		.cfi_def_cfa_offset 8
 9813 0012 BD46     		mov	sp, r7
 9814              		.cfi_def_cfa_register 13
 9815              		@ sp needed
 9816 0014 80BD     		pop	{r7, pc}
 9817              		.cfi_endproc
 9818              	.LFE5075:
 9820              		.section	.text._ZN5daisy9DaisySeed9PrintLineIJiEEEvPKcDpT_,"axG",%progbits,_ZN5daisy9DaisySeed9Pri
 9821              		.align	1
 9822              		.weak	_ZN5daisy9DaisySeed9PrintLineIJiEEEvPKcDpT_
 9823              		.syntax unified
 9824              		.thumb
 9825              		.thumb_func
 9826              		.fpu fpv5-d16
 9828              	_ZN5daisy9DaisySeed9PrintLineIJiEEEvPKcDpT_:
 9829              	.LFB5076:
 126:../../libDaisy//src/daisy_seed.h ****     {
 9830              		.loc 16 126 17
 9831              		.cfi_startproc
 9832              		@ args = 0, pretend = 0, frame = 8
 9833              		@ frame_needed = 1, uses_anonymous_args = 0
 9834 0000 80B5     		push	{r7, lr}
 9835              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 239


 9836              		.cfi_offset 7, -8
 9837              		.cfi_offset 14, -4
 9838 0002 82B0     		sub	sp, sp, #8
 9839              		.cfi_def_cfa_offset 16
 9840 0004 00AF     		add	r7, sp, #0
 9841              		.cfi_def_cfa_register 7
 9842 0006 7860     		str	r0, [r7, #4]
 9843 0008 3960     		str	r1, [r7]
 128:../../libDaisy//src/daisy_seed.h ****     }
 9844              		.loc 16 128 23
 9845 000a 3968     		ldr	r1, [r7]
 9846 000c 7868     		ldr	r0, [r7, #4]
 9847 000e FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 9848              		.loc 16 129 5
 9849 0012 00BF     		nop
 9850 0014 0837     		adds	r7, r7, #8
 9851              		.cfi_def_cfa_offset 8
 9852 0016 BD46     		mov	sp, r7
 9853              		.cfi_def_cfa_register 13
 9854              		@ sp needed
 9855 0018 80BD     		pop	{r7, pc}
 9856              		.cfi_endproc
 9857              	.LFE5076:
 9859              		.section	.text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE6ConfigC2Ev,"axG",%progbits,_ZN5daisy6Mpr
 9860              		.align	1
 9861              		.weak	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE6ConfigC2Ev
 9862              		.syntax unified
 9863              		.thumb
 9864              		.thumb_func
 9865              		.fpu fpv5-d16
 9867              	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE6ConfigC2Ev:
 9868              	.LFB5078:
  75:../../libDaisy//src/dev/mpr121.h **** 
  76:../../libDaisy//src/dev/mpr121.h ****   private:
  77:../../libDaisy//src/dev/mpr121.h ****     I2CHandle i2c_;
  78:../../libDaisy//src/dev/mpr121.h ****     Config    config_;
  79:../../libDaisy//src/dev/mpr121.h **** };
  80:../../libDaisy//src/dev/mpr121.h **** 
  81:../../libDaisy//src/dev/mpr121.h **** 
  82:../../libDaisy//src/dev/mpr121.h **** /** @brief Device support for MPR121 12x Capacitive Touch Sensor
  83:../../libDaisy//src/dev/mpr121.h ****     @author beserge
  84:../../libDaisy//src/dev/mpr121.h ****     @date December 2021
  85:../../libDaisy//src/dev/mpr121.h **** */
  86:../../libDaisy//src/dev/mpr121.h **** template <typename Transport>
  87:../../libDaisy//src/dev/mpr121.h **** class Mpr121
  88:../../libDaisy//src/dev/mpr121.h **** {
  89:../../libDaisy//src/dev/mpr121.h ****   public:
  90:../../libDaisy//src/dev/mpr121.h ****     Mpr121() {}
  91:../../libDaisy//src/dev/mpr121.h ****     ~Mpr121() {}
  92:../../libDaisy//src/dev/mpr121.h **** 
  93:../../libDaisy//src/dev/mpr121.h ****     struct Config
  94:../../libDaisy//src/dev/mpr121.h ****     {
  95:../../libDaisy//src/dev/mpr121.h ****         typename Transport::Config transport_config;
  96:../../libDaisy//src/dev/mpr121.h ****         uint8_t                    touch_threshold;
  97:../../libDaisy//src/dev/mpr121.h ****         uint8_t                    release_threshold;
  98:../../libDaisy//src/dev/mpr121.h **** 
  99:../../libDaisy//src/dev/mpr121.h ****         Config()
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 240


 9869              		.loc 10 99 9
 9870              		.cfi_startproc
 9871              		@ args = 0, pretend = 0, frame = 8
 9872              		@ frame_needed = 1, uses_anonymous_args = 0
 9873 0000 80B5     		push	{r7, lr}
 9874              		.cfi_def_cfa_offset 8
 9875              		.cfi_offset 7, -8
 9876              		.cfi_offset 14, -4
 9877 0002 82B0     		sub	sp, sp, #8
 9878              		.cfi_def_cfa_offset 16
 9879 0004 00AF     		add	r7, sp, #0
 9880              		.cfi_def_cfa_register 7
 9881 0006 7860     		str	r0, [r7, #4]
 9882              	.LBB66:
 100:../../libDaisy//src/dev/mpr121.h ****         {
 9883              		.loc 10 100 9
 9884 0008 7B68     		ldr	r3, [r7, #4]
 9885 000a 1846     		mov	r0, r3
 9886 000c FFF7FEFF 		bl	_ZN5daisy18Mpr121I2CTransport6ConfigC1Ev
 101:../../libDaisy//src/dev/mpr121.h ****             touch_threshold   = MPR121_TOUCH_THRESHOLD_DEFAULT;
 9887              		.loc 10 101 31
 9888 0010 7B68     		ldr	r3, [r7, #4]
 9889 0012 0C22     		movs	r2, #12
 9890 0014 1A75     		strb	r2, [r3, #20]
 102:../../libDaisy//src/dev/mpr121.h ****             release_threshold = MPR121_RELEASE_THRESHOLD_DEFAULT;
 9891              		.loc 10 102 31
 9892 0016 7B68     		ldr	r3, [r7, #4]
 9893 0018 0622     		movs	r2, #6
 9894 001a 5A75     		strb	r2, [r3, #21]
 9895              	.LBE66:
 103:../../libDaisy//src/dev/mpr121.h ****         }
 9896              		.loc 10 103 9
 9897 001c 7B68     		ldr	r3, [r7, #4]
 9898 001e 1846     		mov	r0, r3
 9899 0020 0837     		adds	r7, r7, #8
 9900              		.cfi_def_cfa_offset 8
 9901 0022 BD46     		mov	sp, r7
 9902              		.cfi_def_cfa_register 13
 9903              		@ sp needed
 9904 0024 80BD     		pop	{r7, pc}
 9905              		.cfi_endproc
 9906              	.LFE5078:
 9908              		.weak	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE6ConfigC1Ev
 9909              		.thumb_set _ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE6ConfigC1Ev,_ZN5daisy6Mpr121INS_18Mpr121I2CTr
 9910              		.section	.text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE4InitENS2_6ConfigE,"axG",%progbits,_ZN5da
 9911              		.align	1
 9912              		.weak	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE4InitENS2_6ConfigE
 9913              		.syntax unified
 9914              		.thumb
 9915              		.thumb_func
 9916              		.fpu fpv5-d16
 9918              	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE4InitENS2_6ConfigE:
 9919              	.LFB5080:
 104:../../libDaisy//src/dev/mpr121.h ****     };
 105:../../libDaisy//src/dev/mpr121.h **** 
 106:../../libDaisy//src/dev/mpr121.h ****     enum Result
 107:../../libDaisy//src/dev/mpr121.h ****     {
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 241


 108:../../libDaisy//src/dev/mpr121.h ****         OK = 0,
 109:../../libDaisy//src/dev/mpr121.h ****         ERR
 110:../../libDaisy//src/dev/mpr121.h ****     };
 111:../../libDaisy//src/dev/mpr121.h **** 
 112:../../libDaisy//src/dev/mpr121.h ****     /** Initialize the MPR121 device
 113:../../libDaisy//src/dev/mpr121.h ****         \param config Configuration settings
 114:../../libDaisy//src/dev/mpr121.h ****     */
 115:../../libDaisy//src/dev/mpr121.h ****     Result Init(Config config)
 9920              		.loc 10 115 12
 9921              		.cfi_startproc
 9922              		@ args = 28, pretend = 16, frame = 16
 9923              		@ frame_needed = 1, uses_anonymous_args = 0
 9924 0000 84B0     		sub	sp, sp, #16
 9925              		.cfi_def_cfa_offset 16
 9926 0002 B0B5     		push	{r4, r5, r7, lr}
 9927              		.cfi_def_cfa_offset 32
 9928              		.cfi_offset 4, -32
 9929              		.cfi_offset 5, -28
 9930              		.cfi_offset 7, -24
 9931              		.cfi_offset 14, -20
 9932 0004 86B0     		sub	sp, sp, #24
 9933              		.cfi_def_cfa_offset 56
 9934 0006 02AF     		add	r7, sp, #8
 9935              		.cfi_def_cfa 7, 48
 9936 0008 7860     		str	r0, [r7, #4]
 9937 000a 07F12400 		add	r0, r7, #36
 9938 000e 80E80E00 		stm	r0, {r1, r2, r3}
 116:../../libDaisy//src/dev/mpr121.h ****     {
 117:../../libDaisy//src/dev/mpr121.h ****         config_ = config;
 9939              		.loc 10 117 9
 9940 0012 7B68     		ldr	r3, [r7, #4]
 9941 0014 1D46     		mov	r5, r3
 9942 0016 07F12404 		add	r4, r7, #36
 9943 001a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 9944 001c 2860     		str	r0, [r5]	@ unaligned
 9945 001e 6960     		str	r1, [r5, #4]	@ unaligned
 9946 0020 AA60     		str	r2, [r5, #8]	@ unaligned
 9947 0022 EB60     		str	r3, [r5, #12]	@ unaligned
 9948 0024 2068     		ldr	r0, [r4]
 9949 0026 2861     		str	r0, [r5, #16]	@ unaligned
 9950 0028 A388     		ldrh	r3, [r4, #4]	@ unaligned
 9951 002a AB82     		strh	r3, [r5, #20]	@ unaligned
 118:../../libDaisy//src/dev/mpr121.h **** 
 119:../../libDaisy//src/dev/mpr121.h ****         SetTransportErr(transport_.Init(config_.transport_config));
 9952              		.loc 10 119 24
 9953 002c 7B68     		ldr	r3, [r7, #4]
 9954 002e 03F11804 		add	r4, r3, #24
 9955 0032 7B68     		ldr	r3, [r7, #4]
 9956 0034 6D46     		mov	r5, sp
 9957 0036 03F10C02 		add	r2, r3, #12
 9958 003a 92E80300 		ldm	r2, {r0, r1}
 9959 003e 85E80300 		stm	r5, {r0, r1}
 9960 0042 0ECB     		ldm	r3, {r1, r2, r3}
 9961 0044 2046     		mov	r0, r4
 9962 0046 FFF7FEFF 		bl	_ZN5daisy18Mpr121I2CTransport4InitENS0_6ConfigE
 9963 004a 0346     		mov	r3, r0
 9964 004c 1946     		mov	r1, r3
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 242


 9965 004e 7868     		ldr	r0, [r7, #4]
 9966 0050 FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15SetTransportErrEb
 120:../../libDaisy//src/dev/mpr121.h **** 
 121:../../libDaisy//src/dev/mpr121.h ****         // soft reset
 122:../../libDaisy//src/dev/mpr121.h ****         WriteRegister(MPR121_SOFTRESET, 0x63);
 9967              		.loc 10 122 22
 9968 0054 6322     		movs	r2, #99
 9969 0056 8021     		movs	r1, #128
 9970 0058 7868     		ldr	r0, [r7, #4]
 9971 005a FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
 123:../../libDaisy//src/dev/mpr121.h ****         System::Delay(1);
 9972              		.loc 10 123 22
 9973 005e 0120     		movs	r0, #1
 9974 0060 FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 124:../../libDaisy//src/dev/mpr121.h **** 
 125:../../libDaisy//src/dev/mpr121.h ****         WriteRegister(MPR121_ECR, 0x0);
 9975              		.loc 10 125 22
 9976 0064 0022     		movs	r2, #0
 9977 0066 5E21     		movs	r1, #94
 9978 0068 7868     		ldr	r0, [r7, #4]
 9979 006a FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
 126:../../libDaisy//src/dev/mpr121.h **** 
 127:../../libDaisy//src/dev/mpr121.h ****         // this doesn't work for some reason...
 128:../../libDaisy//src/dev/mpr121.h ****         // uint8_t c = ReadRegister8(MPR121_CONFIG2);
 129:../../libDaisy//src/dev/mpr121.h **** 
 130:../../libDaisy//src/dev/mpr121.h ****         // if(c != 0x24)
 131:../../libDaisy//src/dev/mpr121.h ****         //     return ERR;
 132:../../libDaisy//src/dev/mpr121.h **** 
 133:../../libDaisy//src/dev/mpr121.h ****         SetThresholds(config_.touch_threshold, config_.release_threshold);
 9980              		.loc 10 133 22
 9981 006e 7B68     		ldr	r3, [r7, #4]
 9982 0070 197D     		ldrb	r1, [r3, #20]	@ zero_extendqisi2
 9983 0072 7B68     		ldr	r3, [r7, #4]
 9984 0074 5B7D     		ldrb	r3, [r3, #21]	@ zero_extendqisi2
 9985 0076 1A46     		mov	r2, r3
 9986 0078 7868     		ldr	r0, [r7, #4]
 9987 007a FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13SetThresholdsEhh
 134:../../libDaisy//src/dev/mpr121.h ****         WriteRegister(MPR121_MHDR, 0x01);
 9988              		.loc 10 134 22
 9989 007e 0122     		movs	r2, #1
 9990 0080 2B21     		movs	r1, #43
 9991 0082 7868     		ldr	r0, [r7, #4]
 9992 0084 FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
 135:../../libDaisy//src/dev/mpr121.h ****         WriteRegister(MPR121_NHDR, 0x01);
 9993              		.loc 10 135 22
 9994 0088 0122     		movs	r2, #1
 9995 008a 2C21     		movs	r1, #44
 9996 008c 7868     		ldr	r0, [r7, #4]
 9997 008e FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
 136:../../libDaisy//src/dev/mpr121.h ****         WriteRegister(MPR121_NCLR, 0x0E);
 9998              		.loc 10 136 22
 9999 0092 0E22     		movs	r2, #14
 10000 0094 2D21     		movs	r1, #45
 10001 0096 7868     		ldr	r0, [r7, #4]
 10002 0098 FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
 137:../../libDaisy//src/dev/mpr121.h ****         WriteRegister(MPR121_FDLR, 0x00);
 10003              		.loc 10 137 22
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 243


 10004 009c 0022     		movs	r2, #0
 10005 009e 2E21     		movs	r1, #46
 10006 00a0 7868     		ldr	r0, [r7, #4]
 10007 00a2 FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
 138:../../libDaisy//src/dev/mpr121.h **** 
 139:../../libDaisy//src/dev/mpr121.h ****         WriteRegister(MPR121_MHDF, 0x01);
 10008              		.loc 10 139 22
 10009 00a6 0122     		movs	r2, #1
 10010 00a8 2F21     		movs	r1, #47
 10011 00aa 7868     		ldr	r0, [r7, #4]
 10012 00ac FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
 140:../../libDaisy//src/dev/mpr121.h ****         WriteRegister(MPR121_NHDF, 0x05);
 10013              		.loc 10 140 22
 10014 00b0 0522     		movs	r2, #5
 10015 00b2 3021     		movs	r1, #48
 10016 00b4 7868     		ldr	r0, [r7, #4]
 10017 00b6 FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
 141:../../libDaisy//src/dev/mpr121.h ****         WriteRegister(MPR121_NCLF, 0x01);
 10018              		.loc 10 141 22
 10019 00ba 0122     		movs	r2, #1
 10020 00bc 3121     		movs	r1, #49
 10021 00be 7868     		ldr	r0, [r7, #4]
 10022 00c0 FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
 142:../../libDaisy//src/dev/mpr121.h ****         WriteRegister(MPR121_FDLF, 0x00);
 10023              		.loc 10 142 22
 10024 00c4 0022     		movs	r2, #0
 10025 00c6 3221     		movs	r1, #50
 10026 00c8 7868     		ldr	r0, [r7, #4]
 10027 00ca FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
 143:../../libDaisy//src/dev/mpr121.h **** 
 144:../../libDaisy//src/dev/mpr121.h ****         WriteRegister(MPR121_NHDT, 0x00);
 10028              		.loc 10 144 22
 10029 00ce 0022     		movs	r2, #0
 10030 00d0 3321     		movs	r1, #51
 10031 00d2 7868     		ldr	r0, [r7, #4]
 10032 00d4 FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
 145:../../libDaisy//src/dev/mpr121.h ****         WriteRegister(MPR121_NCLT, 0x00);
 10033              		.loc 10 145 22
 10034 00d8 0022     		movs	r2, #0
 10035 00da 3421     		movs	r1, #52
 10036 00dc 7868     		ldr	r0, [r7, #4]
 10037 00de FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
 146:../../libDaisy//src/dev/mpr121.h ****         WriteRegister(MPR121_FDLT, 0x00);
 10038              		.loc 10 146 22
 10039 00e2 0022     		movs	r2, #0
 10040 00e4 3521     		movs	r1, #53
 10041 00e6 7868     		ldr	r0, [r7, #4]
 10042 00e8 FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
 147:../../libDaisy//src/dev/mpr121.h **** 
 148:../../libDaisy//src/dev/mpr121.h ****         WriteRegister(MPR121_DEBOUNCE, 0);
 10043              		.loc 10 148 22
 10044 00ec 0022     		movs	r2, #0
 10045 00ee 5B21     		movs	r1, #91
 10046 00f0 7868     		ldr	r0, [r7, #4]
 10047 00f2 FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
 149:../../libDaisy//src/dev/mpr121.h ****         WriteRegister(MPR121_CONFIG1, 0x10); // default, 16uA charge current
 10048              		.loc 10 149 22
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 244


 10049 00f6 1022     		movs	r2, #16
 10050 00f8 5C21     		movs	r1, #92
 10051 00fa 7868     		ldr	r0, [r7, #4]
 10052 00fc FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
 150:../../libDaisy//src/dev/mpr121.h ****         WriteRegister(MPR121_CONFIG2, 0x20); // 0.5uS encoding, 1ms period
 10053              		.loc 10 150 22
 10054 0100 2022     		movs	r2, #32
 10055 0102 5D21     		movs	r1, #93
 10056 0104 7868     		ldr	r0, [r7, #4]
 10057 0106 FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
 151:../../libDaisy//src/dev/mpr121.h **** 
 152:../../libDaisy//src/dev/mpr121.h ****         // autoconfig
 153:../../libDaisy//src/dev/mpr121.h ****         // WriteRegister(MPR121_AUTOCONFIG0, 0x0B);
 154:../../libDaisy//src/dev/mpr121.h **** 
 155:../../libDaisy//src/dev/mpr121.h ****         // correct values for Vdd = 3.3V
 156:../../libDaisy//src/dev/mpr121.h ****         // WriteRegister(MPR121_UPLIMIT, 200);     // ((Vdd - 0.7)/Vdd) * 256
 157:../../libDaisy//src/dev/mpr121.h ****         // WriteRegister(MPR121_TARGETLIMIT, 180); // UPLIMIT * 0.9
 158:../../libDaisy//src/dev/mpr121.h ****         // WriteRegister(MPR121_LOWLIMIT, 130);    // UPLIMIT * 0.65
 159:../../libDaisy//src/dev/mpr121.h ****         // autoconfig
 160:../../libDaisy//src/dev/mpr121.h **** 
 161:../../libDaisy//src/dev/mpr121.h ****         // enable X electrodes and start MPR121
 162:../../libDaisy//src/dev/mpr121.h ****         uint8_t ECR_SETTING
 10058              		.loc 10 162 17
 10059 010a 8C23     		movs	r3, #140
 10060 010c FB73     		strb	r3, [r7, #15]
 163:../../libDaisy//src/dev/mpr121.h ****             = 0x80
 164:../../libDaisy//src/dev/mpr121.h ****               + 12; // 5 bits for baseline tracking & proximity disabled + X
 165:../../libDaisy//src/dev/mpr121.h ****                     // amount of electrodes running (12)
 166:../../libDaisy//src/dev/mpr121.h ****         WriteRegister(MPR121_ECR,
 10061              		.loc 10 166 22
 10062 010e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 10063 0110 1A46     		mov	r2, r3
 10064 0112 5E21     		movs	r1, #94
 10065 0114 7868     		ldr	r0, [r7, #4]
 10066 0116 FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
 167:../../libDaisy//src/dev/mpr121.h ****                       ECR_SETTING); // start with above ECR setting
 168:../../libDaisy//src/dev/mpr121.h **** 
 169:../../libDaisy//src/dev/mpr121.h ****         return GetTransportErr();
 10067              		.loc 10 169 31
 10068 011a 7868     		ldr	r0, [r7, #4]
 10069 011c FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15GetTransportErrEv
 10070 0120 0346     		mov	r3, r0
 170:../../libDaisy//src/dev/mpr121.h ****     }
 10071              		.loc 10 170 5
 10072 0122 1846     		mov	r0, r3
 10073 0124 1037     		adds	r7, r7, #16
 10074              		.cfi_def_cfa_offset 32
 10075 0126 BD46     		mov	sp, r7
 10076              		.cfi_def_cfa_register 13
 10077              		@ sp needed
 10078 0128 BDE8B040 		pop	{r4, r5, r7, lr}
 10079              		.cfi_restore 14
 10080              		.cfi_restore 7
 10081              		.cfi_restore 5
 10082              		.cfi_restore 4
 10083              		.cfi_def_cfa_offset 16
 10084 012c 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 245


 10085              		.cfi_def_cfa_offset 0
 10086 012e 7047     		bx	lr
 10087              		.cfi_endproc
 10088              	.LFE5080:
 10090              		.section	.text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE7TouchedEv,"axG",%progbits,_ZN5daisy6Mpr1
 10091              		.align	1
 10092              		.weak	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE7TouchedEv
 10093              		.syntax unified
 10094              		.thumb
 10095              		.thumb_func
 10096              		.fpu fpv5-d16
 10098              	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE7TouchedEv:
 10099              	.LFB5081:
 171:../../libDaisy//src/dev/mpr121.h **** 
 172:../../libDaisy//src/dev/mpr121.h ****     /** Set the touch and release thresholds for all 13 channels on the
 173:../../libDaisy//src/dev/mpr121.h ****         device to the passed values.
 174:../../libDaisy//src/dev/mpr121.h ****         \param      touch The touch threshold value from 0 to 255.
 175:../../libDaisy//src/dev/mpr121.h ****         \param      release The release threshold from 0 to 255.
 176:../../libDaisy//src/dev/mpr121.h ****     */
 177:../../libDaisy//src/dev/mpr121.h ****     void SetThresholds(uint8_t touch, uint8_t release)
 178:../../libDaisy//src/dev/mpr121.h ****     {
 179:../../libDaisy//src/dev/mpr121.h ****         // set all thresholds (the same)
 180:../../libDaisy//src/dev/mpr121.h ****         for(uint8_t i = 0; i < 12; i++)
 181:../../libDaisy//src/dev/mpr121.h ****         {
 182:../../libDaisy//src/dev/mpr121.h ****             WriteRegister(MPR121_TOUCHTH_0 + 2 * i, touch);
 183:../../libDaisy//src/dev/mpr121.h ****             WriteRegister(MPR121_RELEASETH_0 + 2 * i, release);
 184:../../libDaisy//src/dev/mpr121.h ****         }
 185:../../libDaisy//src/dev/mpr121.h ****     }
 186:../../libDaisy//src/dev/mpr121.h **** 
 187:../../libDaisy//src/dev/mpr121.h **** 
 188:../../libDaisy//src/dev/mpr121.h ****     /** Read the filtered data from channel t. The ADC raw data outputs
 189:../../libDaisy//src/dev/mpr121.h ****         run through 3 levels of digital filtering to filter out the high
 190:../../libDaisy//src/dev/mpr121.h ****         frequency and low frequency noise encountered. For detailed information on
 191:../../libDaisy//src/dev/mpr121.h ****         this filtering see page 6 of the device datasheet.
 192:../../libDaisy//src/dev/mpr121.h ****         \param      t the channel to read
 193:../../libDaisy//src/dev/mpr121.h ****         \returns    the filtered reading as a 10 bit unsigned value
 194:../../libDaisy//src/dev/mpr121.h ****     */
 195:../../libDaisy//src/dev/mpr121.h ****     uint16_t FilteredData(uint8_t t)
 196:../../libDaisy//src/dev/mpr121.h ****     {
 197:../../libDaisy//src/dev/mpr121.h ****         if(t > 12)
 198:../../libDaisy//src/dev/mpr121.h ****             return 0;
 199:../../libDaisy//src/dev/mpr121.h ****         return ReadRegister16(MPR121_FILTDATA_0L + t * 2);
 200:../../libDaisy//src/dev/mpr121.h ****     }
 201:../../libDaisy//src/dev/mpr121.h **** 
 202:../../libDaisy//src/dev/mpr121.h ****     /** Read the baseline value for the channel. The 3rd level filtered
 203:../../libDaisy//src/dev/mpr121.h ****         result is internally 10bit but only high 8 bits are readable
 204:../../libDaisy//src/dev/mpr121.h ****         from registers 0x1E~0x2A as the baseline value output for each channel.
 205:../../libDaisy//src/dev/mpr121.h ****         \param      t the channel to read.
 206:../../libDaisy//src/dev/mpr121.h ****         \returns    the baseline data that was read
 207:../../libDaisy//src/dev/mpr121.h ****     */
 208:../../libDaisy//src/dev/mpr121.h ****     uint16_t BaselineData(uint8_t t)
 209:../../libDaisy//src/dev/mpr121.h ****     {
 210:../../libDaisy//src/dev/mpr121.h ****         if(t > 12)
 211:../../libDaisy//src/dev/mpr121.h ****             return 0;
 212:../../libDaisy//src/dev/mpr121.h ****         uint16_t bl = ReadRegister8(MPR121_BASELINE_0 + t);
 213:../../libDaisy//src/dev/mpr121.h ****         return (bl << 2);
 214:../../libDaisy//src/dev/mpr121.h ****     }
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 246


 215:../../libDaisy//src/dev/mpr121.h **** 
 216:../../libDaisy//src/dev/mpr121.h ****     /** Read the touch status of all 13 channels as bit values in a 12 bit integer.
 217:../../libDaisy//src/dev/mpr121.h ****         \returns    a 12 bit integer with each bit corresponding to the touch status
 218:../../libDaisy//src/dev/mpr121.h ****         of a sensor. For example, if bit 0 is set then channel 0 of the
 219:../../libDaisy//src/dev/mpr121.h ****         device is currently deemed to be touched.
 220:../../libDaisy//src/dev/mpr121.h ****     */
 221:../../libDaisy//src/dev/mpr121.h ****     uint16_t Touched()
 10100              		.loc 10 221 14
 10101              		.cfi_startproc
 10102              		@ args = 0, pretend = 0, frame = 16
 10103              		@ frame_needed = 1, uses_anonymous_args = 0
 10104 0000 80B5     		push	{r7, lr}
 10105              		.cfi_def_cfa_offset 8
 10106              		.cfi_offset 7, -8
 10107              		.cfi_offset 14, -4
 10108 0002 84B0     		sub	sp, sp, #16
 10109              		.cfi_def_cfa_offset 24
 10110 0004 00AF     		add	r7, sp, #0
 10111              		.cfi_def_cfa_register 7
 10112 0006 7860     		str	r0, [r7, #4]
 222:../../libDaisy//src/dev/mpr121.h ****     {
 223:../../libDaisy//src/dev/mpr121.h ****         uint16_t t = ReadRegister16(MPR121_TOUCHSTATUS_L);
 10113              		.loc 10 223 36
 10114 0008 0021     		movs	r1, #0
 10115 000a 7868     		ldr	r0, [r7, #4]
 10116 000c FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE14ReadRegister16Eh
 10117 0010 0346     		mov	r3, r0
 10118 0012 FB81     		strh	r3, [r7, #14]	@ movhi
 224:../../libDaisy//src/dev/mpr121.h ****         return t & 0x0FFF;
 10119              		.loc 10 224 20
 10120 0014 FB89     		ldrh	r3, [r7, #14]	@ movhi
 10121 0016 C3F30B03 		ubfx	r3, r3, #0, #12
 10122 001a 9BB2     		uxth	r3, r3
 225:../../libDaisy//src/dev/mpr121.h ****     }
 10123              		.loc 10 225 5
 10124 001c 1846     		mov	r0, r3
 10125 001e 1037     		adds	r7, r7, #16
 10126              		.cfi_def_cfa_offset 8
 10127 0020 BD46     		mov	sp, r7
 10128              		.cfi_def_cfa_register 13
 10129              		@ sp needed
 10130 0022 80BD     		pop	{r7, pc}
 10131              		.cfi_endproc
 10132              	.LFE5081:
 10134              		.section	.text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEEC2Ev,"axG",%progbits,_ZN5daisy6Mpr121INS_
 10135              		.align	1
 10136              		.weak	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEEC2Ev
 10137              		.syntax unified
 10138              		.thumb
 10139              		.thumb_func
 10140              		.fpu fpv5-d16
 10142              	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEEC2Ev:
 10143              	.LFB5083:
  90:../../libDaisy//src/dev/mpr121.h ****     ~Mpr121() {}
 10144              		.loc 10 90 5
 10145              		.cfi_startproc
 10146              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 247


 10147              		@ frame_needed = 1, uses_anonymous_args = 0
 10148 0000 80B5     		push	{r7, lr}
 10149              		.cfi_def_cfa_offset 8
 10150              		.cfi_offset 7, -8
 10151              		.cfi_offset 14, -4
 10152 0002 82B0     		sub	sp, sp, #8
 10153              		.cfi_def_cfa_offset 16
 10154 0004 00AF     		add	r7, sp, #0
 10155              		.cfi_def_cfa_register 7
 10156 0006 7860     		str	r0, [r7, #4]
 10157              	.LBB67:
  90:../../libDaisy//src/dev/mpr121.h ****     ~Mpr121() {}
 10158              		.loc 10 90 14
 10159 0008 7B68     		ldr	r3, [r7, #4]
 10160 000a 1846     		mov	r0, r3
 10161 000c FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE6ConfigC1Ev
 10162 0010 7B68     		ldr	r3, [r7, #4]
 10163 0012 1833     		adds	r3, r3, #24
 10164 0014 1846     		mov	r0, r3
 10165 0016 FFF7FEFF 		bl	_ZN5daisy18Mpr121I2CTransportC1Ev
 10166              	.LBE67:
  90:../../libDaisy//src/dev/mpr121.h ****     ~Mpr121() {}
 10167              		.loc 10 90 15
 10168 001a 7B68     		ldr	r3, [r7, #4]
 10169 001c 1846     		mov	r0, r3
 10170 001e 0837     		adds	r7, r7, #8
 10171              		.cfi_def_cfa_offset 8
 10172 0020 BD46     		mov	sp, r7
 10173              		.cfi_def_cfa_register 13
 10174              		@ sp needed
 10175 0022 80BD     		pop	{r7, pc}
 10176              		.cfi_endproc
 10177              	.LFE5083:
 10179              		.weak	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEEC1Ev
 10180              		.thumb_set _ZN5daisy6Mpr121INS_18Mpr121I2CTransportEEC1Ev,_ZN5daisy6Mpr121INS_18Mpr121I2CTransport
 10181              		.section	.text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEED2Ev,"axG",%progbits,_ZN5daisy6Mpr121INS_
 10182              		.align	1
 10183              		.weak	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEED2Ev
 10184              		.syntax unified
 10185              		.thumb
 10186              		.thumb_func
 10187              		.fpu fpv5-d16
 10189              	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEED2Ev:
 10190              	.LFB5086:
  91:../../libDaisy//src/dev/mpr121.h **** 
 10191              		.loc 10 91 5
 10192              		.cfi_startproc
 10193              		@ args = 0, pretend = 0, frame = 8
 10194              		@ frame_needed = 1, uses_anonymous_args = 0
 10195 0000 80B5     		push	{r7, lr}
 10196              		.cfi_def_cfa_offset 8
 10197              		.cfi_offset 7, -8
 10198              		.cfi_offset 14, -4
 10199 0002 82B0     		sub	sp, sp, #8
 10200              		.cfi_def_cfa_offset 16
 10201 0004 00AF     		add	r7, sp, #0
 10202              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 248


 10203 0006 7860     		str	r0, [r7, #4]
 10204              	.LBB68:
  91:../../libDaisy//src/dev/mpr121.h **** 
 10205              		.loc 10 91 16
 10206 0008 7B68     		ldr	r3, [r7, #4]
 10207 000a 1833     		adds	r3, r3, #24
 10208 000c 1846     		mov	r0, r3
 10209 000e FFF7FEFF 		bl	_ZN5daisy18Mpr121I2CTransportD1Ev
 10210              	.LBE68:
 10211 0012 7B68     		ldr	r3, [r7, #4]
 10212 0014 1846     		mov	r0, r3
 10213 0016 0837     		adds	r7, r7, #8
 10214              		.cfi_def_cfa_offset 8
 10215 0018 BD46     		mov	sp, r7
 10216              		.cfi_def_cfa_register 13
 10217              		@ sp needed
 10218 001a 80BD     		pop	{r7, pc}
 10219              		.cfi_endproc
 10220              	.LFE5086:
 10222              		.weak	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEED1Ev
 10223              		.thumb_set _ZN5daisy6Mpr121INS_18Mpr121I2CTransportEED1Ev,_ZN5daisy6Mpr121INS_18Mpr121I2CTransport
 10224              		.section	.text._ZSt4fminIfdEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2
 10225              		.align	1
 10226              		.weak	_ZSt4fminIfdEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valu
 10227              		.syntax unified
 10228              		.thumb
 10229              		.thumb_func
 10230              		.fpu fpv5-d16
 10232              	_ZSt4fminIfdEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__t
 10233              	.LFB5088:
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sin;
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sin(float __x)
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sin(long double __x)
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinl(__x); }
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     sin(_Tp __x)
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_sin(__x); }
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sinh;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sinh(float __x)
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinhf(__x); }
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 249


 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sinh(long double __x)
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinhl(__x); }
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     sinh(_Tp __x)
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_sinh(__x); }
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sqrt;
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sqrt(float __x)
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sqrtf(__x); }
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sqrt(long double __x)
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sqrtl(__x); }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     sqrt(_Tp __x)
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_sqrt(__x); }
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::tan;
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   tan(float __x)
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_tanf(__x); }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   tan(long double __x)
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_tanl(__x); }
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     tan(_Tp __x)
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_tan(__x); }
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::tanh;
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   tanh(float __x)
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_tanhf(__x); }
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 250


 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   tanh(long double __x)
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_tanhl(__x); }
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     tanh(_Tp __x)
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_tanh(__x); }
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if _GLIBCXX_USE_C99_MATH
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // These are possible macros imported from C99-land.
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fpclassify
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isfinite
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isinf
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isnan
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isnormal
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef signbit
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isgreater
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isgreaterequal
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isless
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef islessequal
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef islessgreater
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isunordered
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if __cplusplus >= 201103L
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr int
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fpclassify(float __x)
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr int
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fpclassify(double __x)
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr int
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fpclassify(long double __x)
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               int>::__type
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fpclassify(_Tp __x)
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 251


 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isfinite(float __x)
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isfinite(__x); }
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isfinite(double __x)
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isfinite(__x); }
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isfinite(long double __x)
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isfinite(__x); }
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               bool>::__type
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isfinite(_Tp __x)
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return true; }
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isinf(float __x)
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isinf(__x); }
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::isinf;
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #else
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isinf(double __x)
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isinf(__x); }
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isinf(long double __x)
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isinf(__x); }
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               bool>::__type
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isinf(_Tp __x)
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return false; }
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnan(float __x)
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnan(__x); }
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::isnan;
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #else
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 252


 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnan(double __x)
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnan(__x); }
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnan(long double __x)
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnan(__x); }
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               bool>::__type
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isnan(_Tp __x)
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return false; }
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnormal(float __x)
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnormal(__x); }
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnormal(double __x)
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnormal(__x); }
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnormal(long double __x)
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnormal(__x); }
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               bool>::__type
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isnormal(_Tp __x)
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __x != 0 ? true : false; }
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   signbit(float __x)
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_signbit(__x); }
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   signbit(double __x)
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_signbit(__x); }
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   signbit(long double __x)
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_signbit(__x); }
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 253


 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               bool>::__type
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     signbit(_Tp __x)
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __x < 0 ? true : false; }
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreater(float __x, float __y)
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreater(double __x, double __y)
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreater(long double __x, long double __y)
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isgreater(_Tp __x, _Up __y)
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreaterequal(float __x, float __y)
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreaterequal(double __x, double __y)
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreaterequal(long double __x, long double __y)
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 254


 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isless(float __x, float __y)
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isless(__x, __y); }
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isless(double __x, double __y)
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isless(__x, __y); }
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isless(long double __x, long double __y)
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isless(__x, __y); }
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isless(_Tp __x, _Up __y)
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessequal(float __x, float __y)
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessequal(__x, __y); }
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessequal(double __x, double __y)
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessequal(__x, __y); }
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessequal(long double __x, long double __y)
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessequal(__x, __y); }
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     islessequal(_Tp __x, _Up __y)
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessgreater(float __x, float __y)
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 255


 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessgreater(double __x, double __y)
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessgreater(long double __x, long double __y)
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     islessgreater(_Tp __x, _Up __y)
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isunordered(float __x, float __y)
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isunordered(double __x, double __y)
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isunordered(long double __x, long double __y)
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isunordered(_Tp __x, _Up __y)
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #else
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fpclassify(_Tp __f)
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 256


 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isfinite(_Tp __f)
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isfinite(__type(__f));
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isinf(_Tp __f)
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isinf(__type(__f));
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isnan(_Tp __f)
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isnan(__type(__f));
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isnormal(_Tp __f)
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isnormal(__type(__f));
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     signbit(_Tp __f)
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_signbit(__type(__f));
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 257


 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isless(_Tp __f1, _Tp __f2)
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif // C++11
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if __cplusplus >= 201103L
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acosh
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acoshf
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acoshl
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asinh
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 258


 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asinhf
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asinhl
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atanh
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atanhf
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atanhl
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cbrt
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cbrtf
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cbrtl
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef copysign
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef copysignf
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef copysignl
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erf
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erff
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erfl
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erfc
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erfcf
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erfcl
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp2
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp2f
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp2l
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef expm1
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef expm1f
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef expm1l
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fdim
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fdimf
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fdiml
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fma
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmaf
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmal
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmax
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmaxf
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmaxl
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmin
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fminf
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fminl
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef hypot
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef hypotf
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef hypotl
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ilogb
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ilogbf
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ilogbl
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lgamma
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lgammaf
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lgammal
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llrint
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llrintf
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llrintl
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llround
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llroundf
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llroundl
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log1p
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log1pf
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log1pl
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log2
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log2f
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 259


1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log2l
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef logb
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef logbf
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef logbl
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lrint
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lrintf
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lrintl
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lround
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lroundf
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lroundl
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nan
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nanf
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nanl
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nearbyint
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nearbyintf
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nearbyintl
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nextafter
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nextafterf
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nextafterl
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nexttoward
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nexttowardf
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nexttowardl
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remainder
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remainderf
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remainderl
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remquo
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remquof
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remquol
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef rint
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef rintf
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef rintl
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef round
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef roundf
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef roundl
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalbln
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalblnf
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalblnl
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalbn
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalbnf
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalbnl
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tgamma
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tgammaf
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tgammal
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef trunc
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef truncf
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef truncl
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // types
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::double_t;
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::float_t;
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // functions
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acosh;
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acoshf;
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acoshl;
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asinh;
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 260


1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asinhf;
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asinhl;
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atanh;
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atanhf;
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atanhl;
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cbrt;
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cbrtf;
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cbrtl;
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::copysign;
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::copysignf;
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::copysignl;
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erf;
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erff;
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erfl;
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erfc;
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erfcf;
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erfcl;
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp2;
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp2f;
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp2l;
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::expm1;
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::expm1f;
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::expm1l;
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fdim;
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fdimf;
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fdiml;
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fma;
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmaf;
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmal;
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmax;
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmaxf;
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmaxl;
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmin;
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fminf;
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fminl;
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::hypot;
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::hypotf;
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::hypotl;
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ilogb;
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ilogbf;
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ilogbl;
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lgamma;
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lgammaf;
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 261


1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lgammal;
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llrint;
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llrintf;
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llrintl;
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llround;
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llroundf;
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llroundl;
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log1p;
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log1pf;
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log1pl;
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log2;
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log2f;
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log2l;
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::logb;
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::logbf;
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::logbl;
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lrint;
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lrintf;
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lrintl;
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lround;
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lroundf;
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lroundl;
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nan;
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nanf;
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nanl;
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nearbyint;
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nearbyintf;
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nearbyintl;
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nextafter;
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nextafterf;
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nextafterl;
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nexttoward;
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nexttowardf;
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nexttowardl;
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remainder;
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remainderf;
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remainderl;
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remquo;
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remquof;
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remquol;
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::rint;
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 262


1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::rintf;
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::rintl;
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::round;
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::roundf;
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::roundl;
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalbln;
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalblnf;
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalblnl;
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalbn;
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalbnf;
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalbnl;
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::tgamma;
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::tgammaf;
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::tgammal;
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::trunc;
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::truncf;
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::truncl;
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   /// Additional overloads.
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acosh(float __x)
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acoshf(__x); }
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acosh(long double __x)
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acoshl(__x); }
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     acosh(_Tp __x)
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_acosh(__x); }
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asinh(float __x)
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinhf(__x); }
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asinh(long double __x)
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinhl(__x); }
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     asinh(_Tp __x)
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 263


1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_asinh(__x); }
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atanh(float __x)
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanhf(__x); }
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atanh(long double __x)
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanhl(__x); }
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     atanh(_Tp __x)
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_atanh(__x); }
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cbrt(float __x)
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cbrtf(__x); }
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cbrt(long double __x)
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cbrtl(__x); }
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     cbrt(_Tp __x)
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cbrt(__x); }
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   copysign(float __x, float __y)
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_copysignf(__x, __y); }
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   copysign(long double __x, long double __y)
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_copysignl(__x, __y); }
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     copysign(_Tp __x, _Up __y)
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return copysign(__type(__x), __type(__y));
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 264


1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   erf(float __x)
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_erff(__x); }
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   erf(long double __x)
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_erfl(__x); }
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     erf(_Tp __x)
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_erf(__x); }
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   erfc(float __x)
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_erfcf(__x); }
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   erfc(long double __x)
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_erfcl(__x); }
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     erfc(_Tp __x)
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_erfc(__x); }
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp2(float __x)
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_exp2f(__x); }
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp2(long double __x)
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_exp2l(__x); }
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     exp2(_Tp __x)
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_exp2(__x); }
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 265


1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   expm1(float __x)
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expm1f(__x); }
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   expm1(long double __x)
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expm1l(__x); }
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     expm1(_Tp __x)
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_expm1(__x); }
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fdim(float __x, float __y)
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fdimf(__x, __y); }
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fdim(long double __x, long double __y)
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fdiml(__x, __y); }
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fdim(_Tp __x, _Up __y)
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fdim(__type(__x), __type(__y));
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fma(float __x, float __y, float __z)
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fma(long double __x, long double __y, long double __z)
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 266


1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmax(float __x, float __y)
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmax(long double __x, long double __y)
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fmax(_Tp __x, _Up __y)
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fmax(__type(__x), __type(__y));
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmin(float __x, float __y)
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fminf(__x, __y); }
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmin(long double __x, long double __y)
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fminl(__x, __y); }
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fmin(_Tp __x, _Up __y)
 10234              		.loc 1 1449 5
 10235              		.cfi_startproc
 10236              		@ args = 0, pretend = 0, frame = 16
 10237              		@ frame_needed = 1, uses_anonymous_args = 0
 10238 0000 80B5     		push	{r7, lr}
 10239              		.cfi_def_cfa_offset 8
 10240              		.cfi_offset 7, -8
 10241              		.cfi_offset 14, -4
 10242 0002 84B0     		sub	sp, sp, #16
 10243              		.cfi_def_cfa_offset 24
 10244 0004 00AF     		add	r7, sp, #0
 10245              		.cfi_def_cfa_register 7
 10246 0006 87ED030A 		vstr.32	s0, [r7, #12]
 10247 000a 87ED001B 		vstr.64	d1, [r7]
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fmin(__type(__x), __type(__y));
 10248              		.loc 1 1452 18
 10249 000e D7ED037A 		vldr.32	s15, [r7, #12]
 10250 0012 B7EEE77A 		vcvt.f64.f32	d7, s15
 10251 0016 97ED001B 		vldr.64	d1, [r7]
 10252 001a B0EE470B 		vmov.f64	d0, d7
 10253 001e FFF7FEFF 		bl	fmin
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 267


 10254 0022 B0EE407B 		vmov.f64	d7, d0
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 10255              		.loc 1 1453 5
 10256 0026 B0EE470B 		vmov.f64	d0, d7
 10257 002a 1037     		adds	r7, r7, #16
 10258              		.cfi_def_cfa_offset 8
 10259 002c BD46     		mov	sp, r7
 10260              		.cfi_def_cfa_register 13
 10261              		@ sp needed
 10262 002e 80BD     		pop	{r7, pc}
 10263              		.cfi_endproc
 10264              	.LFE5088:
 10266              		.section	.text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15SetTransportErrEb,"axG",%progbits,_ZN5d
 10267              		.align	1
 10268              		.weak	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15SetTransportErrEb
 10269              		.syntax unified
 10270              		.thumb
 10271              		.thumb_func
 10272              		.fpu fpv5-d16
 10274              	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15SetTransportErrEb:
 10275              	.LFB5206:
 226:../../libDaisy//src/dev/mpr121.h **** 
 227:../../libDaisy//src/dev/mpr121.h ****     /** Read the contents of an 8 bit device register.
 228:../../libDaisy//src/dev/mpr121.h ****         \param      reg the register address to read from
 229:../../libDaisy//src/dev/mpr121.h ****         \returns    the 8 bit value that was read.
 230:../../libDaisy//src/dev/mpr121.h ****     */
 231:../../libDaisy//src/dev/mpr121.h ****     uint8_t ReadRegister8(uint8_t reg)
 232:../../libDaisy//src/dev/mpr121.h ****     {
 233:../../libDaisy//src/dev/mpr121.h ****         uint8_t buff;
 234:../../libDaisy//src/dev/mpr121.h ****         SetTransportErr(transport_.Write(&reg, 1));
 235:../../libDaisy//src/dev/mpr121.h ****         SetTransportErr(transport_.Read(&buff, 1));
 236:../../libDaisy//src/dev/mpr121.h **** 
 237:../../libDaisy//src/dev/mpr121.h ****         return buff;
 238:../../libDaisy//src/dev/mpr121.h ****     }
 239:../../libDaisy//src/dev/mpr121.h **** 
 240:../../libDaisy//src/dev/mpr121.h ****     /** Read the contents of a 16 bit device register.
 241:../../libDaisy//src/dev/mpr121.h ****         \param      reg the register address to read from
 242:../../libDaisy//src/dev/mpr121.h ****         \returns    the 16 bit value that was read.
 243:../../libDaisy//src/dev/mpr121.h ****     */
 244:../../libDaisy//src/dev/mpr121.h ****     uint16_t ReadRegister16(uint8_t reg)
 245:../../libDaisy//src/dev/mpr121.h ****     {
 246:../../libDaisy//src/dev/mpr121.h ****         uint16_t buff;
 247:../../libDaisy//src/dev/mpr121.h ****         SetTransportErr(transport_.Write(&reg, 1));
 248:../../libDaisy//src/dev/mpr121.h ****         SetTransportErr(transport_.Read((uint8_t *)&buff, 2));
 249:../../libDaisy//src/dev/mpr121.h **** 
 250:../../libDaisy//src/dev/mpr121.h ****         return buff;
 251:../../libDaisy//src/dev/mpr121.h ****     }
 252:../../libDaisy//src/dev/mpr121.h **** 
 253:../../libDaisy//src/dev/mpr121.h ****     /** Writes 8-bits to the specified destination register
 254:../../libDaisy//src/dev/mpr121.h ****         \param  reg the register address to write to
 255:../../libDaisy//src/dev/mpr121.h ****         \param  value the value to write
 256:../../libDaisy//src/dev/mpr121.h ****     */
 257:../../libDaisy//src/dev/mpr121.h ****     void WriteRegister(uint8_t reg, uint8_t value)
 258:../../libDaisy//src/dev/mpr121.h ****     {
 259:../../libDaisy//src/dev/mpr121.h ****         // MPR121 must be put in Stop Mode to write to most registers
 260:../../libDaisy//src/dev/mpr121.h ****         bool stop_required = true;
 261:../../libDaisy//src/dev/mpr121.h **** 
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 268


 262:../../libDaisy//src/dev/mpr121.h ****         // first get the current set value of the MPR121_ECR register
 263:../../libDaisy//src/dev/mpr121.h ****         uint8_t ecr_reg = MPR121_ECR;
 264:../../libDaisy//src/dev/mpr121.h ****         uint8_t buff[2] = {ecr_reg, 0x00};
 265:../../libDaisy//src/dev/mpr121.h **** 
 266:../../libDaisy//src/dev/mpr121.h ****         SetTransportErr(transport_.Write(buff, 1));
 267:../../libDaisy//src/dev/mpr121.h **** 
 268:../../libDaisy//src/dev/mpr121.h ****         uint8_t ecr_backup;
 269:../../libDaisy//src/dev/mpr121.h ****         SetTransportErr(transport_.Read(&ecr_backup, 1));
 270:../../libDaisy//src/dev/mpr121.h ****         if((reg == MPR121_ECR) || ((0x73 <= reg) && (reg <= 0x7A)))
 271:../../libDaisy//src/dev/mpr121.h ****         {
 272:../../libDaisy//src/dev/mpr121.h ****             stop_required = false;
 273:../../libDaisy//src/dev/mpr121.h ****         }
 274:../../libDaisy//src/dev/mpr121.h **** 
 275:../../libDaisy//src/dev/mpr121.h ****         if(stop_required)
 276:../../libDaisy//src/dev/mpr121.h ****         {
 277:../../libDaisy//src/dev/mpr121.h ****             // clear this register to set stop mode
 278:../../libDaisy//src/dev/mpr121.h ****             SetTransportErr(transport_.Write(buff, 2));
 279:../../libDaisy//src/dev/mpr121.h ****         }
 280:../../libDaisy//src/dev/mpr121.h **** 
 281:../../libDaisy//src/dev/mpr121.h ****         buff[0] = reg;
 282:../../libDaisy//src/dev/mpr121.h ****         buff[1] = value;
 283:../../libDaisy//src/dev/mpr121.h ****         SetTransportErr(transport_.Write(buff, 2));
 284:../../libDaisy//src/dev/mpr121.h **** 
 285:../../libDaisy//src/dev/mpr121.h ****         if(stop_required)
 286:../../libDaisy//src/dev/mpr121.h ****         {
 287:../../libDaisy//src/dev/mpr121.h ****             // write back the previous set ECR settings
 288:../../libDaisy//src/dev/mpr121.h ****             buff[0] = ecr_reg;
 289:../../libDaisy//src/dev/mpr121.h ****             buff[1] = ecr_backup;
 290:../../libDaisy//src/dev/mpr121.h ****             SetTransportErr(transport_.Write(buff, 2));
 291:../../libDaisy//src/dev/mpr121.h ****         }
 292:../../libDaisy//src/dev/mpr121.h ****     }
 293:../../libDaisy//src/dev/mpr121.h **** 
 294:../../libDaisy//src/dev/mpr121.h ****     /** Device register map */
 295:../../libDaisy//src/dev/mpr121.h ****     enum RegMap
 296:../../libDaisy//src/dev/mpr121.h ****     {
 297:../../libDaisy//src/dev/mpr121.h ****         MPR121_TOUCHSTATUS_L = 0x00,
 298:../../libDaisy//src/dev/mpr121.h ****         MPR121_TOUCHSTATUS_H = 0x01,
 299:../../libDaisy//src/dev/mpr121.h ****         MPR121_FILTDATA_0L   = 0x04,
 300:../../libDaisy//src/dev/mpr121.h ****         MPR121_FILTDATA_0H   = 0x05,
 301:../../libDaisy//src/dev/mpr121.h ****         MPR121_BASELINE_0    = 0x1E,
 302:../../libDaisy//src/dev/mpr121.h ****         MPR121_MHDR          = 0x2B,
 303:../../libDaisy//src/dev/mpr121.h ****         MPR121_NHDR          = 0x2C,
 304:../../libDaisy//src/dev/mpr121.h ****         MPR121_NCLR          = 0x2D,
 305:../../libDaisy//src/dev/mpr121.h ****         MPR121_FDLR          = 0x2E,
 306:../../libDaisy//src/dev/mpr121.h ****         MPR121_MHDF          = 0x2F,
 307:../../libDaisy//src/dev/mpr121.h ****         MPR121_NHDF          = 0x30,
 308:../../libDaisy//src/dev/mpr121.h ****         MPR121_NCLF          = 0x31,
 309:../../libDaisy//src/dev/mpr121.h ****         MPR121_FDLF          = 0x32,
 310:../../libDaisy//src/dev/mpr121.h ****         MPR121_NHDT          = 0x33,
 311:../../libDaisy//src/dev/mpr121.h ****         MPR121_NCLT          = 0x34,
 312:../../libDaisy//src/dev/mpr121.h ****         MPR121_FDLT          = 0x35,
 313:../../libDaisy//src/dev/mpr121.h **** 
 314:../../libDaisy//src/dev/mpr121.h ****         MPR121_TOUCHTH_0    = 0x41,
 315:../../libDaisy//src/dev/mpr121.h ****         MPR121_RELEASETH_0  = 0x42,
 316:../../libDaisy//src/dev/mpr121.h ****         MPR121_DEBOUNCE     = 0x5B,
 317:../../libDaisy//src/dev/mpr121.h ****         MPR121_CONFIG1      = 0x5C,
 318:../../libDaisy//src/dev/mpr121.h ****         MPR121_CONFIG2      = 0x5D,
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 269


 319:../../libDaisy//src/dev/mpr121.h ****         MPR121_CHARGECURR_0 = 0x5F,
 320:../../libDaisy//src/dev/mpr121.h ****         MPR121_CHARGETIME_1 = 0x6C,
 321:../../libDaisy//src/dev/mpr121.h ****         MPR121_ECR          = 0x5E,
 322:../../libDaisy//src/dev/mpr121.h ****         MPR121_AUTOCONFIG0  = 0x7B,
 323:../../libDaisy//src/dev/mpr121.h ****         MPR121_AUTOCONFIG1  = 0x7C,
 324:../../libDaisy//src/dev/mpr121.h ****         MPR121_UPLIMIT      = 0x7D,
 325:../../libDaisy//src/dev/mpr121.h ****         MPR121_LOWLIMIT     = 0x7E,
 326:../../libDaisy//src/dev/mpr121.h ****         MPR121_TARGETLIMIT  = 0x7F,
 327:../../libDaisy//src/dev/mpr121.h **** 
 328:../../libDaisy//src/dev/mpr121.h ****         MPR121_GPIODIR    = 0x76,
 329:../../libDaisy//src/dev/mpr121.h ****         MPR121_GPIOEN     = 0x77,
 330:../../libDaisy//src/dev/mpr121.h ****         MPR121_GPIOSET    = 0x78,
 331:../../libDaisy//src/dev/mpr121.h ****         MPR121_GPIOCLR    = 0x79,
 332:../../libDaisy//src/dev/mpr121.h ****         MPR121_GPIOTOGGLE = 0x7A,
 333:../../libDaisy//src/dev/mpr121.h **** 
 334:../../libDaisy//src/dev/mpr121.h ****         MPR121_SOFTRESET = 0x80,
 335:../../libDaisy//src/dev/mpr121.h ****     };
 336:../../libDaisy//src/dev/mpr121.h **** 
 337:../../libDaisy//src/dev/mpr121.h ****   private:
 338:../../libDaisy//src/dev/mpr121.h ****     Config    config_;
 339:../../libDaisy//src/dev/mpr121.h ****     Transport transport_;
 340:../../libDaisy//src/dev/mpr121.h ****     bool      transport_error_;
 341:../../libDaisy//src/dev/mpr121.h **** 
 342:../../libDaisy//src/dev/mpr121.h ****     /** Set the global transport_error_ bool */
 343:../../libDaisy//src/dev/mpr121.h ****     void SetTransportErr(bool err) { transport_error_ |= err; }
 10276              		.loc 10 343 10
 10277              		.cfi_startproc
 10278              		@ args = 0, pretend = 0, frame = 8
 10279              		@ frame_needed = 1, uses_anonymous_args = 0
 10280              		@ link register save eliminated.
 10281 0000 80B4     		push	{r7}
 10282              		.cfi_def_cfa_offset 4
 10283              		.cfi_offset 7, -4
 10284 0002 83B0     		sub	sp, sp, #12
 10285              		.cfi_def_cfa_offset 16
 10286 0004 00AF     		add	r7, sp, #0
 10287              		.cfi_def_cfa_register 7
 10288 0006 7860     		str	r0, [r7, #4]
 10289 0008 0B46     		mov	r3, r1
 10290 000a FB70     		strb	r3, [r7, #3]
 10291              		.loc 10 343 55
 10292 000c 7B68     		ldr	r3, [r7, #4]
 10293 000e 93F83020 		ldrb	r2, [r3, #48]	@ zero_extendqisi2
 10294 0012 FB78     		ldrb	r3, [r7, #3]
 10295 0014 1343     		orrs	r3, r3, r2
 10296 0016 DBB2     		uxtb	r3, r3
 10297 0018 002B     		cmp	r3, #0
 10298 001a 14BF     		ite	ne
 10299 001c 0123     		movne	r3, #1
 10300 001e 0023     		moveq	r3, #0
 10301 0020 DAB2     		uxtb	r2, r3
 10302 0022 7B68     		ldr	r3, [r7, #4]
 10303 0024 83F83020 		strb	r2, [r3, #48]
 10304              		.loc 10 343 63
 10305 0028 00BF     		nop
 10306 002a 0C37     		adds	r7, r7, #12
 10307              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 270


 10308 002c BD46     		mov	sp, r7
 10309              		.cfi_def_cfa_register 13
 10310              		@ sp needed
 10311 002e 5DF8047B 		ldr	r7, [sp], #4
 10312              		.cfi_restore 7
 10313              		.cfi_def_cfa_offset 0
 10314 0032 7047     		bx	lr
 10315              		.cfi_endproc
 10316              	.LFE5206:
 10318              		.section	.text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh,"axG",%progbits,_ZN5da
 10319              		.align	1
 10320              		.weak	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
 10321              		.syntax unified
 10322              		.thumb
 10323              		.thumb_func
 10324              		.fpu fpv5-d16
 10326              	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh:
 10327              	.LFB5207:
 257:../../libDaisy//src/dev/mpr121.h ****     {
 10328              		.loc 10 257 10
 10329              		.cfi_startproc
 10330              		@ args = 0, pretend = 0, frame = 16
 10331              		@ frame_needed = 1, uses_anonymous_args = 0
 10332 0000 80B5     		push	{r7, lr}
 10333              		.cfi_def_cfa_offset 8
 10334              		.cfi_offset 7, -8
 10335              		.cfi_offset 14, -4
 10336 0002 84B0     		sub	sp, sp, #16
 10337              		.cfi_def_cfa_offset 24
 10338 0004 00AF     		add	r7, sp, #0
 10339              		.cfi_def_cfa_register 7
 10340 0006 7860     		str	r0, [r7, #4]
 10341 0008 0B46     		mov	r3, r1
 10342 000a FB70     		strb	r3, [r7, #3]
 10343 000c 1346     		mov	r3, r2
 10344 000e BB70     		strb	r3, [r7, #2]
 260:../../libDaisy//src/dev/mpr121.h **** 
 10345              		.loc 10 260 14
 10346 0010 0123     		movs	r3, #1
 10347 0012 FB73     		strb	r3, [r7, #15]
 263:../../libDaisy//src/dev/mpr121.h ****         uint8_t buff[2] = {ecr_reg, 0x00};
 10348              		.loc 10 263 17
 10349 0014 5E23     		movs	r3, #94
 10350 0016 BB73     		strb	r3, [r7, #14]
 264:../../libDaisy//src/dev/mpr121.h **** 
 10351              		.loc 10 264 17
 10352 0018 0023     		movs	r3, #0
 10353 001a BB81     		strh	r3, [r7, #12]	@ movhi
 10354 001c BB7B     		ldrb	r3, [r7, #14]
 10355 001e 3B73     		strb	r3, [r7, #12]
 266:../../libDaisy//src/dev/mpr121.h **** 
 10356              		.loc 10 266 24
 10357 0020 7B68     		ldr	r3, [r7, #4]
 10358 0022 1833     		adds	r3, r3, #24
 10359 0024 07F10C01 		add	r1, r7, #12
 10360 0028 0122     		movs	r2, #1
 10361 002a 1846     		mov	r0, r3
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 271


 10362 002c FFF7FEFF 		bl	_ZN5daisy18Mpr121I2CTransport5WriteEPht
 10363 0030 0346     		mov	r3, r0
 10364 0032 1946     		mov	r1, r3
 10365 0034 7868     		ldr	r0, [r7, #4]
 10366 0036 FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15SetTransportErrEb
 269:../../libDaisy//src/dev/mpr121.h ****         if((reg == MPR121_ECR) || ((0x73 <= reg) && (reg <= 0x7A)))
 10367              		.loc 10 269 24
 10368 003a 7B68     		ldr	r3, [r7, #4]
 10369 003c 1833     		adds	r3, r3, #24
 10370 003e 07F10B01 		add	r1, r7, #11
 10371 0042 0122     		movs	r2, #1
 10372 0044 1846     		mov	r0, r3
 10373 0046 FFF7FEFF 		bl	_ZN5daisy18Mpr121I2CTransport4ReadEPht
 10374 004a 0346     		mov	r3, r0
 10375 004c 1946     		mov	r1, r3
 10376 004e 7868     		ldr	r0, [r7, #4]
 10377 0050 FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15SetTransportErrEb
 270:../../libDaisy//src/dev/mpr121.h ****         {
 10378              		.loc 10 270 9
 10379 0054 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 10380 0056 5E2B     		cmp	r3, #94
 10381 0058 05D0     		beq	.L463
 270:../../libDaisy//src/dev/mpr121.h ****         {
 10382              		.loc 10 270 32 discriminator 1
 10383 005a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 10384 005c 722B     		cmp	r3, #114
 10385 005e 04D9     		bls	.L464
 270:../../libDaisy//src/dev/mpr121.h ****         {
 10386              		.loc 10 270 50 discriminator 2
 10387 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 10388 0062 7A2B     		cmp	r3, #122
 10389 0064 01D8     		bhi	.L464
 10390              	.L463:
 272:../../libDaisy//src/dev/mpr121.h ****         }
 10391              		.loc 10 272 27
 10392 0066 0023     		movs	r3, #0
 10393 0068 FB73     		strb	r3, [r7, #15]
 10394              	.L464:
 275:../../libDaisy//src/dev/mpr121.h ****         {
 10395              		.loc 10 275 9
 10396 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 10397 006c 002B     		cmp	r3, #0
 10398 006e 0CD0     		beq	.L465
 278:../../libDaisy//src/dev/mpr121.h ****         }
 10399              		.loc 10 278 28
 10400 0070 7B68     		ldr	r3, [r7, #4]
 10401 0072 1833     		adds	r3, r3, #24
 10402 0074 07F10C01 		add	r1, r7, #12
 10403 0078 0222     		movs	r2, #2
 10404 007a 1846     		mov	r0, r3
 10405 007c FFF7FEFF 		bl	_ZN5daisy18Mpr121I2CTransport5WriteEPht
 10406 0080 0346     		mov	r3, r0
 10407 0082 1946     		mov	r1, r3
 10408 0084 7868     		ldr	r0, [r7, #4]
 10409 0086 FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15SetTransportErrEb
 10410              	.L465:
 281:../../libDaisy//src/dev/mpr121.h ****         buff[1] = value;
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 272


 10411              		.loc 10 281 17
 10412 008a FB78     		ldrb	r3, [r7, #3]
 10413 008c 3B73     		strb	r3, [r7, #12]
 282:../../libDaisy//src/dev/mpr121.h ****         SetTransportErr(transport_.Write(buff, 2));
 10414              		.loc 10 282 17
 10415 008e BB78     		ldrb	r3, [r7, #2]
 10416 0090 7B73     		strb	r3, [r7, #13]
 283:../../libDaisy//src/dev/mpr121.h **** 
 10417              		.loc 10 283 24
 10418 0092 7B68     		ldr	r3, [r7, #4]
 10419 0094 1833     		adds	r3, r3, #24
 10420 0096 07F10C01 		add	r1, r7, #12
 10421 009a 0222     		movs	r2, #2
 10422 009c 1846     		mov	r0, r3
 10423 009e FFF7FEFF 		bl	_ZN5daisy18Mpr121I2CTransport5WriteEPht
 10424 00a2 0346     		mov	r3, r0
 10425 00a4 1946     		mov	r1, r3
 10426 00a6 7868     		ldr	r0, [r7, #4]
 10427 00a8 FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15SetTransportErrEb
 285:../../libDaisy//src/dev/mpr121.h ****         {
 10428              		.loc 10 285 9
 10429 00ac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 10430 00ae 002B     		cmp	r3, #0
 10431 00b0 10D0     		beq	.L467
 288:../../libDaisy//src/dev/mpr121.h ****             buff[1] = ecr_backup;
 10432              		.loc 10 288 21
 10433 00b2 BB7B     		ldrb	r3, [r7, #14]
 10434 00b4 3B73     		strb	r3, [r7, #12]
 289:../../libDaisy//src/dev/mpr121.h ****             SetTransportErr(transport_.Write(buff, 2));
 10435              		.loc 10 289 21
 10436 00b6 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 10437 00b8 7B73     		strb	r3, [r7, #13]
 290:../../libDaisy//src/dev/mpr121.h ****         }
 10438              		.loc 10 290 28
 10439 00ba 7B68     		ldr	r3, [r7, #4]
 10440 00bc 1833     		adds	r3, r3, #24
 10441 00be 07F10C01 		add	r1, r7, #12
 10442 00c2 0222     		movs	r2, #2
 10443 00c4 1846     		mov	r0, r3
 10444 00c6 FFF7FEFF 		bl	_ZN5daisy18Mpr121I2CTransport5WriteEPht
 10445 00ca 0346     		mov	r3, r0
 10446 00cc 1946     		mov	r1, r3
 10447 00ce 7868     		ldr	r0, [r7, #4]
 10448 00d0 FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15SetTransportErrEb
 10449              	.L467:
 292:../../libDaisy//src/dev/mpr121.h **** 
 10450              		.loc 10 292 5
 10451 00d4 00BF     		nop
 10452 00d6 1037     		adds	r7, r7, #16
 10453              		.cfi_def_cfa_offset 8
 10454 00d8 BD46     		mov	sp, r7
 10455              		.cfi_def_cfa_register 13
 10456              		@ sp needed
 10457 00da 80BD     		pop	{r7, pc}
 10458              		.cfi_endproc
 10459              	.LFE5207:
 10461              		.section	.text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13SetThresholdsEhh,"axG",%progbits,_ZN5da
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 273


 10462              		.align	1
 10463              		.weak	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13SetThresholdsEhh
 10464              		.syntax unified
 10465              		.thumb
 10466              		.thumb_func
 10467              		.fpu fpv5-d16
 10469              	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13SetThresholdsEhh:
 10470              	.LFB5208:
 177:../../libDaisy//src/dev/mpr121.h ****     {
 10471              		.loc 10 177 10
 10472              		.cfi_startproc
 10473              		@ args = 0, pretend = 0, frame = 16
 10474              		@ frame_needed = 1, uses_anonymous_args = 0
 10475 0000 80B5     		push	{r7, lr}
 10476              		.cfi_def_cfa_offset 8
 10477              		.cfi_offset 7, -8
 10478              		.cfi_offset 14, -4
 10479 0002 84B0     		sub	sp, sp, #16
 10480              		.cfi_def_cfa_offset 24
 10481 0004 00AF     		add	r7, sp, #0
 10482              		.cfi_def_cfa_register 7
 10483 0006 7860     		str	r0, [r7, #4]
 10484 0008 0B46     		mov	r3, r1
 10485 000a FB70     		strb	r3, [r7, #3]
 10486 000c 1346     		mov	r3, r2
 10487 000e BB70     		strb	r3, [r7, #2]
 10488              	.LBB69:
 180:../../libDaisy//src/dev/mpr121.h ****         {
 10489              		.loc 10 180 21
 10490 0010 0023     		movs	r3, #0
 10491 0012 FB73     		strb	r3, [r7, #15]
 10492              	.L470:
 180:../../libDaisy//src/dev/mpr121.h ****         {
 10493              		.loc 10 180 30 discriminator 3
 10494 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 10495 0016 0B2B     		cmp	r3, #11
 10496 0018 17D8     		bhi	.L471
 182:../../libDaisy//src/dev/mpr121.h ****             WriteRegister(MPR121_RELEASETH_0 + 2 * i, release);
 10497              		.loc 10 182 26 discriminator 2
 10498 001a FB7B     		ldrb	r3, [r7, #15]
 10499 001c 5B00     		lsls	r3, r3, #1
 10500 001e DBB2     		uxtb	r3, r3
 10501 0020 4133     		adds	r3, r3, #65
 10502 0022 DBB2     		uxtb	r3, r3
 10503 0024 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 10504 0026 1946     		mov	r1, r3
 10505 0028 7868     		ldr	r0, [r7, #4]
 10506 002a FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
 183:../../libDaisy//src/dev/mpr121.h ****         }
 10507              		.loc 10 183 26 discriminator 2
 10508 002e FB7B     		ldrb	r3, [r7, #15]
 10509 0030 2133     		adds	r3, r3, #33
 10510 0032 DBB2     		uxtb	r3, r3
 10511 0034 5B00     		lsls	r3, r3, #1
 10512 0036 DBB2     		uxtb	r3, r3
 10513 0038 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 10514 003a 1946     		mov	r1, r3
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 274


 10515 003c 7868     		ldr	r0, [r7, #4]
 10516 003e FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
 180:../../libDaisy//src/dev/mpr121.h ****         {
 10517              		.loc 10 180 9 discriminator 2
 10518 0042 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 10519 0044 0133     		adds	r3, r3, #1
 10520 0046 FB73     		strb	r3, [r7, #15]
 10521 0048 E4E7     		b	.L470
 10522              	.L471:
 10523              	.LBE69:
 185:../../libDaisy//src/dev/mpr121.h **** 
 10524              		.loc 10 185 5
 10525 004a 00BF     		nop
 10526 004c 1037     		adds	r7, r7, #16
 10527              		.cfi_def_cfa_offset 8
 10528 004e BD46     		mov	sp, r7
 10529              		.cfi_def_cfa_register 13
 10530              		@ sp needed
 10531 0050 80BD     		pop	{r7, pc}
 10532              		.cfi_endproc
 10533              	.LFE5208:
 10535              		.section	.text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15GetTransportErrEv,"axG",%progbits,_ZN5d
 10536              		.align	1
 10537              		.weak	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15GetTransportErrEv
 10538              		.syntax unified
 10539              		.thumb
 10540              		.thumb_func
 10541              		.fpu fpv5-d16
 10543              	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15GetTransportErrEv:
 10544              	.LFB5209:
 344:../../libDaisy//src/dev/mpr121.h **** 
 345:../../libDaisy//src/dev/mpr121.h ****     /** Get the global transport_error_ bool (as a Result), then reset it */
 346:../../libDaisy//src/dev/mpr121.h ****     Result GetTransportErr()
 10545              		.loc 10 346 12
 10546              		.cfi_startproc
 10547              		@ args = 0, pretend = 0, frame = 16
 10548              		@ frame_needed = 1, uses_anonymous_args = 0
 10549              		@ link register save eliminated.
 10550 0000 80B4     		push	{r7}
 10551              		.cfi_def_cfa_offset 4
 10552              		.cfi_offset 7, -4
 10553 0002 85B0     		sub	sp, sp, #20
 10554              		.cfi_def_cfa_offset 24
 10555 0004 00AF     		add	r7, sp, #0
 10556              		.cfi_def_cfa_register 7
 10557 0006 7860     		str	r0, [r7, #4]
 347:../../libDaisy//src/dev/mpr121.h ****     {
 348:../../libDaisy//src/dev/mpr121.h ****         Result ret       = transport_error_ ? ERR : OK;
 10558              		.loc 10 348 28
 10559 0008 7B68     		ldr	r3, [r7, #4]
 10560 000a 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 10561              		.loc 10 348 45
 10562 000e 002B     		cmp	r3, #0
 10563 0010 01D0     		beq	.L473
 10564              		.loc 10 348 45 is_stmt 0 discriminator 1
 10565 0012 0123     		movs	r3, #1
 10566 0014 00E0     		b	.L474
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 275


 10567              	.L473:
 10568              		.loc 10 348 45 discriminator 2
 10569 0016 0023     		movs	r3, #0
 10570              	.L474:
 10571              		.loc 10 348 16 is_stmt 1 discriminator 4
 10572 0018 FB73     		strb	r3, [r7, #15]
 349:../../libDaisy//src/dev/mpr121.h ****         transport_error_ = false;
 10573              		.loc 10 349 26 discriminator 4
 10574 001a 7B68     		ldr	r3, [r7, #4]
 10575 001c 0022     		movs	r2, #0
 10576 001e 83F83020 		strb	r2, [r3, #48]
 350:../../libDaisy//src/dev/mpr121.h ****         return ret;
 10577              		.loc 10 350 16 discriminator 4
 10578 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 351:../../libDaisy//src/dev/mpr121.h ****     }
 10579              		.loc 10 351 5 discriminator 4
 10580 0024 1846     		mov	r0, r3
 10581 0026 1437     		adds	r7, r7, #20
 10582              		.cfi_def_cfa_offset 4
 10583 0028 BD46     		mov	sp, r7
 10584              		.cfi_def_cfa_register 13
 10585              		@ sp needed
 10586 002a 5DF8047B 		ldr	r7, [sp], #4
 10587              		.cfi_restore 7
 10588              		.cfi_def_cfa_offset 0
 10589 002e 7047     		bx	lr
 10590              		.cfi_endproc
 10591              	.LFE5209:
 10593              		.section	.text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE14ReadRegister16Eh,"axG",%progbits,_ZN5da
 10594              		.align	1
 10595              		.weak	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE14ReadRegister16Eh
 10596              		.syntax unified
 10597              		.thumb
 10598              		.thumb_func
 10599              		.fpu fpv5-d16
 10601              	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE14ReadRegister16Eh:
 10602              	.LFB5210:
 244:../../libDaisy//src/dev/mpr121.h ****     {
 10603              		.loc 10 244 14
 10604              		.cfi_startproc
 10605              		@ args = 0, pretend = 0, frame = 16
 10606              		@ frame_needed = 1, uses_anonymous_args = 0
 10607 0000 80B5     		push	{r7, lr}
 10608              		.cfi_def_cfa_offset 8
 10609              		.cfi_offset 7, -8
 10610              		.cfi_offset 14, -4
 10611 0002 84B0     		sub	sp, sp, #16
 10612              		.cfi_def_cfa_offset 24
 10613 0004 00AF     		add	r7, sp, #0
 10614              		.cfi_def_cfa_register 7
 10615 0006 7860     		str	r0, [r7, #4]
 10616 0008 0B46     		mov	r3, r1
 10617 000a FB70     		strb	r3, [r7, #3]
 247:../../libDaisy//src/dev/mpr121.h ****         SetTransportErr(transport_.Read((uint8_t *)&buff, 2));
 10618              		.loc 10 247 24
 10619 000c 7B68     		ldr	r3, [r7, #4]
 10620 000e 1833     		adds	r3, r3, #24
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 276


 10621 0010 F91C     		adds	r1, r7, #3
 10622 0012 0122     		movs	r2, #1
 10623 0014 1846     		mov	r0, r3
 10624 0016 FFF7FEFF 		bl	_ZN5daisy18Mpr121I2CTransport5WriteEPht
 10625 001a 0346     		mov	r3, r0
 10626 001c 1946     		mov	r1, r3
 10627 001e 7868     		ldr	r0, [r7, #4]
 10628 0020 FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15SetTransportErrEb
 248:../../libDaisy//src/dev/mpr121.h **** 
 10629              		.loc 10 248 24
 10630 0024 7B68     		ldr	r3, [r7, #4]
 10631 0026 1833     		adds	r3, r3, #24
 10632 0028 07F10E01 		add	r1, r7, #14
 10633 002c 0222     		movs	r2, #2
 10634 002e 1846     		mov	r0, r3
 10635 0030 FFF7FEFF 		bl	_ZN5daisy18Mpr121I2CTransport4ReadEPht
 10636 0034 0346     		mov	r3, r0
 10637 0036 1946     		mov	r1, r3
 10638 0038 7868     		ldr	r0, [r7, #4]
 10639 003a FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15SetTransportErrEb
 250:../../libDaisy//src/dev/mpr121.h ****     }
 10640              		.loc 10 250 16
 10641 003e FB89     		ldrh	r3, [r7, #14]
 251:../../libDaisy//src/dev/mpr121.h **** 
 10642              		.loc 10 251 5
 10643 0040 1846     		mov	r0, r3
 10644 0042 1037     		adds	r7, r7, #16
 10645              		.cfi_def_cfa_offset 8
 10646 0044 BD46     		mov	sp, r7
 10647              		.cfi_def_cfa_register 13
 10648              		@ sp needed
 10649 0046 80BD     		pop	{r7, pc}
 10650              		.cfi_endproc
 10651              	.LFE5210:
 10653              		.section	.text.__tcf_0,"ax",%progbits
 10654              		.align	1
 10655              		.syntax unified
 10656              		.thumb
 10657              		.thumb_func
 10658              		.fpu fpv5-d16
 10660              	__tcf_0:
 10661              	.LFB5351:
  24:control.h     **** 
 10662              		.loc 21 24 16
 10663              		.cfi_startproc
 10664              		@ args = 0, pretend = 0, frame = 8
 10665              		@ frame_needed = 1, uses_anonymous_args = 0
 10666 0000 90B5     		push	{r4, r7, lr}
 10667              		.cfi_def_cfa_offset 12
 10668              		.cfi_offset 4, -12
 10669              		.cfi_offset 7, -8
 10670              		.cfi_offset 14, -4
 10671 0002 83B0     		sub	sp, sp, #12
 10672              		.cfi_def_cfa_offset 24
 10673 0004 00AF     		add	r7, sp, #0
 10674              		.cfi_def_cfa_register 7
 10675 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 277


  24:control.h     **** 
 10676              		.loc 21 24 16
 10677 0008 054C     		ldr	r4, .L481
 10678              	.L480:
  24:control.h     **** 
 10679              		.loc 21 24 16 is_stmt 0 discriminator 4
 10680 000a 064B     		ldr	r3, .L481+4
 10681 000c 9C42     		cmp	r4, r3
 10682 000e 04D0     		beq	.L478
  24:control.h     **** 
 10683              		.loc 21 24 16 discriminator 3
 10684 0010 2C3C     		subs	r4, r4, #44
 10685 0012 2046     		mov	r0, r4
 10686 0014 FFF7FEFF 		bl	_ZN14clasOscillatorD1Ev
 10687 0018 F7E7     		b	.L480
 10688              	.L478:
  24:control.h     **** 
 10689              		.loc 21 24 16
 10690 001a 0C37     		adds	r7, r7, #12
 10691              		.cfi_def_cfa_offset 12
 10692 001c BD46     		mov	sp, r7
 10693              		.cfi_def_cfa_register 13
 10694              		@ sp needed
 10695 001e 90BD     		pop	{r4, r7, pc}
 10696              	.L482:
 10697              		.align	2
 10698              	.L481:
 10699 0020 B0000000 		.word	aobjSingleOscillator+176
 10700 0024 00000000 		.word	aobjSingleOscillator
 10701              		.cfi_endproc
 10702              	.LFE5351:
 10704              		.section	.text._ZN12clasCapTouchD2Ev,"axG",%progbits,_ZN12clasCapTouchD5Ev,comdat
 10705              		.align	1
 10706              		.weak	_ZN12clasCapTouchD2Ev
 10707              		.syntax unified
 10708              		.thumb
 10709              		.thumb_func
 10710              		.fpu fpv5-d16
 10712              	_ZN12clasCapTouchD2Ev:
 10713              	.LFB5353:
 828:control.h     ****     private:
 10714              		.loc 21 828 7 is_stmt 1
 10715              		.cfi_startproc
 10716              		@ args = 0, pretend = 0, frame = 8
 10717              		@ frame_needed = 1, uses_anonymous_args = 0
 10718 0000 80B5     		push	{r7, lr}
 10719              		.cfi_def_cfa_offset 8
 10720              		.cfi_offset 7, -8
 10721              		.cfi_offset 14, -4
 10722 0002 82B0     		sub	sp, sp, #8
 10723              		.cfi_def_cfa_offset 16
 10724 0004 00AF     		add	r7, sp, #0
 10725              		.cfi_def_cfa_register 7
 10726 0006 7860     		str	r0, [r7, #4]
 10727              	.LBB70:
 828:control.h     ****     private:
 10728              		.loc 21 828 7
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 278


 10729 0008 7B68     		ldr	r3, [r7, #4]
 10730 000a 3433     		adds	r3, r3, #52
 10731 000c 1846     		mov	r0, r3
 10732 000e FFF7FEFF 		bl	_ZN5daisy9DaisySeedD1Ev
 10733 0012 7B68     		ldr	r3, [r7, #4]
 10734 0014 1846     		mov	r0, r3
 10735 0016 FFF7FEFF 		bl	_ZN5daisy6Mpr121INS_18Mpr121I2CTransportEED1Ev
 10736              	.LBE70:
 10737 001a 7B68     		ldr	r3, [r7, #4]
 10738 001c 1846     		mov	r0, r3
 10739 001e 0837     		adds	r7, r7, #8
 10740              		.cfi_def_cfa_offset 8
 10741 0020 BD46     		mov	sp, r7
 10742              		.cfi_def_cfa_register 13
 10743              		@ sp needed
 10744 0022 80BD     		pop	{r7, pc}
 10745              		.cfi_endproc
 10746              	.LFE5353:
 10748              		.weak	_ZN12clasCapTouchD1Ev
 10749              		.thumb_set _ZN12clasCapTouchD1Ev,_ZN12clasCapTouchD2Ev
 10750              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 10751              		.align	1
 10752              		.syntax unified
 10753              		.thumb
 10754              		.thumb_func
 10755              		.fpu fpv5-d16
 10757              	_Z41__static_initialization_and_destruction_0ii:
 10758              	.LFB5350:
 400:WarpDrive.cpp **** }
 10759              		.loc 22 400 1
 10760              		.cfi_startproc
 10761              		@ args = 0, pretend = 0, frame = 8
 10762              		@ frame_needed = 1, uses_anonymous_args = 0
 10763 0000 B0B5     		push	{r4, r5, r7, lr}
 10764              		.cfi_def_cfa_offset 16
 10765              		.cfi_offset 4, -16
 10766              		.cfi_offset 5, -12
 10767              		.cfi_offset 7, -8
 10768              		.cfi_offset 14, -4
 10769 0002 82B0     		sub	sp, sp, #8
 10770              		.cfi_def_cfa_offset 24
 10771 0004 00AF     		add	r7, sp, #0
 10772              		.cfi_def_cfa_register 7
 10773 0006 7860     		str	r0, [r7, #4]
 10774 0008 3960     		str	r1, [r7]
 10775              		.loc 22 400 1
 10776 000a 7B68     		ldr	r3, [r7, #4]
 10777 000c 012B     		cmp	r3, #1
 10778 000e 40F09480 		bne	.L489
 10779              		.loc 22 400 1 is_stmt 0 discriminator 1
 10780 0012 3B68     		ldr	r3, [r7]
 10781 0014 4FF6FF72 		movw	r2, #65535
 10782 0018 9342     		cmp	r3, r2
 10783 001a 40F08E80 		bne	.L489
  24:control.h     **** 
 10784              		.loc 21 24 38 is_stmt 1
 10785 001e 494B     		ldr	r3, .L490
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 279


 10786 0020 0324     		movs	r4, #3
 10787 0022 1D46     		mov	r5, r3
 10788              	.L488:
  24:control.h     **** 
 10789              		.loc 21 24 38 is_stmt 0 discriminator 4
 10790 0024 002C     		cmp	r4, #0
 10791 0026 05DB     		blt	.L487
  24:control.h     **** 
 10792              		.loc 21 24 38 discriminator 3
 10793 0028 2846     		mov	r0, r5
 10794 002a FFF7FEFF 		bl	_ZN14clasOscillatorC1Ev
 10795 002e 2C35     		adds	r5, r5, #44
 10796 0030 013C     		subs	r4, r4, #1
 10797 0032 F7E7     		b	.L488
 10798              	.L487:
  24:control.h     **** 
 10799              		.loc 21 24 16 is_stmt 1 discriminator 2
 10800 0034 444A     		ldr	r2, .L490+4
 10801 0036 4549     		ldr	r1, .L490+8
 10802 0038 0020     		movs	r0, #0
 10803 003a FFF7FEFF 		bl	__aeabi_atexit
  41:control.h     **** clasEncoder objEncoderB;
 10804              		.loc 21 41 13 discriminator 2
 10805 003e 4448     		ldr	r0, .L490+12
 10806 0040 FFF7FEFF 		bl	_ZN5daisy11clasEncoderC1Ev
 10807 0044 404A     		ldr	r2, .L490+4
 10808 0046 4349     		ldr	r1, .L490+16
 10809 0048 4148     		ldr	r0, .L490+12
 10810 004a FFF7FEFF 		bl	__aeabi_atexit
  42:control.h     **** clasEncoder objEncoderC;
 10811              		.loc 21 42 13 discriminator 2
 10812 004e 4248     		ldr	r0, .L490+20
 10813 0050 FFF7FEFF 		bl	_ZN5daisy11clasEncoderC1Ev
 10814 0054 3C4A     		ldr	r2, .L490+4
 10815 0056 3F49     		ldr	r1, .L490+16
 10816 0058 3F48     		ldr	r0, .L490+20
 10817 005a FFF7FEFF 		bl	__aeabi_atexit
  43:control.h     **** clasEncoder objEncoderD;
 10818              		.loc 21 43 13 discriminator 2
 10819 005e 3F48     		ldr	r0, .L490+24
 10820 0060 FFF7FEFF 		bl	_ZN5daisy11clasEncoderC1Ev
 10821 0064 384A     		ldr	r2, .L490+4
 10822 0066 3B49     		ldr	r1, .L490+16
 10823 0068 3C48     		ldr	r0, .L490+24
 10824 006a FFF7FEFF 		bl	__aeabi_atexit
  44:control.h     **** 
 10825              		.loc 21 44 13 discriminator 2
 10826 006e 3C48     		ldr	r0, .L490+28
 10827 0070 FFF7FEFF 		bl	_ZN5daisy11clasEncoderC1Ev
 10828 0074 344A     		ldr	r2, .L490+4
 10829 0076 3749     		ldr	r1, .L490+16
 10830 0078 3948     		ldr	r0, .L490+28
 10831 007a FFF7FEFF 		bl	__aeabi_atexit
  47:control.h     **** Switch Btn2;
 10832              		.loc 21 47 8 discriminator 2
 10833 007e 3948     		ldr	r0, .L490+32
 10834 0080 FFF7FEFF 		bl	_ZN5daisy6SwitchC1Ev
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 280


 10835 0084 304A     		ldr	r2, .L490+4
 10836 0086 3849     		ldr	r1, .L490+36
 10837 0088 3648     		ldr	r0, .L490+32
 10838 008a FFF7FEFF 		bl	__aeabi_atexit
  48:control.h     **** 
 10839              		.loc 21 48 8 discriminator 2
 10840 008e 3748     		ldr	r0, .L490+40
 10841 0090 FFF7FEFF 		bl	_ZN5daisy6SwitchC1Ev
 10842 0094 2C4A     		ldr	r2, .L490+4
 10843 0096 3449     		ldr	r1, .L490+36
 10844 0098 3448     		ldr	r0, .L490+40
 10845 009a FFF7FEFF 		bl	__aeabi_atexit
  63:control.h     **** TimerHandle objResetTimer;
 10846              		.loc 21 63 13 discriminator 2
 10847 009e 3448     		ldr	r0, .L490+44
 10848 00a0 FFF7FEFF 		bl	_ZN5daisy11TimerHandleC1Ev
 10849 00a4 284A     		ldr	r2, .L490+4
 10850 00a6 3349     		ldr	r1, .L490+48
 10851 00a8 3148     		ldr	r0, .L490+44
 10852 00aa FFF7FEFF 		bl	__aeabi_atexit
  64:control.h     **** TimerHandle objResetMenuTimer;
 10853              		.loc 21 64 13 discriminator 2
 10854 00ae 3248     		ldr	r0, .L490+52
 10855 00b0 FFF7FEFF 		bl	_ZN5daisy11TimerHandleC1Ev
 10856 00b4 244A     		ldr	r2, .L490+4
 10857 00b6 2F49     		ldr	r1, .L490+48
 10858 00b8 2F48     		ldr	r0, .L490+52
 10859 00ba FFF7FEFF 		bl	__aeabi_atexit
  65:control.h     **** 
 10860              		.loc 21 65 13 discriminator 2
 10861 00be 2F48     		ldr	r0, .L490+56
 10862 00c0 FFF7FEFF 		bl	_ZN5daisy11TimerHandleC1Ev
 10863 00c4 204A     		ldr	r2, .L490+4
 10864 00c6 2B49     		ldr	r1, .L490+48
 10865 00c8 2C48     		ldr	r0, .L490+56
 10866 00ca FFF7FEFF 		bl	__aeabi_atexit
  15:WarpDrive.cpp **** clasCapTouch objTouch;
 10867              		.loc 22 15 11 discriminator 2
 10868 00ce 2C48     		ldr	r0, .L490+60
 10869 00d0 FFF7FEFF 		bl	_ZN5daisy9DaisySeedC1Ev
 10870 00d4 1C4A     		ldr	r2, .L490+4
 10871 00d6 2B49     		ldr	r1, .L490+64
 10872 00d8 2948     		ldr	r0, .L490+60
 10873 00da FFF7FEFF 		bl	__aeabi_atexit
  16:WarpDrive.cpp **** clasEulersOscillator<16> objLeadVoice;
 10874              		.loc 22 16 14 discriminator 2
 10875 00de 2A48     		ldr	r0, .L490+68
 10876 00e0 FFF7FEFF 		bl	_ZN12clasCapTouchC1Ev
 10877 00e4 184A     		ldr	r2, .L490+4
 10878 00e6 2949     		ldr	r1, .L490+72
 10879 00e8 2748     		ldr	r0, .L490+68
 10880 00ea FFF7FEFF 		bl	__aeabi_atexit
  18:WarpDrive.cpp **** 
 10881              		.loc 22 18 23 discriminator 2
 10882 00ee 2848     		ldr	r0, .L490+76
 10883 00f0 FFF7FEFF 		bl	_ZN21clasSecondOrderFilterC1Ev
  20:WarpDrive.cpp **** clasOscillator objLFOFast;
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 281


 10884              		.loc 22 20 16 discriminator 2
 10885 00f4 2748     		ldr	r0, .L490+80
 10886 00f6 FFF7FEFF 		bl	_ZN14clasOscillatorC1Ev
 10887 00fa 134A     		ldr	r2, .L490+4
 10888 00fc 2649     		ldr	r1, .L490+84
 10889 00fe 2548     		ldr	r0, .L490+80
 10890 0100 FFF7FEFF 		bl	__aeabi_atexit
  21:WarpDrive.cpp **** 
 10891              		.loc 22 21 16 discriminator 2
 10892 0104 2548     		ldr	r0, .L490+88
 10893 0106 FFF7FEFF 		bl	_ZN14clasOscillatorC1Ev
 10894 010a 0F4A     		ldr	r2, .L490+4
 10895 010c 2249     		ldr	r1, .L490+84
 10896 010e 2348     		ldr	r0, .L490+88
 10897 0110 FFF7FEFF 		bl	__aeabi_atexit
  42:WarpDrive.cpp **** static OnePole objFilter2;
 10898              		.loc 22 42 16 discriminator 2
 10899 0114 2248     		ldr	r0, .L490+92
 10900 0116 FFF7FEFF 		bl	_ZN7daisysp7OnePoleC1Ev
 10901 011a 0B4A     		ldr	r2, .L490+4
 10902 011c 2149     		ldr	r1, .L490+96
 10903 011e 2048     		ldr	r0, .L490+92
 10904 0120 FFF7FEFF 		bl	__aeabi_atexit
  43:WarpDrive.cpp **** 
 10905              		.loc 22 43 16 discriminator 2
 10906 0124 2048     		ldr	r0, .L490+100
 10907 0126 FFF7FEFF 		bl	_ZN7daisysp7OnePoleC1Ev
 10908 012a 074A     		ldr	r2, .L490+4
 10909 012c 1D49     		ldr	r1, .L490+96
 10910 012e 1E48     		ldr	r0, .L490+100
 10911 0130 FFF7FEFF 		bl	__aeabi_atexit
  45:WarpDrive.cpp **** 
 10912              		.loc 22 45 30 discriminator 2
 10913 0134 1D48     		ldr	r0, .L490+104
 10914 0136 FFF7FEFF 		bl	_ZN21clasSecondOrderFilterC1Ev
 10915              	.L489:
 10916              		.loc 22 400 1
 10917 013a 00BF     		nop
 10918 013c 0837     		adds	r7, r7, #8
 10919              		.cfi_def_cfa_offset 16
 10920 013e BD46     		mov	sp, r7
 10921              		.cfi_def_cfa_register 13
 10922              		@ sp needed
 10923 0140 B0BD     		pop	{r4, r5, r7, pc}
 10924              	.L491:
 10925 0142 00BF     		.align	2
 10926              	.L490:
 10927 0144 00000000 		.word	aobjSingleOscillator
 10928 0148 00000000 		.word	__dso_handle
 10929 014c 00000000 		.word	__tcf_0
 10930 0150 00000000 		.word	objEncoderA
 10931 0154 00000000 		.word	_ZN5daisy11clasEncoderD1Ev
 10932 0158 00000000 		.word	objEncoderB
 10933 015c 00000000 		.word	objEncoderC
 10934 0160 00000000 		.word	objEncoderD
 10935 0164 00000000 		.word	Btn1
 10936 0168 00000000 		.word	_ZN5daisy6SwitchD1Ev
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 282


 10937 016c 00000000 		.word	Btn2
 10938 0170 00000000 		.word	objEncTimerMultipler
 10939 0174 00000000 		.word	_ZN5daisy11TimerHandleD1Ev
 10940 0178 00000000 		.word	objResetTimer
 10941 017c 00000000 		.word	objResetMenuTimer
 10942 0180 00000000 		.word	hw
 10943 0184 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 10944 0188 00000000 		.word	objTouch
 10945 018c 00000000 		.word	_ZN12clasCapTouchD1Ev
 10946 0190 00000000 		.word	objLPFLeadVoice
 10947 0194 00000000 		.word	objLFOSlow
 10948 0198 00000000 		.word	_ZN14clasOscillatorD1Ev
 10949 019c 00000000 		.word	objLFOFast
 10950 01a0 00000000 		.word	_ZL10objFilter1
 10951 01a4 00000000 		.word	_ZN7daisysp7OnePoleD1Ev
 10952 01a8 00000000 		.word	_ZL10objFilter2
 10953 01ac 00000000 		.word	_ZL11objLPFDrone
 10954              		.cfi_endproc
 10955              	.LFE5350:
 10957              		.section	.text._GLOBAL__sub_I_aobjSingleOscillator,"ax",%progbits
 10958              		.align	1
 10959              		.syntax unified
 10960              		.thumb
 10961              		.thumb_func
 10962              		.fpu fpv5-d16
 10964              	_GLOBAL__sub_I_aobjSingleOscillator:
 10965              	.LFB5355:
 10966              		.loc 22 400 1
 10967              		.cfi_startproc
 10968              		@ args = 0, pretend = 0, frame = 0
 10969              		@ frame_needed = 1, uses_anonymous_args = 0
 10970 0000 80B5     		push	{r7, lr}
 10971              		.cfi_def_cfa_offset 8
 10972              		.cfi_offset 7, -8
 10973              		.cfi_offset 14, -4
 10974 0002 00AF     		add	r7, sp, #0
 10975              		.cfi_def_cfa_register 7
 10976              		.loc 22 400 1
 10977 0004 4FF6FF71 		movw	r1, #65535
 10978 0008 0120     		movs	r0, #1
 10979 000a FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 10980 000e 80BD     		pop	{r7, pc}
 10981              		.cfi_endproc
 10982              	.LFE5355:
 10984              		.section	.init_array,"aw",%init_array
 10985              		.align	2
 10986 0000 00000000 		.word	_GLOBAL__sub_I_aobjSingleOscillator(target1)
 10987              		.text
 10988              	.Letext0:
 10989              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 10990              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 10991              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 10992              		.file 26 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 10993              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cpp_type_t
 10994              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 10995              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 10996              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 283


 10997              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 10998              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 10999              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 11000              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 11001              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 11002              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 11003              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 11004              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 11005              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 11006              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\charconv.h
 11007              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 11008              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 11009              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 11010              		.file 44 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 11011              		.file 45 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\type_traits
 11012              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 11013              		.file 47 "<built-in>"
 11014              		.file 48 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 11015              		.file 49 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 11016              		.file 50 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 11017              		.file 51 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 11018              		.file 52 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 11019              		.file 53 "../../DaisySP//Source/Control/adenv.h"
 11020              		.file 54 "../../DaisySP//Source/Utility/dsp.h"
 11021              		.file 55 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 11022              		.file 56 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 11023              		.file 57 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 11024              		.file 58 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 11025              		.file 59 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 11026              		.file 60 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 11027              		.file 61 "../../libDaisy//src/hid/logger_impl.h"
 11028              		.file 62 "../../libDaisy//src/util/wav_format.h"
 11029              		.file 63 "../../libDaisy//src/dev/max11300.h"
 11030              		.file 64 "../../libDaisy//src/hid/logger.h"
 11031              		.file 65 "../../libDaisy//src/per/gpio.h"
 11032              		.file 66 "../../libDaisy//src/dev/sdram.h"
 11033              		.file 67 "eulerssynthesis.h"
 11034              		.file 68 "../../libDaisy//src/dev/sr_595.h"
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 284


DEFINED SYMBOLS
                            *ABS*:00000000 WarpDrive.cpp
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:17     .text._ZSt3expf:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:25     .text._ZSt3expf:00000000 _ZSt3expf
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:57     .text._ZSt3logf:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:64     .text._ZSt3logf:00000000 _ZSt3logf
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:95     .rodata._ZStL19piecewise_construct:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:98     .rodata._ZStL19piecewise_construct:00000000 _ZStL19piecewise_construct
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:101    .text._ZL20__gthread_key_deletei:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:107    .text._ZL20__gthread_key_deletei:00000000 _ZL20__gthread_key_deletei
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:140    .rodata._ZN7daisyspL9kRandFracE:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:143    .rodata._ZN7daisyspL9kRandFracE:00000000 _ZN7daisyspL9kRandFracE
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:146    .rodata._ZN7daisyspL11kOneTwelfthE:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:149    .rodata._ZN7daisyspL11kOneTwelfthE:00000000 _ZN7daisyspL11kOneTwelfthE
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:152    .text._ZN7daisysp7OnePoleC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:159    .text._ZN7daisysp7OnePoleC2Ev:00000000 _ZN7daisysp7OnePoleC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:159    .text._ZN7daisysp7OnePoleC2Ev:00000000 _ZN7daisysp7OnePoleC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:193    .text._ZN7daisysp7OnePoleD2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:200    .text._ZN7daisysp7OnePoleD2Ev:00000000 _ZN7daisysp7OnePoleD2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:200    .text._ZN7daisysp7OnePoleD2Ev:00000000 _ZN7daisysp7OnePoleD1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:233    .text._ZN7daisysp7OnePole4InitEv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:240    .text._ZN7daisysp7OnePole4InitEv:00000000 _ZN7daisysp7OnePole4InitEv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:281    .text._ZN7daisysp7OnePole5ResetEv:00000000 _ZN7daisysp7OnePole5ResetEv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:274    .text._ZN7daisysp7OnePole5ResetEv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:315    .text._ZN7daisysp7OnePole12SetFrequencyEf:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:322    .text._ZN7daisysp7OnePole12SetFrequencyEf:00000000 _ZN7daisysp7OnePole12SetFrequencyEf
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:386    .text._ZN7daisysp7OnePole12SetFrequencyEf:00000068 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:393    .text._ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:400    .text._ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE:00000000 _ZN7daisysp7OnePole13SetFilterModeENS0_10FilterModeE
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:436    .text._ZN5daisy3PinC2ENS_8GPIOPortEh:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:443    .text._ZN5daisy3PinC2ENS_8GPIOPortEh:00000000 _ZN5daisy3PinC2ENS_8GPIOPortEh
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:443    .text._ZN5daisy3PinC2ENS_8GPIOPortEh:00000000 _ZN5daisy3PinC1ENS_8GPIOPortEh
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:490    .text._ZN5daisy3PinC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:497    .text._ZN5daisy3PinC2Ev:00000000 _ZN5daisy3PinC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:497    .text._ZN5daisy3PinC2Ev:00000000 _ZN5daisy3PinC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:539    .text._ZNK5daisy3Pincv12dsy_gpio_pinEv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:546    .text._ZNK5daisy3Pincv12dsy_gpio_pinEv:00000000 _ZNK5daisy3Pincv12dsy_gpio_pinEv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:591    .text._ZN5daisy11TimerHandle6ConfigC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:598    .text._ZN5daisy11TimerHandle6ConfigC2Ev:00000000 _ZN5daisy11TimerHandle6ConfigC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:598    .text._ZN5daisy11TimerHandle6ConfigC2Ev:00000000 _ZN5daisy11TimerHandle6ConfigC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:647    .text._ZN5daisy11TimerHandleC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:654    .text._ZN5daisy11TimerHandleC2Ev:00000000 _ZN5daisy11TimerHandleC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:654    .text._ZN5daisy11TimerHandleC2Ev:00000000 _ZN5daisy11TimerHandleC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:693    .text._ZN5daisy11TimerHandleD2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:700    .text._ZN5daisy11TimerHandleD2Ev:00000000 _ZN5daisy11TimerHandleD2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:700    .text._ZN5daisy11TimerHandleD2Ev:00000000 _ZN5daisy11TimerHandleD1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:733    .text._ZN5daisy6SystemC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:740    .text._ZN5daisy6SystemC2Ev:00000000 _ZN5daisy6SystemC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:740    .text._ZN5daisy6SystemC2Ev:00000000 _ZN5daisy6SystemC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:774    .text._ZN5daisy6SystemD2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:781    .text._ZN5daisy6SystemD2Ev:00000000 _ZN5daisy6SystemD2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:781    .text._ZN5daisy6SystemD2Ev:00000000 _ZN5daisy6SystemD1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:814    .text._ZN5daisy10QSPIHandleC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:821    .text._ZN5daisy10QSPIHandleC2Ev:00000000 _ZN5daisy10QSPIHandleC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:821    .text._ZN5daisy10QSPIHandleC2Ev:00000000 _ZN5daisy10QSPIHandleC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:861    .text._ZN5daisy9DacHandleC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:868    .text._ZN5daisy9DacHandleC2Ev:00000000 _ZN5daisy9DacHandleC2Ev
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 285


C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:868    .text._ZN5daisy9DacHandleC2Ev:00000000 _ZN5daisy9DacHandleC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:908    .text._ZN5daisy9I2CHandleC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:915    .text._ZN5daisy9I2CHandleC2Ev:00000000 _ZN5daisy9I2CHandleC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:915    .text._ZN5daisy9I2CHandleC2Ev:00000000 _ZN5daisy9I2CHandleC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:955    .text._ZN5daisy18Mpr121I2CTransportC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:962    .text._ZN5daisy18Mpr121I2CTransportC2Ev:00000000 _ZN5daisy18Mpr121I2CTransportC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1050   .text._ZN5daisy18Mpr121I2CTransport6ConfigC2Ev:00000000 _ZN5daisy18Mpr121I2CTransport6ConfigC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:962    .text._ZN5daisy18Mpr121I2CTransportC2Ev:00000000 _ZN5daisy18Mpr121I2CTransportC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1003   .text._ZN5daisy18Mpr121I2CTransportD2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1010   .text._ZN5daisy18Mpr121I2CTransportD2Ev:00000000 _ZN5daisy18Mpr121I2CTransportD2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1010   .text._ZN5daisy18Mpr121I2CTransportD2Ev:00000000 _ZN5daisy18Mpr121I2CTransportD1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1043   .text._ZN5daisy18Mpr121I2CTransport6ConfigC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1050   .text._ZN5daisy18Mpr121I2CTransport6ConfigC2Ev:00000000 _ZN5daisy18Mpr121I2CTransport6ConfigC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1123   .text._ZN5daisy9I2CHandle6ConfigC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1130   .text._ZN5daisy9I2CHandle6ConfigC2Ev:00000000 _ZN5daisy9I2CHandle6ConfigC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1130   .text._ZN5daisy9I2CHandle6ConfigC2Ev:00000000 _ZN5daisy9I2CHandle6ConfigC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1168   .text._ZN5daisy18Mpr121I2CTransport4InitENS0_6ConfigE:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1175   .text._ZN5daisy18Mpr121I2CTransport4InitENS0_6ConfigE:00000000 _ZN5daisy18Mpr121I2CTransport4InitENS0_6ConfigE
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1269   .text._ZN5daisy18Mpr121I2CTransport5WriteEPht:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1276   .text._ZN5daisy18Mpr121I2CTransport5WriteEPht:00000000 _ZN5daisy18Mpr121I2CTransport5WriteEPht
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1325   .text._ZN5daisy18Mpr121I2CTransport4ReadEPht:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1332   .text._ZN5daisy18Mpr121I2CTransport4ReadEPht:00000000 _ZN5daisy18Mpr121I2CTransport4ReadEPht
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1381   .text._ZN5daisy9SaiHandleC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1388   .text._ZN5daisy9SaiHandleC2Ev:00000000 _ZN5daisy9SaiHandleC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1388   .text._ZN5daisy9SaiHandleC2Ev:00000000 _ZN5daisy9SaiHandleC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1428   .text._ZN5daisy11AudioHandleC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1435   .text._ZN5daisy11AudioHandleC2Ev:00000000 _ZN5daisy11AudioHandleC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1435   .text._ZN5daisy11AudioHandleC2Ev:00000000 _ZN5daisy11AudioHandleC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1475   .text._ZN5daisy11AudioHandleD2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1482   .text._ZN5daisy11AudioHandleD2Ev:00000000 _ZN5daisy11AudioHandleD2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1482   .text._ZN5daisy11AudioHandleD2Ev:00000000 _ZN5daisy11AudioHandleD1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1515   .text._ZN5daisy9AdcHandleC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1522   .text._ZN5daisy9AdcHandleC2Ev:00000000 _ZN5daisy9AdcHandleC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1522   .text._ZN5daisy9AdcHandleC2Ev:00000000 _ZN5daisy9AdcHandleC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1556   .text._ZN5daisy9AdcHandleD2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1563   .text._ZN5daisy9AdcHandleD2Ev:00000000 _ZN5daisy9AdcHandleD2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1563   .text._ZN5daisy9AdcHandleD2Ev:00000000 _ZN5daisy9AdcHandleD1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1596   .text._ZN5daisy9UsbHandleC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1603   .text._ZN5daisy9UsbHandleC2Ev:00000000 _ZN5daisy9UsbHandleC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1603   .text._ZN5daisy9UsbHandleC2Ev:00000000 _ZN5daisy9UsbHandleC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1637   .text._ZN5daisy9UsbHandleD2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1644   .text._ZN5daisy9UsbHandleD2Ev:00000000 _ZN5daisy9UsbHandleD2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1644   .text._ZN5daisy9UsbHandleD2Ev:00000000 _ZN5daisy9UsbHandleD1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1677   .text._ZN5daisy6SwitchC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1684   .text._ZN5daisy6SwitchC2Ev:00000000 _ZN5daisy6SwitchC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1684   .text._ZN5daisy6SwitchC2Ev:00000000 _ZN5daisy6SwitchC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1718   .text._ZN5daisy6SwitchD2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1725   .text._ZN5daisy6SwitchD2Ev:00000000 _ZN5daisy6SwitchD2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1725   .text._ZN5daisy6SwitchD2Ev:00000000 _ZN5daisy6SwitchD1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1758   .text._ZNK5daisy6Switch10RisingEdgeEv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1765   .text._ZNK5daisy6Switch10RisingEdgeEv:00000000 _ZNK5daisy6Switch10RisingEdgeEv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1815   .text._ZNK5daisy6Switch7PressedEv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1822   .text._ZNK5daisy6Switch7PressedEv:00000000 _ZNK5daisy6Switch7PressedEv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1861   .rodata._ZN5daisyL15kWavFileChunkIdE:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1864   .rodata._ZN5daisyL15kWavFileChunkIdE:00000000 _ZN5daisyL15kWavFileChunkIdE
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1867   .rodata._ZN5daisyL14kWavFileWaveIdE:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1870   .rodata._ZN5daisyL14kWavFileWaveIdE:00000000 _ZN5daisyL14kWavFileWaveIdE
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 286


C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1873   .rodata._ZN5daisyL19kWavFileSubChunk1IdE:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1876   .rodata._ZN5daisyL19kWavFileSubChunk1IdE:00000000 _ZN5daisyL19kWavFileSubChunk1IdE
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1879   .rodata._ZN5daisyL19kWavFileSubChunk2IdE:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1882   .rodata._ZN5daisyL19kWavFileSubChunk2IdE:00000000 _ZN5daisyL19kWavFileSubChunk2IdE
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1885   .rodata._ZL19kMaxSr595DaisyChain:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1888   .rodata._ZL19kMaxSr595DaisyChain:00000000 _ZL19kMaxSr595DaisyChain
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1891   .text._ZN5daisy9DaisySeedC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1898   .text._ZN5daisy9DaisySeedC2Ev:00000000 _ZN5daisy9DaisySeedC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1898   .text._ZN5daisy9DaisySeedC2Ev:00000000 _ZN5daisy9DaisySeedC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1959   .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1966   .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:1966   .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2015   .rodata._ZN5daisy4seedL2D0E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2018   .rodata._ZN5daisy4seedL2D0E:00000000 _ZN5daisy4seedL2D0E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2022   .rodata._ZN5daisy4seedL2D1E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2025   .rodata._ZN5daisy4seedL2D1E:00000000 _ZN5daisy4seedL2D1E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2029   .rodata._ZN5daisy4seedL2D2E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2032   .rodata._ZN5daisy4seedL2D2E:00000000 _ZN5daisy4seedL2D2E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2036   .rodata._ZN5daisy4seedL2D3E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2039   .rodata._ZN5daisy4seedL2D3E:00000000 _ZN5daisy4seedL2D3E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2043   .rodata._ZN5daisy4seedL2D4E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2046   .rodata._ZN5daisy4seedL2D4E:00000000 _ZN5daisy4seedL2D4E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2050   .rodata._ZN5daisy4seedL2D5E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2053   .rodata._ZN5daisy4seedL2D5E:00000000 _ZN5daisy4seedL2D5E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2057   .rodata._ZN5daisy4seedL2D6E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2060   .rodata._ZN5daisy4seedL2D6E:00000000 _ZN5daisy4seedL2D6E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2064   .rodata._ZN5daisy4seedL2D7E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2067   .rodata._ZN5daisy4seedL2D7E:00000000 _ZN5daisy4seedL2D7E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2071   .rodata._ZN5daisy4seedL2D8E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2074   .rodata._ZN5daisy4seedL2D8E:00000000 _ZN5daisy4seedL2D8E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2078   .rodata._ZN5daisy4seedL2D9E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2081   .rodata._ZN5daisy4seedL2D9E:00000000 _ZN5daisy4seedL2D9E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2085   .rodata._ZN5daisy4seedL3D10E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2088   .rodata._ZN5daisy4seedL3D10E:00000000 _ZN5daisy4seedL3D10E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2092   .rodata._ZN5daisy4seedL3D11E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2095   .rodata._ZN5daisy4seedL3D11E:00000000 _ZN5daisy4seedL3D11E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2099   .rodata._ZN5daisy4seedL3D12E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2102   .rodata._ZN5daisy4seedL3D12E:00000000 _ZN5daisy4seedL3D12E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2106   .rodata._ZN5daisy4seedL3D13E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2109   .rodata._ZN5daisy4seedL3D13E:00000000 _ZN5daisy4seedL3D13E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2113   .rodata._ZN5daisy4seedL3D14E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2116   .rodata._ZN5daisy4seedL3D14E:00000000 _ZN5daisy4seedL3D14E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2120   .rodata._ZN5daisy4seedL3D15E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2123   .rodata._ZN5daisy4seedL3D15E:00000000 _ZN5daisy4seedL3D15E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2127   .rodata._ZN5daisy4seedL3D16E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2130   .rodata._ZN5daisy4seedL3D16E:00000000 _ZN5daisy4seedL3D16E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2134   .rodata._ZN5daisy4seedL3D17E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2137   .rodata._ZN5daisy4seedL3D17E:00000000 _ZN5daisy4seedL3D17E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2141   .rodata._ZN5daisy4seedL3D18E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2144   .rodata._ZN5daisy4seedL3D18E:00000000 _ZN5daisy4seedL3D18E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2148   .rodata._ZN5daisy4seedL3D19E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2151   .rodata._ZN5daisy4seedL3D19E:00000000 _ZN5daisy4seedL3D19E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2155   .rodata._ZN5daisy4seedL3D20E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2158   .rodata._ZN5daisy4seedL3D20E:00000000 _ZN5daisy4seedL3D20E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2162   .rodata._ZN5daisy4seedL3D21E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2165   .rodata._ZN5daisy4seedL3D21E:00000000 _ZN5daisy4seedL3D21E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2169   .rodata._ZN5daisy4seedL3D22E:00000000 $d
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 287


C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2172   .rodata._ZN5daisy4seedL3D22E:00000000 _ZN5daisy4seedL3D22E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2176   .rodata._ZN5daisy4seedL3D23E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2179   .rodata._ZN5daisy4seedL3D23E:00000000 _ZN5daisy4seedL3D23E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2183   .rodata._ZN5daisy4seedL3D24E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2186   .rodata._ZN5daisy4seedL3D24E:00000000 _ZN5daisy4seedL3D24E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2190   .rodata._ZN5daisy4seedL3D25E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2193   .rodata._ZN5daisy4seedL3D25E:00000000 _ZN5daisy4seedL3D25E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2196   .rodata._ZN5daisy4seedL3D26E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2199   .rodata._ZN5daisy4seedL3D26E:00000000 _ZN5daisy4seedL3D26E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2203   .rodata._ZN5daisy4seedL3D27E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2206   .rodata._ZN5daisy4seedL3D27E:00000000 _ZN5daisy4seedL3D27E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2210   .rodata._ZN5daisy4seedL3D28E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2213   .rodata._ZN5daisy4seedL3D28E:00000000 _ZN5daisy4seedL3D28E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2217   .rodata._ZN5daisy4seedL3D29E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2220   .rodata._ZN5daisy4seedL3D29E:00000000 _ZN5daisy4seedL3D29E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2224   .rodata._ZN5daisy4seedL3D30E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2227   .rodata._ZN5daisy4seedL3D30E:00000000 _ZN5daisy4seedL3D30E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2231   .rodata._ZN5daisy4seedL2A0E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2234   .rodata._ZN5daisy4seedL2A0E:00000000 _ZN5daisy4seedL2A0E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2238   .rodata._ZN5daisy4seedL2A1E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2241   .rodata._ZN5daisy4seedL2A1E:00000000 _ZN5daisy4seedL2A1E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2245   .rodata._ZN5daisy4seedL2A2E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2248   .rodata._ZN5daisy4seedL2A2E:00000000 _ZN5daisy4seedL2A2E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2252   .rodata._ZN5daisy4seedL2A3E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2255   .rodata._ZN5daisy4seedL2A3E:00000000 _ZN5daisy4seedL2A3E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2259   .rodata._ZN5daisy4seedL2A4E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2262   .rodata._ZN5daisy4seedL2A4E:00000000 _ZN5daisy4seedL2A4E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2266   .rodata._ZN5daisy4seedL2A5E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2269   .rodata._ZN5daisy4seedL2A5E:00000000 _ZN5daisy4seedL2A5E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2273   .rodata._ZN5daisy4seedL2A6E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2276   .rodata._ZN5daisy4seedL2A6E:00000000 _ZN5daisy4seedL2A6E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2280   .rodata._ZN5daisy4seedL2A7E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2283   .rodata._ZN5daisy4seedL2A7E:00000000 _ZN5daisy4seedL2A7E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2287   .rodata._ZN5daisy4seedL2A8E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2290   .rodata._ZN5daisy4seedL2A8E:00000000 _ZN5daisy4seedL2A8E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2294   .rodata._ZN5daisy4seedL2A9E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2297   .rodata._ZN5daisy4seedL2A9E:00000000 _ZN5daisy4seedL2A9E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2301   .rodata._ZN5daisy4seedL3A10E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2304   .rodata._ZN5daisy4seedL3A10E:00000000 _ZN5daisy4seedL3A10E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2307   .rodata._ZN5daisy4seedL3A11E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2310   .rodata._ZN5daisy4seedL3A11E:00000000 _ZN5daisy4seedL3A11E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2314   .rodata._ZN5daisy4seedL3D31E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2317   .rodata._ZN5daisy4seedL3D31E:00000000 _ZN5daisy4seedL3D31E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2321   .rodata._ZN5daisy4seedL3D32E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2324   .rodata._ZN5daisy4seedL3D32E:00000000 _ZN5daisy4seedL3D32E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2328   .rodata._ZN5daisy4seedL3A12E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2331   .rodata._ZN5daisy4seedL3A12E:00000000 _ZN5daisy4seedL3A12E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2335   .rodata._ZN5daisy4seedL3A13E:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2338   .rodata._ZN5daisy4seedL3A13E:00000000 _ZN5daisy4seedL3A13E
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2342   .text._ZN8clasADSR18mRecursiveEquationEfff:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2349   .text._ZN8clasADSR18mRecursiveEquationEfff:00000000 _ZN8clasADSR18mRecursiveEquationEfff
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2398   .text._ZN8clasADSR4InitEf:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2405   .text._ZN8clasADSR4InitEf:00000000 _ZN8clasADSR4InitEf
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2960   .text._ZN8clasADSR13SetAttackRateEf:00000000 _ZN8clasADSR13SetAttackRateEf
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3083   .text._ZN8clasADSR12SetDecayRateEf:00000000 _ZN8clasADSR12SetDecayRateEf
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3208   .text._ZN8clasADSR14SetReleaseRateEf:00000000 _ZN8clasADSR14SetReleaseRateEf
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2477   .text._ZN8clasADSR4InitEf:0000007c $d
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 288


C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2482   .text._ZN8clasADSR7ProcessEb:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2489   .text._ZN8clasADSR7ProcessEb:00000000 _ZN8clasADSR7ProcessEb
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2556   .text._ZN8clasADSR7ProcessEb:00000064 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2561   .text._ZN8clasADSR7ProcessEb:00000078 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2719   .text._ZN8clasADSR13GetAttackTimeEv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2726   .text._ZN8clasADSR13GetAttackTimeEv:00000000 _ZN8clasADSR13GetAttackTimeEv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2760   .text._ZN8clasADSR12GetDecayTimeEv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2767   .text._ZN8clasADSR12GetDecayTimeEv:00000000 _ZN8clasADSR12GetDecayTimeEv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2801   .text._ZN8clasADSR14GetReleaseTimeEv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2808   .text._ZN8clasADSR14GetReleaseTimeEv:00000000 _ZN8clasADSR14GetReleaseTimeEv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2842   .text._ZN8clasADSR15GetSustainLevelEv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2849   .text._ZN8clasADSR15GetSustainLevelEv:00000000 _ZN8clasADSR15GetSustainLevelEv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2883   .text._ZN8clasADSR15SetSustainLevelEf:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2890   .text._ZN8clasADSR15SetSustainLevelEf:00000000 _ZN8clasADSR15SetSustainLevelEf
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2948   .text._ZN8clasADSR15SetSustainLevelEf:0000004c $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:2953   .text._ZN8clasADSR13SetAttackRateEf:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3069   .text._ZN8clasADSR13SetAttackRateEf:000000c8 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3076   .text._ZN8clasADSR12SetDecayRateEf:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3194   .text._ZN8clasADSR12SetDecayRateEf:000000cc $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3201   .text._ZN8clasADSR14SetReleaseRateEf:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3316   .text._ZN8clasADSR14SetReleaseRateEf:000000c4 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3323   .text._ZN21clasSecondOrderFilter9mBilinearE12COEFFICIENTSf:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3330   .text._ZN21clasSecondOrderFilter9mBilinearE12COEFFICIENTSf:00000000 _ZN21clasSecondOrderFilter9mBilinearE12COEFFICIENTSf
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3532   .text._ZN21clasSecondOrderFilter4InitEf:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3539   .text._ZN21clasSecondOrderFilter4InitEf:00000000 _ZN21clasSecondOrderFilter4InitEf
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3594   .text._ZN21clasSecondOrderFilter4InitEf:00000048 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3600   .text._ZN21clasSecondOrderFilter6UpdateEv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3607   .text._ZN21clasSecondOrderFilter6UpdateEv:00000000 _ZN21clasSecondOrderFilter6UpdateEv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:9746   .text._ZSt3powIfiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_:00000000 _ZSt3powIfiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3739   .text._ZN21clasSecondOrderFilter7ProcessEf:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3746   .text._ZN21clasSecondOrderFilter7ProcessEf:00000000 _ZN21clasSecondOrderFilter7ProcessEf
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3889   .text._ZN21clasSecondOrderFilter17setFreqNormalisedEf:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3896   .text._ZN21clasSecondOrderFilter17setFreqNormalisedEf:00000000 _ZN21clasSecondOrderFilter17setFreqNormalisedEf
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3938   .text._ZN21clasSecondOrderFilter7setFreqEf:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3945   .text._ZN21clasSecondOrderFilter7setFreqEf:00000000 _ZN21clasSecondOrderFilter7setFreqEf
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3980   .text._ZN21clasSecondOrderFilter4setQEf:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:3987   .text._ZN21clasSecondOrderFilter4setQEf:00000000 _ZN21clasSecondOrderFilter4setQEf
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4047   .text._ZN5daisy11clasEncoderC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4054   .text._ZN5daisy11clasEncoderC2Ev:00000000 _ZN5daisy11clasEncoderC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4054   .text._ZN5daisy11clasEncoderC2Ev:00000000 _ZN5daisy11clasEncoderC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4092   .text._ZN5daisy11clasEncoderD2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4099   .text._ZN5daisy11clasEncoderD2Ev:00000000 _ZN5daisy11clasEncoderD2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4099   .text._ZN5daisy11clasEncoderD2Ev:00000000 _ZN5daisy11clasEncoderD1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4136   .text._ZNK5daisy11clasEncoder9IncrementEv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4143   .text._ZNK5daisy11clasEncoder9IncrementEv:00000000 _ZNK5daisy11clasEncoder9IncrementEv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4188   .text._ZNK5daisy11clasEncoder10RisingEdgeEv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4195   .text._ZNK5daisy11clasEncoder10RisingEdgeEv:00000000 _ZNK5daisy11clasEncoder10RisingEdgeEv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4228   .text._ZN14clasOscillatorC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4235   .text._ZN14clasOscillatorC2Ev:00000000 _ZN14clasOscillatorC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4235   .text._ZN14clasOscillatorC2Ev:00000000 _ZN14clasOscillatorC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4269   .text._ZN14clasOscillatorD2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4276   .text._ZN14clasOscillatorD2Ev:00000000 _ZN14clasOscillatorD2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4276   .text._ZN14clasOscillatorD2Ev:00000000 _ZN14clasOscillatorD1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4313   .bss.aobjSingleOscillator:00000000 aobjSingleOscillator
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4310   .bss.aobjSingleOscillator:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4320   .bss.objParent_:00000000 objParent_
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4317   .bss.objParent_:00000000 $d
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 289


C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4327   .bss.objChild_:00000000 objChild_
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4324   .bss.objChild_:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4334   .bss.ptrSingleOscillator_:00000000 ptrSingleOscillator_
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4331   .bss.ptrSingleOscillator_:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4341   .bss.objEncoderA:00000000 objEncoderA
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4338   .bss.objEncoderA:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4348   .bss.objEncoderB:00000000 objEncoderB
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4345   .bss.objEncoderB:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4355   .bss.objEncoderC:00000000 objEncoderC
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4352   .bss.objEncoderC:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4362   .bss.objEncoderD:00000000 objEncoderD
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4359   .bss.objEncoderD:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4369   .bss.Btn1:00000000 Btn1
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4366   .bss.Btn1:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4376   .bss.Btn2:00000000 Btn2
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4373   .bss.Btn2:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4383   .bss.PT1_Effect3:00000000 PT1_Effect3
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4380   .bss.PT1_Effect3:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4390   .bss.PT2_Effect1:00000000 PT2_Effect1
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4387   .bss.PT2_Effect1:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4397   .bss.PT3_Filter1:00000000 PT3_Filter1
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4394   .bss.PT3_Filter1:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4404   .bss.PT4_Filter2:00000000 PT4_Filter2
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4401   .bss.PT4_Filter2:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4411   .bss.PT5_OSC_A_Amp:00000000 PT5_OSC_A_Amp
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4408   .bss.PT5_OSC_A_Amp:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4418   .bss.PT6_OSC_B_Amp:00000000 PT6_OSC_B_Amp
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4415   .bss.PT6_OSC_B_Amp:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4425   .bss.PT7_OSC_C_Amp:00000000 PT7_OSC_C_Amp
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4422   .bss.PT7_OSC_C_Amp:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4432   .bss.PT8_OSC_D_Amp:00000000 PT8_OSC_D_Amp
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4429   .bss.PT8_OSC_D_Amp:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4439   .bss.PT9_RealImag:00000000 PT9_RealImag
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4436   .bss.PT9_RealImag:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4446   .bss.PT10_Effect4:00000000 PT10_Effect4
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4443   .bss.PT10_Effect4:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4453   .bss.objADSR:00000000 objADSR
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4450   .bss.objADSR:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4460   .bss.objEncTimerMultipler:00000000 objEncTimerMultipler
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4457   .bss.objEncTimerMultipler:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4467   .bss.objResetTimer:00000000 objResetTimer
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4464   .bss.objResetTimer:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4474   .bss.objResetMenuTimer:00000000 objResetMenuTimer
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4471   .bss.objResetMenuTimer:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4477   .bss._ZL15g_astruLfoSlots:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4480   .bss._ZL15g_astruLfoSlots:00000000 _ZL15g_astruLfoSlots
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4487   .bss.g_iLFOElement:00000000 g_iLFOElement
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4484   .bss.g_iLFOElement:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4490   .rodata._ZL8MAX_FREQ:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4493   .rodata._ZL8MAX_FREQ:00000000 _ZL8MAX_FREQ
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4496   .rodata._ZL8MIN_FREQ:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4499   .rodata._ZL8MIN_FREQ:00000000 _ZL8MIN_FREQ
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4502   .rodata._ZL6PERIOD:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4505   .rodata._ZL6PERIOD:00000000 _ZL6PERIOD
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4512   .bss.iEncoderPos_:00000000 iEncoderPos_
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4509   .bss.iEncoderPos_:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4519   .bss.uiLastTime_:00000000 uiLastTime_
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 290


C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4516   .bss.uiLastTime_:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4526   .data.flSpeedFactor_:00000000 flSpeedFactor_
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4523   .data.flSpeedFactor_:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4532   .rodata._ZL12SPEED_SCALE_:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4535   .rodata._ZL12SPEED_SCALE_:00000000 _ZL12SPEED_SCALE_
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4538   .rodata._ZL8MAX_INC_:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4541   .rodata._ZL8MAX_INC_:00000000 _ZL8MAX_INC_
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4547   .bss.WAVEFORM:00000000 WAVEFORM
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4548   .bss.WAVEFORM:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4554   .bss.uiLastUpdate:00000000 uiLastUpdate
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4551   .bss.uiLastUpdate:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4560   .bss.uiTouchKeyPressed:00000000 uiTouchKeyPressed
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4561   .bss.uiTouchKeyPressed:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4566   .bss.xGate:00000000 xGate
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4567   .bss.xGate:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4573   .bss.aflFreqTable:00000000 aflFreqTable
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4570   .bss.aflFreqTable:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4580   .bss.iUserInput_:00000000 iUserInput_
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4577   .bss.iUserInput_:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4586   .data.xNormalMode:00000000 xNormalMode
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4593   .bss.flLFOFastSignal:00000000 flLFOFastSignal
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4590   .bss.flLFOFastSignal:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4600   .bss.flLFOSlowSignal:00000000 flLFOSlowSignal
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4597   .bss.flLFOSlowSignal:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4606   .bss.xPrintOnce:00000000 xPrintOnce
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4607   .bss.xPrintOnce:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4613   .bss.eMenuState:00000000 eMenuState
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4610   .bss.eMenuState:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4620   .bss.eWhileState:00000000 eWhileState
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4617   .bss.eWhileState:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4627   .data.iPrevUserInput:00000000 iPrevUserInput
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4624   .data.iPrevUserInput:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4634   .bss.eMain:00000000 eMain
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4631   .bss.eMain:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4641   .bss.eSub:00000000 eSub
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4638   .bss.eSub:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4648   .bss.eMode:00000000 eMode
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4645   .bss.eMode:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4655   .bss.eResetMainMenuState:00000000 eResetMainMenuState
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4652   .bss.eResetMainMenuState:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4658   .text._Z18InitLFOAssignmentsv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4665   .text._Z18InitLFOAssignmentsv:00000000 _Z18InitLFOAssignmentsv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4728   .text._Z18InitLFOAssignmentsv:00000060 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4733   .text._Z14fxEncoderSetupv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4740   .text._Z14fxEncoderSetupv:00000000 _Z14fxEncoderSetupv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4841   .text._Z14fxEncoderSetupv:000000c8 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4862   .text._Z18fxEncoderTimerInitv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4869   .text._Z18fxEncoderTimerInitv:00000000 _Z18fxEncoderTimerInitv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4922   .text._Z18fxEncoderTimerInitv:00000040 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4928   .text._Z13fxControlInitv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4935   .text._Z13fxControlInitv:00000000 _Z13fxControlInitv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4961   .text._Z13fxControlInitv:00000018 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4966   .text._Z17fxDroneVoiceSetupf:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:4973   .text._Z17fxDroneVoiceSetupf:00000000 _Z17fxDroneVoiceSetupf
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5051   .text._Z17fxDroneVoiceSetupf:0000008c $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5060   .text._Z24fxEncoderSpeedMultiplieri:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5067   .text._Z24fxEncoderSpeedMultiplieri:00000000 _Z24fxEncoderSpeedMultiplieri
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 291


C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5170   .text._Z24fxEncoderSpeedMultiplieri:000000a8 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5179   .text._Z14fxFrequencyIncR14clasOscillatorRN5daisy11clasEncoderEi:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5186   .text._Z14fxFrequencyIncR14clasOscillatorRN5daisy11clasEncoderEi:00000000 _Z14fxFrequencyIncR14clasOscillatorRN5daisy11clasEncoderEi
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5250   .text._Z19fxFrequencyMicroIncR14clasOscillatorRN5daisy11clasEncoderEi:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5257   .text._Z19fxFrequencyMicroIncR14clasOscillatorRN5daisy11clasEncoderEi:00000000 _Z19fxFrequencyMicroIncR14clasOscillatorRN5daisy11clasEncoderEi
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5328   .text._Z19fxFrequencyMicroIncR14clasOscillatorRN5daisy11clasEncoderEi:00000078 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5334   .text._Z11resetParentv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5341   .text._Z11resetParentv:00000000 _Z11resetParentv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5369   .text._Z11resetParentv:00000014 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5374   .text._Z10resetChildv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5381   .text._Z10resetChildv:00000000 _Z10resetChildv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5409   .text._Z10resetChildv:00000014 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5414   .text._Z9setParentP14clasOscillator:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5421   .text._Z9setParentP14clasOscillator:00000000 _Z9setParentP14clasOscillator
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5454   .text._Z9setParentP14clasOscillator:0000001c $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5460   .text._Z8setChildP14clasOscillator:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5467   .text._Z8setChildP14clasOscillator:00000000 _Z8setChildP14clasOscillator
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5509   .text._Z8setChildP14clasOscillator:00000034 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5515   .text._Z9getParentv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5522   .text._Z9getParentv:00000000 _Z9getParentv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5549   .text._Z9getParentv:00000014 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5554   .text._Z8getChildv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5561   .text._Z8getChildv:00000000 _Z8getChildv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5588   .text._Z8getChildv:00000014 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5593   .rodata:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5597   .text._Z20fxResetTimerCallBackPv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5604   .text._Z20fxResetTimerCallBackPv:00000000 _Z20fxResetTimerCallBackPv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:9791   .text._ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_:00000000 _ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5640   .text._Z20fxResetTimerCallBackPv:00000024 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5650   .text._Z24fxResetMenuTimerCallBackPv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5657   .text._Z24fxResetMenuTimerCallBackPv:00000000 _Z24fxResetMenuTimerCallBackPv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5706   .text._Z24fxResetMenuTimerCallBackPv:00000038 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5717   .text._Z16fxResetTimerInitv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5724   .text._Z16fxResetTimerInitv:00000000 _Z16fxResetTimerInitv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5782   .text._Z16fxResetTimerInitv:0000004c $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5788   .text._Z20fxResetMenuTimerInitv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5795   .text._Z20fxResetMenuTimerInitv:00000000 _Z20fxResetMenuTimerInitv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5853   .text._Z20fxResetMenuTimerInitv:0000004c $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5859   .text._Z16fxFrequencyMatchR14clasOscillatorRN5daisy11clasEncoderE:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5866   .text._Z16fxFrequencyMatchR14clasOscillatorRN5daisy11clasEncoderE:00000000 _Z16fxFrequencyMatchR14clasOscillatorRN5daisy11clasEncoderE
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5930   .text._Z18fxOscillatorSelectP14clasOscillatorRN5daisy11clasEncoderEi:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5937   .text._Z18fxOscillatorSelectP14clasOscillatorRN5daisy11clasEncoderEi:00000000 _Z18fxOscillatorSelectP14clasOscillatorRN5daisy11clasEncoderEi
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:9828   .text._ZN5daisy9DaisySeed9PrintLineIJiEEEvPKcDpT_:00000000 _ZN5daisy9DaisySeed9PrintLineIJiEEEvPKcDpT_
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5981   .text._Z18fxOscillatorSelectP14clasOscillatorRN5daisy11clasEncoderEi:00000030 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5987   .text._Z13fxEncoderTestv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:5994   .text._Z13fxEncoderTestv:00000000 _Z13fxEncoderTestv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6036   .text._Z13fxEncoderTestv:00000038 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6044   .text._Z22IncOscillatorAmplitudeR14clasOscillatorRN5daisy11clasEncoderE:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6051   .text._Z22IncOscillatorAmplitudeR14clasOscillatorRN5daisy11clasEncoderE:00000000 _Z22IncOscillatorAmplitudeR14clasOscillatorRN5daisy11clasEncoderE
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6108   .text._Z22IncOscillatorAmplitudeR14clasOscillatorRN5daisy11clasEncoderE:00000060 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6114   .text._Z18IncOscillatorDepthR14clasOscillatorRN5daisy11clasEncoderE:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6121   .text._Z18IncOscillatorDepthR14clasOscillatorRN5daisy11clasEncoderE:00000000 _Z18IncOscillatorDepthR14clasOscillatorRN5daisy11clasEncoderE
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6178   .text._Z18IncOscillatorDepthR14clasOscillatorRN5daisy11clasEncoderE:00000060 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6184   .text._Z14ChangeWaveformR14clasOscillatorRN5daisy11clasEncoderE:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6191   .text._Z14ChangeWaveformR14clasOscillatorRN5daisy11clasEncoderE:00000000 _Z14ChangeWaveformR14clasOscillatorRN5daisy11clasEncoderE
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6244   .text._Z19FreqModulationRatioR14clasOscillatorRN5daisy11clasEncoderE:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6251   .text._Z19FreqModulationRatioR14clasOscillatorRN5daisy11clasEncoderE:00000000 _Z19FreqModulationRatioR14clasOscillatorRN5daisy11clasEncoderE
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 292


C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6312   .text._Z21FreqModulationCarrierR14clasOscillatorS0_S0_RN5daisy11clasEncoderE:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6319   .text._Z21FreqModulationCarrierR14clasOscillatorS0_S0_RN5daisy11clasEncoderE:00000000 _Z21FreqModulationCarrierR14clasOscillatorS0_S0_RN5daisy11clasEncoderE
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6369   .text._Z21FreqModulationCarrierR14clasOscillatorS0_S0_RN5daisy11clasEncoderE:00000048 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6374   .text._Z14fxMenuDebouncev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6381   .text._Z14fxMenuDebouncev:00000000 _Z14fxMenuDebouncev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6430   .text._Z14fxMenuDebouncev:00000030 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6435   .text._Z19fxUpdateFrequenciesf:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6442   .text._Z19fxUpdateFrequenciesf:00000000 _Z19fxUpdateFrequenciesf
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6529   .text._Z19fxUpdateFrequenciesf:000000a0 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6538   .text._Z14ChangeWaveformR20clasEulersOscillatorILi16EERN5daisy11clasEncoderE:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6545   .text._Z14ChangeWaveformR20clasEulersOscillatorILi16EERN5daisy11clasEncoderE:00000000 _Z14ChangeWaveformR20clasEulersOscillatorILi16EERN5daisy11clasEncoderE
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6598   .text._Z6fxADSRN5daisy11clasEncoderES0_S0_S0_NS_6SwitchE:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6605   .text._Z6fxADSRN5daisy11clasEncoderES0_S0_S0_NS_6SwitchE:00000000 _Z6fxADSRN5daisy11clasEncoderES0_S0_S0_NS_6SwitchE
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6829   .text._Z6fxADSRN5daisy11clasEncoderES0_S0_S0_NS_6SwitchE:000001a0 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6880   .text._Z10fxModeMenui:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6887   .text._Z10fxModeMenui:00000000 _Z10fxModeMenui
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6960   .text._Z10fxModeMenui:00000064 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:6972   .text._Z10fxModeMenui:00000094 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:7272   .text._Z10fxModeMenui:00000250 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:7283   .text._Z10fxModeMenui:0000027c $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:7326   .text._Z10fxModeMenui:000002b4 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8302   .bss.objLFOFast:00000000 objLFOFast
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8295   .bss.objLFOSlow:00000000 objLFOSlow
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:7352   .text._Z10fxModeMenui:00000314 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:7647   .text._Z10fxModeMenui:000004c0 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:7669   .text._Z15fxPressFunctiontb:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:7676   .text._Z15fxPressFunctiontb:00000000 _Z15fxPressFunctiontb
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:7733   .text._Z15fxPressFunctiontb:00000048 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8229   .bss.objLeadVoice:00000000 objLeadVoice
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:7741   .text._Z17fxReleaseFunctiont:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:7748   .text._Z17fxReleaseFunctiont:00000000 _Z17fxReleaseFunctiont
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:7786   .text._Z17fxReleaseFunctiont:00000024 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:7796   .text._ZN12clasCapTouch7mConfigEv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:7803   .text._ZN12clasCapTouch7mConfigEv:00000000 _ZN12clasCapTouch7mConfigEv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:9867   .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE6ConfigC2Ev:00000000 _ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE6ConfigC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:9918   .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE4InitENS2_6ConfigE:00000000 _ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE4InitENS2_6ConfigE
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:7934   .text._ZN12clasCapTouch10SetOnTouchEPFvtbE:00000000 _ZN12clasCapTouch10SetOnTouchEPFvtbE
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:7976   .text._ZN12clasCapTouch12SetOnReleaseEPFvtE:00000000 _ZN12clasCapTouch12SetOnReleaseEPFvtE
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:7867   .text._ZN12clasCapTouch7mConfigEv:0000005c $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:7874   .text._ZN12clasCapTouch4InitEN5daisy9DaisySeedE:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:7881   .text._ZN12clasCapTouch4InitEN5daisy9DaisySeedE:00000000 _ZN12clasCapTouch4InitEN5daisy9DaisySeedE
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:7927   .text._ZN12clasCapTouch10SetOnTouchEPFvtbE:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:7969   .text._ZN12clasCapTouch12SetOnReleaseEPFvtE:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8011   .text._ZN12clasCapTouch7ProcessEv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8018   .text._ZN12clasCapTouch7ProcessEv:00000000 _ZN12clasCapTouch7ProcessEv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10098  .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE7TouchedEv:00000000 _ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE7TouchedEv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8160   .text._ZN12clasCapTouch7ProcessEv:000000c0 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8169   .bss.hw:00000000 hw
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8166   .bss.hw:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8172   .text._ZN12clasCapTouchC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8179   .text._ZN12clasCapTouchC2Ev:00000000 _ZN12clasCapTouchC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10142  .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEEC2Ev:00000000 _ZN5daisy6Mpr121INS_18Mpr121I2CTransportEEC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8179   .text._ZN12clasCapTouchC2Ev:00000000 _ZN12clasCapTouchC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8222   .bss.objTouch:00000000 objTouch
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8219   .bss.objTouch:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8226   .bss.objLeadVoice:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8232   .text._ZN21clasSecondOrderFilterC2Ev:00000000 $t
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 293


C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8239   .text._ZN21clasSecondOrderFilterC2Ev:00000000 _ZN21clasSecondOrderFilterC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8277   .text._ZN21clasSecondOrderFilterC2Ev:00000024 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8239   .text._ZN21clasSecondOrderFilterC2Ev:00000000 _ZN21clasSecondOrderFilterC1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8288   .bss.objLPFLeadVoice:00000000 objLPFLeadVoice
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8285   .bss.objLPFLeadVoice:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8292   .bss.objLFOSlow:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8299   .bss.objLFOFast:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8305   .rodata._ZL10ADC_SCALAR:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8308   .rodata._ZL10ADC_SCALAR:00000000 _ZL10ADC_SCALAR
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8315   .bss.AmpLead:00000000 AmpLead
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8312   .bss.AmpLead:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8322   .bss.adcPT1:00000000 adcPT1
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8319   .bss.adcPT1:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8329   .bss.adcPT2:00000000 adcPT2
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8326   .bss.adcPT2:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8336   .bss.adcPT3:00000000 adcPT3
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8333   .bss.adcPT3:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8343   .bss.adcPT4:00000000 adcPT4
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8340   .bss.adcPT4:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8350   .bss.adcPT5:00000000 adcPT5
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8347   .bss.adcPT5:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8357   .bss.adcPT6:00000000 adcPT6
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8354   .bss.adcPT6:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8364   .bss.adcPT7:00000000 adcPT7
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8361   .bss.adcPT7:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8371   .bss.adcPT8:00000000 adcPT8
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8368   .bss.adcPT8:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8378   .bss.adcPT9:00000000 adcPT9
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8375   .bss.adcPT9:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8385   .bss.adcPT10:00000000 adcPT10
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8382   .bss.adcPT10:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8388   .bss._ZL10objFilter1:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8391   .bss._ZL10objFilter1:00000000 _ZL10objFilter1
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8394   .bss._ZL10objFilter2:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8397   .bss._ZL10objFilter2:00000000 _ZL10objFilter2
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8400   .bss._ZL11objLPFDrone:00000000 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8403   .bss._ZL11objLPFDrone:00000000 _ZL11objLPFDrone
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8406   .text._Z15fxPolynomialMapffff:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8413   .text._Z15fxPolynomialMapffff:00000000 _Z15fxPolynomialMapffff
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10232  .text._ZSt4fminIfdEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_:00000000 _ZSt4fminIfdEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8491   .text._Z15fxPolynomialMapffff:00000098 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8497   .text._ZL13AudioCallbackPKfPfj:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8503   .text._ZL13AudioCallbackPKfPfj:00000000 _ZL13AudioCallbackPKfPfj
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8861   .text._ZL13AudioCallbackPKfPfj:0000026c $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8876   .text.main:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:8883   .text.main:00000000 main
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:9199   .text.main:000002b0 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:9211   .text.main:000002e0 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:9281   .text.main:00000358 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:9308   .text.main:000003bc $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:9509   .text.main:00000560 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:9523   .text.main:00000590 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:9715   .text.main:00000754 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:9739   .text._ZSt3powIfiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:9784   .text._ZN5daisy9DaisySeed9PrintLineIJEEEvPKcDpT_:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:9821   .text._ZN5daisy9DaisySeed9PrintLineIJiEEEvPKcDpT_:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:9860   .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE6ConfigC2Ev:00000000 $t
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 294


C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:9867   .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE6ConfigC2Ev:00000000 _ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE6ConfigC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:9911   .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE4InitENS2_6ConfigE:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10274  .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15SetTransportErrEb:00000000 _ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15SetTransportErrEb
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10326  .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh:00000000 _ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10469  .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13SetThresholdsEhh:00000000 _ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13SetThresholdsEhh
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10543  .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15GetTransportErrEv:00000000 _ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15GetTransportErrEv
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10091  .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE7TouchedEv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10601  .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE14ReadRegister16Eh:00000000 _ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE14ReadRegister16Eh
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10135  .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEEC2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10142  .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEEC2Ev:00000000 _ZN5daisy6Mpr121INS_18Mpr121I2CTransportEEC2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10182  .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEED2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10189  .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEED2Ev:00000000 _ZN5daisy6Mpr121INS_18Mpr121I2CTransportEED2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10189  .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEED2Ev:00000000 _ZN5daisy6Mpr121INS_18Mpr121I2CTransportEED1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10225  .text._ZSt4fminIfdEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10267  .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15SetTransportErrEb:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10319  .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13WriteRegisterEhh:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10462  .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE13SetThresholdsEhh:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10536  .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE15GetTransportErrEv:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10594  .text._ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE14ReadRegister16Eh:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10654  .text.__tcf_0:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10660  .text.__tcf_0:00000000 __tcf_0
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10699  .text.__tcf_0:00000020 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10705  .text._ZN12clasCapTouchD2Ev:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10712  .text._ZN12clasCapTouchD2Ev:00000000 _ZN12clasCapTouchD2Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10712  .text._ZN12clasCapTouchD2Ev:00000000 _ZN12clasCapTouchD1Ev
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10751  .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10757  .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10927  .text._Z41__static_initialization_and_destruction_0ii:00000144 $d
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10958  .text._GLOBAL__sub_I_aobjSingleOscillator:00000000 $t
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10964  .text._GLOBAL__sub_I_aobjSingleOscillator:00000000 _GLOBAL__sub_I_aobjSingleOscillator
C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s:10985  .init_array:00000000 $d
                           .group:00000000 _ZN7daisysp7OnePoleC5Ev
                           .group:00000000 _ZN7daisysp7OnePoleD5Ev
                           .group:00000000 _ZN5daisy3PinC5ENS_8GPIOPortEh
                           .group:00000000 _ZN5daisy3PinC5Ev
                           .group:00000000 _ZN5daisy11TimerHandle6ConfigC5Ev
                           .group:00000000 _ZN5daisy11TimerHandleC5Ev
                           .group:00000000 _ZN5daisy11TimerHandleD5Ev
                           .group:00000000 _ZN5daisy6SystemC5Ev
                           .group:00000000 _ZN5daisy6SystemD5Ev
                           .group:00000000 _ZN5daisy10QSPIHandleC5Ev
                           .group:00000000 _ZN5daisy9DacHandleC5Ev
                           .group:00000000 _ZN5daisy9I2CHandleC5Ev
                           .group:00000000 _ZN5daisy18Mpr121I2CTransportC5Ev
                           .group:00000000 _ZN5daisy18Mpr121I2CTransportD5Ev
                           .group:00000000 _ZN5daisy18Mpr121I2CTransport6ConfigC5Ev
                           .group:00000000 _ZN5daisy9I2CHandle6ConfigC5Ev
                           .group:00000000 _ZN5daisy9SaiHandleC5Ev
                           .group:00000000 _ZN5daisy11AudioHandleC5Ev
                           .group:00000000 _ZN5daisy11AudioHandleD5Ev
                           .group:00000000 _ZN5daisy9AdcHandleC5Ev
                           .group:00000000 _ZN5daisy9AdcHandleD5Ev
                           .group:00000000 _ZN5daisy9UsbHandleC5Ev
                           .group:00000000 _ZN5daisy9UsbHandleD5Ev
                           .group:00000000 _ZN5daisy6SwitchC5Ev
                           .group:00000000 _ZN5daisy6SwitchD5Ev
                           .group:00000000 _ZN5daisy9DaisySeedC5Ev
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 295


                           .group:00000000 _ZN5daisy9DaisySeedD5Ev
                           .group:00000000 _ZN5daisy11clasEncoderC5Ev
                           .group:00000000 _ZN5daisy11clasEncoderD5Ev
                           .group:00000000 _ZN14clasOscillatorC5Ev
                           .group:00000000 _ZN14clasOscillatorD5Ev
                           .group:00000000 _ZN12clasCapTouchC5Ev
                           .group:00000000 _ZN21clasSecondOrderFilterC5Ev
                           .group:00000000 _ZN5daisy6Mpr121INS_18Mpr121I2CTransportEE6ConfigC5Ev
                           .group:00000000 _ZN5daisy6Mpr121INS_18Mpr121I2CTransportEEC5Ev
                           .group:00000000 _ZN5daisy6Mpr121INS_18Mpr121I2CTransportEED5Ev
                           .group:00000000 _ZN12clasCapTouchD5Ev

UNDEFINED SYMBOLS
expf
logf
tanf
_ZN5daisy9I2CHandle4InitERKNS0_6ConfigE
_ZN5daisy9I2CHandle16TransmitBlockingEtPhtm
_ZN5daisy9I2CHandle15ReceiveBlockingEtPhtm
tan
_ZN5daisy11clasEncoder4InitE12dsy_gpio_pinS1_S1_f
_ZN5daisy11TimerHandle4InitERKNS0_6ConfigE
_ZN5daisy11TimerHandle12SetPrescalerEm
_ZN5daisy11TimerHandle5StartEv
_ZN5daisy6System6GetNowEv
_ZN14clasOscillator4InitEf8OSC_TYPE
_ZN14clasOscillator7SetFreqEf
_ZN14clasOscillator11SetWaveformEh
_ZN5daisy11TimerHandle7GetTickEv
_ZN14clasOscillator7GetFreqEv
_ZN5daisy11TimerHandle4StopEv
_ZN5daisy11TimerHandle11SetCallbackEPFvPvES1_
_ZN5daisy11clasEncoder8DebounceEv
_ZN14clasOscillator6GetAmpEv
_ZN14clasOscillator6SetAmpEf
_ZN14clasOscillator8GetDepthEv
_ZN14clasOscillator8SetDepthEf
_ZN14clasOscillator11GetWaveformEv
_ZN14clasOscillator8GetRatioEv
_ZN14clasOscillator8SetRatioEh
powf
_ZN20clasEulersOscillatorILi16EE19GetHarmonicWaveFormEv
_ZN20clasEulersOscillatorILi16EE19SetHarmonicWaveFormEh
_ZN14clasOscillator10SetTromoloEv
_ZN14clasOscillator10SetVibratoEv
_ZN20clasEulersOscillatorILi16EE7SetFreqEf
fmax
_ZN14clasOscillator7ProcessEv
_ZN14clasOscillator10LFOProcessEf
_ZN20clasEulersOscillatorILi16EE7ProcessEv
_ZN20clasEulersOscillatorILi16EE6SetAmpEf
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN5daisy9DaisySeed6GetPinEh
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
ARM GAS  C:\Users\jandr\AppData\Local\Temp\ccdSU3vQ.s 			page 296


_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN20clasEulersOscillatorILi16EE4InitEf
_ZN5daisy9DaisySeed10StartAudioEPFvPKfPfjE
_ZN5daisy6Switch8DebounceEv
_ZNK5daisy9AdcHandle8GetFloatEh
_ZN20clasEulersOscillatorILi16EE10SetRealAmpEf
_ZN20clasEulersOscillatorILi16EE10SetImagAmpEf
pow
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
_ZN5daisy6System5DelayEm
fmin
__aeabi_atexit
__dso_handle
